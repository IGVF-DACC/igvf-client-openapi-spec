{
    "components": {
        "schemas": {
            "AccessKey": {
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "access_key_id": {
                        "description": "An access key.",
                        "title": "Access Key ID",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the access key.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
                        "title": "Description",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "secret_access_key_hash": {
                        "description": "A secret access key.",
                        "title": "Secret Access Key Hash",
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "current",
                            "deleted"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "user": {
                        "description": "The user that is assigned to this access key.",
                        "title": "User",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Access Key",
                "type": "object"
            },
            "AlignmentFile": {
                "additionalProperties": false,
                "description": "A file containing alignment data in bam format.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "anvil_url": {
                        "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                        "title": "AnVIL URL",
                        "type": "string"
                    },
                    "assembly": {
                        "description": "Genome assembly applicable for the annotation data.",
                        "enum": [
                            "GRCh38",
                            "GRCm39"
                        ],
                        "title": "Genome Assembly",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_summary": {
                        "description": "A summary of the data in the alignment file.",
                        "title": "Content Summary",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "controlled_access": {
                        "description": "Boolean value, indicating the file being controlled access, if true.",
                        "title": "Controlled Access",
                        "type": "boolean"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "bam"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "filtered": {
                        "description": "Indicates whether reads that did not pass a filtering step, such as PCR duplicates, have been removed from the file.",
                        "title": "Filtered",
                        "type": "boolean"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "redacted": {
                        "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information.",
                        "title": "Redacted",
                        "type": "boolean"
                    },
                    "reference_files": {
                        "description": "Link to the reference files used to generate this file.",
                        "items": {
                            "description": "Link to a reference file used to generate this file.",
                            "title": "Reference File",
                            "type": "string"
                        },
                        "title": "Reference Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the alignment file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "transcriptome_annotation": {
                        "description": "The annotation and version of the reference resource.",
                        "enum": [
                            "GENCODE 40",
                            "GENCODE 41",
                            "GENCODE 42",
                            "GENCODE 43",
                            "GENCODE 44",
                            "GENCODE 45",
                            "GENCODE M30",
                            "GENCODE M31",
                            "GENCODE M32",
                            "GENCODE M33",
                            "GENCODE M34"
                        ],
                        "title": "Transcriptome Annotation",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Alignment File",
                "type": "object"
            },
            "AnalysisSet": {
                "additionalProperties": false,
                "description": "A file set for analyses. Analysis sets represent the results of a computational analysis of raw genomic data or other analyses.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "assay_titles": {
                        "description": "Title(s) of assays that produced data analyzed in the analysis set.",
                        "items": {
                            "description": "Title of assay that produced data analyzed in the analysis set.",
                            "title": "Assay Title",
                            "type": "string"
                        },
                        "title": "Assay Titles",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "pattern": "^GEO:GSE\\d+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donors of the samples associated with this analysis set.",
                        "items": {
                            "description": "Donor of a sample associated with this analysis set.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set_type": {
                        "description": "The level of this analysis set. An intermediate analysis cannot be interpreted on its own and is part of a principal analysis. A principal analysis is the core analysis for an experimental design, the results of which can be interpretable on their own.",
                        "enum": [
                            "intermediate analysis",
                            "principal analysis"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_sets": {
                        "description": "The file set(s) required for this analysis.",
                        "items": {
                            "description": "A file set that serves as input for this file set.",
                            "title": "Input File Set",
                            "type": "string"
                        },
                        "title": "Input File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The sample(s) associated with this file set.",
                        "items": {
                            "description": "A sample associated with this file set.",
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Analysis Set",
                "type": "object"
            },
            "AnalysisStep": {
                "additionalProperties": false,
                "description": "A step in a computational analysis workflow. For example, a sequence alignment step that represents the phase of the computational analysis in which sequenced reads are being aligned to the reference genome.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_types": {
                        "description": "The classification of the software.",
                        "items": {
                            "enum": [
                                "alignment",
                                "file format conversion",
                                "signal generation"
                            ],
                            "title": "Type",
                            "type": "string"
                        },
                        "title": "Analysis Step Types",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "input_content_types": {
                        "description": "The content types used as input for the analysis step.",
                        "items": {
                            "description": "A content type used as input for the analysis step.",
                            "title": "Input Content Type",
                            "type": "string"
                        },
                        "title": "Input Content Types",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "name": {
                        "description": "Full name of the analysis step.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "output_content_types": {
                        "description": "The content types produced as output by the analysis step.",
                        "items": {
                            "description": "A content type produced as output by the analysis step.",
                            "title": "Output Content Type",
                            "type": "string"
                        },
                        "title": "Output Content Types",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "parents": {
                        "description": "The precursor steps.",
                        "items": {
                            "description": "A precursor step.",
                            "title": "Parent",
                            "type": "string"
                        },
                        "title": "Parents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "step_label": {
                        "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step",
                        "pattern": "^[a-z0-9-]+-step$",
                        "title": "Step Label",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
                        "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                        "title": "Title",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "workflow": {
                        "description": "The computational workflow in which this analysis step belongs.",
                        "title": "Workflow",
                        "type": "string"
                    }
                },
                "title": "Analysis Step",
                "type": "object"
            },
            "AnalysisStepVersion": {
                "additionalProperties": false,
                "description": "A step version in a computational analysis workflow.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step": {
                        "description": "The analysis step which this version belongs to.",
                        "title": "Analysis Step",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "software_versions": {
                        "description": "The software versions used in this analysis step versions.",
                        "items": {
                            "description": "The software versions used in this analysis step versions.",
                            "title": "Software Versions",
                            "type": "string"
                        },
                        "title": "Software Versions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Analysis Step Version",
                "type": "object"
            },
            "AssayTerm": {
                "additionalProperties": false,
                "description": "An ontology term from Ontology of Biomedical Investigations (OBI) for assays.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ancestors": {
                        "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Ancestors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "assay_slims": {
                        "description": "A broad categorization of the assay term.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Assay Type",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "category_slims": {
                        "description": "The type of feature or interaction measured by the assay.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Assay Category",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "deprecated_ntr_terms": {
                        "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                        "items": {
                            "description": "NTR term ID",
                            "pattern": "^NTR:[0-9]{2,8}$",
                            "title": "Term ID",
                            "type": "string"
                        },
                        "title": "Deprecated NTR terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "is_a": {
                        "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                        "items": {
                            "title": "Ontology Term",
                            "type": "string"
                        },
                        "title": "Is A",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "name": {
                        "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "objective_slims": {
                        "description": "The purpose of the assay.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Assay Objective",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ontology": {
                        "description": "The ontology in which the term is recorded.",
                        "title": "Ontology",
                        "type": "string"
                    },
                    "preferred_assay_titles": {
                        "description": "The custom lab preferred labels that this assay term may be associated with.",
                        "items": {
                            "description": "The custom lab preferred label for the experiment performed in this measurement set.",
                            "enum": [
                                "10x multiome",
                                "10x multiome with MULTI-seq",
                                "AAV-MPRA",
                                "ATAC-seq",
                                "CERES-seq",
                                "Cell painting",
                                "CRISPR FlowFISH",
                                "DOGMA-seq",
                                "Histone ChIP-seq",
                                "Hi-C",
                                "HT-recruit",
                                "lentiMPRA",
                                "MERFISH",
                                "MIAA",
                                "mN2H",
                                "MPRA",
                                "MPRA (scQer)",
                                "MULTI-seq",
                                "Parse SPLiT-seq",
                                "Perturb-seq",
                                "RNA-seq",
                                "SGE",
                                "scATAC-seq",
                                "scNT-seq",
                                "scNT-seq2",
                                "scRNA-seq",
                                "semi-qY2H",
                                "SHARE-seq",
                                "smFISH",
                                "snATAC-seq",
                                "snmC-Seq2",
                                "snMCT-seq",
                                "snM3C-seq",
                                "snRNA-seq",
                                "Spatial transcriptomics",
                                "SUPERSTARR",
                                "TAP-seq",
                                "TF ChIP-seq",
                                "VAMP-seq",
                                "Variant FlowFISH",
                                "Variant painting",
                                "Y2H",
                                "yN2H"
                            ],
                            "title": "Preferred Assay Title",
                            "type": "string"
                        },
                        "title": "Preferred Assay Titles",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the ontology term.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "synonyms": {
                        "description": "Synonyms for the term that have been recorded in an ontology.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Synonyms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "term_id": {
                        "description": "An ontology term identifier describing an assay.",
                        "pattern": "^(OBI|NTR):[0-9]{2,8}$",
                        "title": "Term ID",
                        "type": "string"
                    },
                    "term_name": {
                        "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                        "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                        "title": "Term Name",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Assay Term",
                "type": "object"
            },
            "AuxiliarySet": {
                "additionalProperties": false,
                "description": "Auxiliary set is a file set that hosts raw data files (e.g. FASTQs) resulting from sequencing of nucleic acids of a sample that are a proxy to some vital information and necessary for the analysis of an associated measurement set. Auxiliary sets usually would not provide any information about the transcriptome or the genome of the sample in question. For example auxiliary sets would include the sequencing of barcodes that correspond to the elements introduced into cells, or sequencing of guide RNA coding sequences in the cells. The files hosted in the auxiliary sets are relevant for the analysis, but they by themselves are not assessing much of the biology of the sample being analyzed.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "pattern": "^GEO:GSE\\d+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donors of the samples associated with this auxiliary set.",
                        "items": {
                            "description": "Donor of a sample associated with this auxiliary set.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set_type": {
                        "description": "The category that best describes this auxiliary file set.",
                        "enum": [
                            "cell hashing",
                            "cell sorting",
                            "circularized RNA barcode detection",
                            "gRNA sequencing",
                            "oligo-conjugated lipids",
                            "quantification DNA barcode sequencing",
                            "variant sequencing"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "measurement_sets": {
                        "description": "The measurement sets that link to this auxiliary set.",
                        "items": {
                            "title": "Measurement Set",
                            "type": "string"
                        },
                        "title": "Measurement Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The sample(s) associated with this file set.",
                        "items": {
                            "description": "A sample associated with this file set.",
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Auxiliary Set",
                "type": "object"
            },
            "Award": {
                "additionalProperties": false,
                "description": "A grant providing financial support for a scientific project. For example, HG012076 supporting \"Single-cell Mapping Center for Human Regulatory Elements and Gene Activity.\"",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "component": {
                        "description": "The project component the award is associated with.",
                        "enum": [
                            "affiliate",
                            "data analysis",
                            "data coordination",
                            "functional characterization",
                            "mapping",
                            "networks",
                            "predictive modeling"
                        ],
                        "title": "Project Component",
                        "type": "string"
                    },
                    "contact_pi": {
                        "description": "The contact Principal Investigator of the grant.",
                        "title": "Contact P.I.",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "end_date": {
                        "description": "The date when the award concludes.",
                        "title": "End Date",
                        "type": "string"
                    },
                    "name": {
                        "description": "The official grant number from the NIH database, if applicable",
                        "pattern": "^[A-Za-z0-9\\-]+$",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "pis": {
                        "description": "Principal Investigator(s) of the grant.",
                        "items": {
                            "description": "User object of the investigator.",
                            "title": "Investigator",
                            "type": "string"
                        },
                        "title": "Principal Investigators",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "project": {
                        "description": "The collection of biological data related to a single initiative, originating from a consortium.",
                        "enum": [
                            "community",
                            "ENCODE",
                            "IGVF"
                        ],
                        "title": "Project",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "The date when the award begins.",
                        "title": "Start Date",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "current",
                            "deleted",
                            "disabled"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the award.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "The grant name from the NIH database, if applicable.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Title",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "viewing_group": {
                        "description": "The group that determines which set of data the user has permission to view.",
                        "enum": [
                            "community",
                            "IGVF"
                        ],
                        "title": "View Access Group",
                        "type": "string"
                    }
                },
                "title": "Grant",
                "type": "object"
            },
            "Biomarker": {
                "additionalProperties": false,
                "description": "A biomarker, such as a cell surface protein, that is measured, detected, or used for sample sorting based upon the biomarker's presence, absence, or quantification. For example, a CD19 positive biomarker that was detected in a sample.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biomarker_for": {
                        "description": "The samples which have been confirmed to have this biomarker.",
                        "items": {
                            "title": "Biomarker For",
                            "type": "string"
                        },
                        "title": "Biomarker For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "classification": {
                        "description": "Sample specific biomarker.",
                        "enum": [
                            "cell surface protein",
                            "marker gene"
                        ],
                        "title": "Classification",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "gene": {
                        "description": "Biomarker gene.",
                        "title": "Gene",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "name": {
                        "description": "The biomarker name.",
                        "title": "Name",
                        "type": "string"
                    },
                    "name_quantification": {
                        "description": "A concatenation of the name and quantification of the biomarker.",
                        "title": "Name and Quantification",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "quantification": {
                        "description": "The biomarker association to the biosample, disease or other condition.  This can be the absence of the biomarker or the presence of the biomarker in some low, intermediate or high quantity.",
                        "enum": [
                            "negative",
                            "positive",
                            "low",
                            "intermediate",
                            "high"
                        ],
                        "title": "Quantification",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "synonyms": {
                        "description": "Alternate names for this biomarker.",
                        "items": {
                            "title": "Synonym",
                            "type": "string"
                        },
                        "title": "Synonyms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Biomarker",
                "type": "object"
            },
            "ConfigurationFile": {
                "additionalProperties": false,
                "description": "A file containing configuration settings or information defining the structure of other data files' content.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "yaml",
                            "json"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "seqspec_of": {
                        "description": "Sequence files this file is a seqspec of.",
                        "items": {
                            "title": "Seqspec Of",
                            "type": "string"
                        },
                        "title": "Seqspec Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the configuration file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Configuration File",
                "type": "object"
            },
            "ConstructLibrarySet": {
                "additionalProperties": false,
                "description": "Construct library set is a file set that hosts raw data files (e.g. FASTQs) resulting from sequencing of a library prior to its delivery into the samples being investigated. For example sequencing results of guide RNAs after cloning them but prior to their delivery to the actual samples under investigation. The results thus represent the sequencing output of the guides that are then introduced into cells, but may not always correspond to what exact guides ended up being delivered or expressed. Not all construct library sets will end up having FASTQs or any other files in them. For example if the lab chooses not to sequence their guide library prior to delivery, no FASTQs will be required in that case. Construct library sets should not be associated with any samples because they are designed to capture the library prior to its delivery and hence, has no relation to the ample that will get the plasmids eventually.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "applied_to_samples": {
                        "description": "The samples that link to this construct library set.",
                        "items": {
                            "title": "Applied to Sample",
                            "type": "string"
                        },
                        "title": "Applied to Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "associated_phenotypes": {
                        "description": "Ontological terms for diseases or phenotypes associated with the sequence material cloned in this construct library.",
                        "items": {
                            "title": "Associated Phenotype",
                            "type": "string"
                        },
                        "title": "Associated Phenotypes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "average_guide_coverage": {
                        "description": "The average number of guides targeting each element of interest in the library.",
                        "minimum": 0,
                        "title": "Average Guide Coverage",
                        "type": "number"
                    },
                    "average_insert_size": {
                        "description": "The average size of the inserts cloned into vectors in the library.",
                        "minimum": 0,
                        "title": "Average Insert Size",
                        "type": "number"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "exon": {
                        "description": "An identifier in plain text for the specific exon in an expression vector library. The associated gene must be listed in the small_scale_gene_list property.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Exon",
                        "type": "string"
                    },
                    "file_set_type": {
                        "description": "The type or category of this construct library set.",
                        "enum": [
                            "guide library",
                            "reporter library",
                            "expression vector library",
                            "editing template library"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "guide_type": {
                        "description": "The design of guides used in a CRISPR library, paired-guide (pgRNA) or single-guide (sgRNA).",
                        "enum": [
                            "sgRNA",
                            "pgRNA"
                        ],
                        "title": "Guide Type",
                        "type": "string"
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_content_files": {
                        "description": "The files containing sequence material of interest either used for insert design or directly cloned into vectors in this library.",
                        "items": {
                            "title": "Integrated Content File",
                            "type": "string"
                        },
                        "title": "Integrated Content Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "large_scale_gene_list": {
                        "description": "The large scale list of (>100 genes) this construct library was designed to target.",
                        "title": "Large Scale Gene List",
                        "type": "string"
                    },
                    "large_scale_loci_list": {
                        "description": "A large scale list (>100) of specific chromosomal regions.",
                        "title": "Large Scale Loci List",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "lower_bound_guide_coverage": {
                        "description": "Lower bound of the number of guides targeting each element of interest in the library.",
                        "title": "Lower Bound Guide Coverage",
                        "type": "integer"
                    },
                    "lower_bound_insert_size": {
                        "description": "Lower bound of the size of the inserts cloned in vectors in the library.",
                        "title": "Lower Bound Insert Size",
                        "type": "integer"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "orf_list": {
                        "description": "List of Open Reading Frame this construct library was designed to target.",
                        "items": {
                            "description": "List of Open Reading Frame this construct library was designed to target.",
                            "title": "List of Open Reading Frames (ORF).",
                            "type": "string"
                        },
                        "title": "List of Open Reading Frames (ORF)",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "product_id": {
                        "description": "The product or catalog identifier provided following deposition to addgene.org.",
                        "pattern": "^addgene:\\d{5,6}$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "scope": {
                        "description": "The scope or scale that this construct library is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property. If exon is specified, an exon identifier and the associated gene will need to be listed in exon and genes properties. If tile is specified, a tile identifier, start and stop coordinates, and the associated gene will need to be listed in tile and small_scale_gene_list or large_scale_gene_list properties.",
                        "enum": [
                            "tile",
                            "exon",
                            "genes",
                            "loci",
                            "genome-wide",
                            "interactors",
                            "alleles",
                            "targeton"
                        ],
                        "title": "Library Construct Scope",
                        "type": "string"
                    },
                    "selection_criteria": {
                        "description": "The criteria used to select the sequence material cloned into the library.",
                        "items": {
                            "description": "The criterion used to select or design the sequence material cloned into the library.",
                            "enum": [
                                "accessible genome regions",
                                "candidate cis-regulatory elements",
                                "chromatin states",
                                "phenotype-associated variants",
                                "DNase hypersensitive sites",
                                "genes",
                                "histone modifications",
                                "protein interactors",
                                "sequence variants",
                                "synthetic elements",
                                "transcription start sites",
                                "TF binding sites"
                            ],
                            "title": "Selection Criterion",
                            "type": "string"
                        },
                        "title": "Selection Criteria",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "small_scale_gene_list": {
                        "description": "The specific, small scale list of (<=100) gene(s) this construct library was designed to target. This property differs from targeted_genes in Measurement Set, which describes genes targeted for binding sites or used for sorting by expression.",
                        "items": {
                            "title": "Gene",
                            "type": "string"
                        },
                        "title": "Small Scale Gene List",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "small_scale_loci_list": {
                        "description": "A small scale (<=100) list of specific chromosomal region(s).",
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "assembly": {
                                    "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                                    "enum": [
                                        "GRCh38",
                                        "GRCm39"
                                    ],
                                    "title": "Mapping assembly",
                                    "type": "string"
                                },
                                "chromosome": {
                                    "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                                    "pattern": "^(chr[0-9A-Za-z_]+)$",
                                    "title": "Chromosome",
                                    "type": "string"
                                },
                                "end": {
                                    "description": "The 1-based, closed (inclusive) ending coordinate.",
                                    "minimum": 1,
                                    "title": "End",
                                    "type": "integer"
                                },
                                "start": {
                                    "description": "The 1-based, closed (inclusive) starting coordinate.",
                                    "minimum": 1,
                                    "title": "Start",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "assembly",
                                "chromosome",
                                "start",
                                "end"
                            ],
                            "title": "Locus",
                            "type": "object"
                        },
                        "title": "Small Scale Loci List",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "targeton": {
                        "description": "An identifier in plain text for the specific targeton in an editing template library. The associated gene must be listed in the small_scale_gene_list property.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Targeton",
                        "type": "string"
                    },
                    "tile": {
                        "additionalProperties": false,
                        "description": "The coordinates and an identifier in plain text for the specific tile of a protein region cloned in an expression vector library. The associated gene for this protein must be listed in the small_scale_gene_list or large_scale_gene_list property.",
                        "properties": {
                            "tile_end": {
                                "description": "The 1-based, closed (inclusive) ending coordinate.",
                                "minimum": 1,
                                "title": "Tile End",
                                "type": "integer"
                            },
                            "tile_id": {
                                "description": "An identifier in plain text for the specific tile of a protein region cloned in an expression vector library.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Tile ID",
                                "type": "string"
                            },
                            "tile_start": {
                                "description": "The 1-based, closed (inclusive) starting coordinate.",
                                "minimum": 1,
                                "title": "Tile Start",
                                "type": "integer"
                            }
                        },
                        "title": "Tile",
                        "type": "object"
                    },
                    "tiling_modality": {
                        "description": "The tiling modality of guides across elements or loci in a CRISPR library.",
                        "enum": [
                            "peak tiling",
                            "full tiling",
                            "sparse peaks"
                        ],
                        "title": "Tiling Modality",
                        "type": "string"
                    },
                    "upper_bound_guide_coverage": {
                        "description": "Upper bound of the number of guides targeting each element of interest in the library.",
                        "title": "Upper Bound Guide Coverage",
                        "type": "integer"
                    },
                    "upper_bound_insert_size": {
                        "description": "Upper bound of the size of the inserts cloned in vectors in the library.",
                        "title": "Upper Bound Insert Size",
                        "type": "integer"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Construct Library Set",
                "type": "object"
            },
            "CrisprModification": {
                "additionalProperties": false,
                "description": "A CRISPR modification altering sample genomic material. For example, CRISPRi dCas9-KRAB modification.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "activated": {
                        "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
                        "title": "Activated",
                        "type": "boolean"
                    },
                    "activating_agent_term_id": {
                        "description": "The CHEBI identifier for the activating agent of the modification.",
                        "pattern": "^CHEBI:[0-9]{1,7}$",
                        "title": "Activating Agent Term ID",
                        "type": "string"
                    },
                    "activating_agent_term_name": {
                        "description": "The CHEBI name for the activating agent of the modification.",
                        "title": "Activating Agent Term Name",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biosamples_modified": {
                        "description": "The biosamples which have been modified with this modification.",
                        "items": {
                            "title": "Biosamples Modified",
                            "type": "string"
                        },
                        "title": "Biosamples Modified",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cas": {
                        "description": "The name of the CRISPR associated protein used in the modification.",
                        "enum": [
                            "Cas9",
                            "Cas12a",
                            "Cas13",
                            "dCas9",
                            "nCas9",
                            "SpG",
                            "SpRY"
                        ],
                        "title": "Cas",
                        "type": "string"
                    },
                    "cas_species": {
                        "description": "The originating species of the Cas nuclease.",
                        "enum": [
                            "Streptococcus pyogenes (Sp)",
                            "Staphylococcus aureus (Sa)",
                            "Campylobacter jejuni (Cj)",
                            "Neisseria meningitidis (Nm)"
                        ],
                        "title": "Cas species",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "fused_domain": {
                        "description": "The name of the molecule fused to a Cas protein.",
                        "enum": [
                            "2xVP64",
                            "3xVP64",
                            "ABE8e",
                            "ABE8.20",
                            "ANTI-FLAG",
                            "BE4",
                            "BE4max",
                            "eA3A",
                            "eA3A-T31A",
                            "eA3A-T44D-S45A",
                            "KOX1-KRAB",
                            "M-MLV RT (PE2)",
                            "p300",
                            "TdCBE",
                            "TdCGBE",
                            "TdDE",
                            "VPH",
                            "VP64",
                            "VP64-p65-Rta (VPR)",
                            "ZIM3-KRAB"
                        ],
                        "title": "Fused Domain",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "modality": {
                        "description": "The purpose or intended effect of a modification.",
                        "enum": [
                            "activation",
                            "base editing",
                            "cutting",
                            "interference",
                            "knockout",
                            "localizing",
                            "prime editing"
                        ],
                        "title": "Modality",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "The product or catalog identifier provided following deposition to addgene.org.",
                        "pattern": "^addgene:\\d{5,6}$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "tagged_protein": {
                        "description": "The tagged protein in modifications in which the Cas nuclease is fused to an antibody.",
                        "title": "Tagged Protein",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "CRISPR Modification",
                "type": "object"
            },
            "CuratedSet": {
                "additionalProperties": false,
                "description": "A file set for reference files which are utilized in the analysis of IGVF experiments. For example, genomic references from GENCODE.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "assemblies": {
                        "description": "The genome assemblies to which the referencing files in the file set are utilizing (e.g., GRCh38).",
                        "items": {
                            "title": "Assembly",
                            "type": "string"
                        },
                        "title": "Assemblies",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "pattern": "^GEO:GSE\\d+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donor(s) associated with this file set.",
                        "items": {
                            "description": "A donor associated with this file set.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set_type": {
                        "description": "The category that best describes this curated file set.",
                        "enum": [
                            "barcodes",
                            "editing templates",
                            "elements",
                            "external data for catalog",
                            "genome",
                            "genes",
                            "guide RNAs",
                            "transcriptome",
                            "variants"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The sample(s) associated with this file set.",
                        "items": {
                            "description": "A sample associated with this file set.",
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens",
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "transcriptome_annotations": {
                        "description": "The annotation versions of the reference resource.",
                        "items": {
                            "title": "Transcriptome Annotation",
                            "type": "string"
                        },
                        "title": "Transcriptome Annotations",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Curated Set",
                "type": "object"
            },
            "DegronModification": {
                "additionalProperties": false,
                "description": "A degron modification that can induce degradation of a protein.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "activated": {
                        "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
                        "title": "Activated",
                        "type": "boolean"
                    },
                    "activating_agent_term_id": {
                        "description": "The CHEBI identifier for the activating agent of the modification.",
                        "pattern": "^CHEBI:[0-9]{1,7}$",
                        "title": "Activating Agent Term ID",
                        "type": "string"
                    },
                    "activating_agent_term_name": {
                        "description": "The CHEBI name for the activating agent of the modification.",
                        "title": "Activating Agent Term Name",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biosamples_modified": {
                        "description": "The biosamples which have been modified with this modification.",
                        "items": {
                            "title": "Biosamples Modified",
                            "type": "string"
                        },
                        "title": "Biosamples Modified",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "degron_system": {
                        "description": "The type of degron system implemented.",
                        "enum": [
                            "AID",
                            "AlissAid",
                            "ssAID"
                        ],
                        "title": "Degron System",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "modality": {
                        "description": "The purpose or intended effect of a modification.",
                        "enum": [
                            "degradation"
                        ],
                        "title": "Modality",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "The product or catalog identifier provided following deposition to addgene.org.",
                        "pattern": "^addgene:\\d{5,6}$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "tagged_proteins": {
                        "description": "The tagged proteins which are targeted for degradation.",
                        "items": {
                            "title": "Gene",
                            "type": "string"
                        },
                        "title": "Tagged Proteins",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Degron Modification",
                "type": "object"
            },
            "Document": {
                "additionalProperties": false,
                "description": "A document with additional information regarding another object submitted to the data portal. For example, a plasmid map document associated with a transduced cell line sample.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "attachment": {
                        "additionalProperties": false,
                        "description": "The attached content.",
                        "properties": {
                            "download": {
                                "title": "File Name",
                                "type": "string"
                            },
                            "height": {
                                "minimum": 0,
                                "title": "Image Height",
                                "type": "integer"
                            },
                            "href": {
                                "title": "Hypertext REFerence",
                                "type": "string"
                            },
                            "md5sum": {
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "size": {
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": {
                                "enum": [
                                    "application/json",
                                    "application/pdf",
                                    "image/gif",
                                    "image/jpeg",
                                    "image/png",
                                    "image/svs",
                                    "image/tiff",
                                    "text/autosql",
                                    "text/html",
                                    "text/plain",
                                    "text/tab-separated-values"
                                ],
                                "title": "MIME type",
                                "type": "string"
                            },
                            "width": {
                                "minimum": 0,
                                "title": "Image Width",
                                "type": "integer"
                            }
                        },
                        "title": "Attachment",
                        "type": "object"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "characterization_method": {
                        "description": "The method used for the characterization.",
                        "enum": [
                            "FACS",
                            "immunoblot",
                            "immunofluorescence",
                            "immunoprecipitation",
                            "mass spectrometry",
                            "PCR",
                            "restriction digest",
                            "RT-qPCR",
                            "sequencing"
                        ],
                        "title": "Characterization Method",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "document_type": {
                        "description": "The category that best describes the document.",
                        "enum": [
                            "cell fate change protocol",
                            "characterization",
                            "computational protocol",
                            "experimental protocol",
                            "file format specification",
                            "image",
                            "model source data",
                            "plate map",
                            "plasmid map",
                            "plasmid sequence",
                            "standards"
                        ],
                        "title": "Document Type",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the document.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "urls": {
                        "description": "External resources with additional information to the document.",
                        "items": {
                            "description": "An external resource with additional information to the document.",
                            "title": "URL",
                            "type": "string"
                        },
                        "title": "URL",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Document",
                "type": "object"
            },
            "Gene": {
                "additionalProperties": false,
                "description": "A gene in the human or mouse genomes. The genes objects in IGVF are imported from GENCODE.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Unique identifiers from external resources.",
                        "items": {
                            "description": "A unique identifier from external resource (e.g. ENTREZ, HGNC, MGI, FlyBase, WormBase, ENSEMBL, MIM, UniProtKB, Vega, miRBase).",
                            "pattern": "^((ENTREZ:[1-9][0-9]*)|(HGNC:\\d+)|(MGI:\\d+)|(MIM:\\d+)|(UniProtKB:[0-9A-Z]+)|(Vega:OTT[A-Z]+G\\d+)|(miRBase:MI\\d+)|(IMGT/GENE-DB:[0-9A-Za-z/\\(\\)\\-]+)|(RefSeq:[A-Z]{2}_[\\d.]+)|(GeneCards:[0-9a-zA-Z-]+))$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "geneid": {
                        "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                        "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                        "title": "ENSEMBL GeneID",
                        "type": "string"
                    },
                    "geneid_with_version": {
                        "description": "The ENSEMBL GeneID concatenated with its version number.",
                        "title": "ENSEMBL GeneID With Version",
                        "type": "string"
                    },
                    "locations": {
                        "description": "Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies.",
                        "items": {
                            "additionalProperties": false,
                            "description": "Gene location specified using 1-based, closed coordinates for a specific version of the reference genome assembly.",
                            "properties": {
                                "assembly": {
                                    "description": "The genome assembly to which coordinates relate. e.g. GRCh38.",
                                    "enum": [
                                        "GRCh38",
                                        "GRCm39"
                                    ],
                                    "title": "Mapping Assembly",
                                    "type": "string"
                                },
                                "chromosome": {
                                    "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                                    "pattern": "^(chr[0-9A-Za-z]+)$",
                                    "title": "Chromosome",
                                    "type": "string"
                                },
                                "end": {
                                    "description": "The ending coordinate.",
                                    "minimum": 0,
                                    "title": "End",
                                    "type": "integer"
                                },
                                "start": {
                                    "description": "The starting coordinate.",
                                    "minimum": 0,
                                    "title": "Start",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "assembly",
                                "chromosome",
                                "start",
                                "end"
                            ],
                            "title": "Gene Location",
                            "type": "object"
                        },
                        "title": "Gene Locations",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "name": {
                        "description": "The full gene name preferably approved by the official nomenclature.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "symbol": {
                        "description": "Gene symbol approved by the official nomenclature.",
                        "title": "Gene Symbol",
                        "type": "string"
                    },
                    "synonyms": {
                        "description": "Alternative symbols that have been used to refer to the gene.",
                        "items": {
                            "description": "An alternative symbol/name referring to the gene.",
                            "title": "Synonym",
                            "type": "string"
                        },
                        "title": "Synonyms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens",
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "transcriptome_annotation": {
                        "description": "The annotation and version of the reference resource.",
                        "enum": [
                            "GENCODE 40",
                            "GENCODE 41",
                            "GENCODE 42",
                            "GENCODE 43",
                            "GENCODE 44",
                            "GENCODE 45",
                            "GENCODE M30",
                            "GENCODE M31",
                            "GENCODE M32",
                            "GENCODE M33",
                            "GENCODE M34"
                        ],
                        "title": "Transcriptome Annotation",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "version_number": {
                        "description": "Current ENSEMBL GeneID version number of the gene.",
                        "pattern": "^\\d+?",
                        "title": "ENSEMBL GeneID Version Number",
                        "type": "string"
                    }
                },
                "title": "Gene",
                "type": "object"
            },
            "GenomeBrowserAnnotationFile": {
                "additionalProperties": false,
                "description": "A binary file containing genome annotations which are indexed and can be visualized on a genome browser.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "assembly": {
                        "description": "Genome assembly applicable for the annotation data.",
                        "enum": [
                            "GRCh38",
                            "GRCm39"
                        ],
                        "title": "Genome Assembly",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "bigBed",
                            "tabix"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format_type": {
                        "description": "The subtype of bed files.",
                        "enum": [
                            "bed12",
                            "bed3",
                            "bed3+",
                            "bed5",
                            "bed6",
                            "bed6+",
                            "bed9",
                            "bed9+",
                            "mpra_starr"
                        ],
                        "title": "File Format Type",
                        "type": "string"
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the genome browser annotation file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "transcriptome_annotation": {
                        "description": "The annotation and version of the reference resource.",
                        "enum": [
                            "GENCODE 40",
                            "GENCODE 41",
                            "GENCODE 42",
                            "GENCODE 43",
                            "GENCODE 44",
                            "GENCODE 45",
                            "GENCODE M30",
                            "GENCODE M31",
                            "GENCODE M32",
                            "GENCODE M33",
                            "GENCODE M34"
                        ],
                        "title": "Transcriptome Annotation",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Genome Browser Annotation File",
                "type": "object"
            },
            "HumanDonor": {
                "additionalProperties": false,
                "description": "A human donor of any biosample, including cell lines. Submission of any sample originating from a human donor requires submission of information about the relevant donor. For example, submission of the donor of K562 is a prerequisite for submission of any K562 cell line samples.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                            "pattern": "(^GEO:SAMN\\d+$)|(^ENCODE:ENCDO\\d{3}[A-Z]{3}$)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ethnicities": {
                        "description": "Ethnicity of the donor.",
                        "items": {
                            "enum": [
                                "African American",
                                "African Caribbean",
                                "Arab",
                                "Asian",
                                "Black",
                                "Black African",
                                "Chinese",
                                "Colombian",
                                "Dai Chinese",
                                "Esan",
                                "Eskimo",
                                "European",
                                "Gambian",
                                "Han Chinese",
                                "Hispanic",
                                "Indian",
                                "Japanese",
                                "Kinh Vietnamese",
                                "Luhya",
                                "Maasai",
                                "Mende",
                                "Native Hawaiian",
                                "Pacific Islander",
                                "Puerto Rican",
                                "Yoruba"
                            ],
                            "type": "string"
                        },
                        "title": "Ethnicity",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "human_donor_identifiers": {
                        "description": "Identifiers of this human donor.",
                        "items": {
                            "description": "An identifier of this human donor.",
                            "title": "Human Donor Identifier",
                            "type": "string"
                        },
                        "title": "Human Donor Identifiers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "phenotypic_features": {
                        "description": "A list of associated phenotypic features of the donor.",
                        "items": {
                            "description": "Phenotypic feature",
                            "title": "Phenotypic Feature",
                            "type": "string"
                        },
                        "title": "Phenotypic Features",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "related_donors": {
                        "description": "Familial relations of this donor.",
                        "items": {
                            "additionalProperties": false,
                            "description": "Familial relation of this donor.",
                            "properties": {
                                "donor": {
                                    "description": "An identifier for the related donor.",
                                    "title": "Related Donor Identifier",
                                    "type": "string"
                                },
                                "relationship_type": {
                                    "description": "A descriptive term for the related donor\u2019s relationship to this donor.",
                                    "enum": [
                                        "aunt",
                                        "child",
                                        "first cousin once removed",
                                        "first cousin",
                                        "fraternal twin",
                                        "grandparent",
                                        "half-sibling",
                                        "niece",
                                        "nephew",
                                        "parent",
                                        "paternal twin",
                                        "sibling",
                                        "second cousin",
                                        "uncle"
                                    ],
                                    "title": "Relationship Type",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "donor",
                                "relationship_type"
                            ],
                            "title": "Related Donor",
                            "type": "object"
                        },
                        "title": "Related Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sex": {
                        "description": "Sex of the donor.",
                        "enum": [
                            "male",
                            "female",
                            "unspecified"
                        ],
                        "title": "Sex",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the human donor.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Human Donor",
                "type": "object"
            },
            "Image": {
                "additionalProperties": false,
                "description": "An image to be displayed on an IGVF portal page. This is not a data object.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "attachment": {
                        "additionalProperties": false,
                        "description": "The attached content.",
                        "properties": {
                            "download": {
                                "title": "File Name",
                                "type": "string"
                            },
                            "height": {
                                "minimum": 0,
                                "title": "Image Height",
                                "type": "integer"
                            },
                            "href": {
                                "title": "Hypertext REFerence",
                                "type": "string"
                            },
                            "md5sum": {
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "size": {
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": {
                                "enum": [
                                    "image/png",
                                    "image/jpeg",
                                    "image/gif"
                                ],
                                "title": "MIME type",
                                "type": "string"
                            },
                            "width": {
                                "minimum": 0,
                                "title": "Image Width",
                                "type": "integer"
                            }
                        },
                        "title": "Attachment",
                        "type": "object"
                    },
                    "caption": {
                        "description": "The caption of the image.",
                        "title": "Caption",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "download_url": {
                        "description": "Download Url",
                        "title": "Download Url",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "thumb_nail": {
                        "description": "Image url",
                        "title": "Thumb Nail",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Image",
                "type": "object"
            },
            "ImageFile": {
                "additionalProperties": false,
                "description": "A file containing image data.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "jpg",
                            "png"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the image file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Image File",
                "type": "object"
            },
            "InVitroSystem": {
                "additionalProperties": false,
                "description": "A biosample that is cultured, such as immortalized cell lines, organoids, or samples that have been differentiated or reprogrammed.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "age": {
                        "description": "Age of organism at the time of collection of the sample.",
                        "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                        "title": "Age",
                        "type": "string"
                    },
                    "age_units": {
                        "description": "The units of time associated with age of the biosample.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                        ],
                        "title": "Age Units",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biomarkers": {
                        "description": "Biological markers that are associated with this sample.",
                        "items": {
                            "description": "Associated biomarker.",
                            "title": "Biomarker",
                            "type": "string"
                        },
                        "title": "Biomarkers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cell_fate_change_protocol": {
                        "description": "A protocol applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                        "title": "Cell Fate Change Protocol",
                        "type": "string"
                    },
                    "cell_fate_change_treatments": {
                        "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                        "items": {
                            "description": "A treatment applied to the biosample.",
                            "title": "Treatment",
                            "type": "string"
                        },
                        "title": "Cell Fate Change Treatments",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cellular_sub_pool": {
                        "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                        "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                        "title": "Cellular Sub Pool",
                        "type": "string"
                    },
                    "classifications": {
                        "description": "The general category of this type of in vitro system.",
                        "items": {
                            "description": "The type of the in vitro system.",
                            "enum": [
                                "organoid",
                                "gastruloid",
                                "embryoid",
                                "cell line",
                                "differentiated cell specimen",
                                "reprogrammed cell specimen",
                                "pooled cell specimen"
                            ],
                            "title": "Classification",
                            "type": "string"
                        },
                        "title": "Classifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "construct_library_sets": {
                        "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                        "items": {
                            "title": "Construct Library Set",
                            "type": "string"
                        },
                        "title": "Construct Library Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_obtained": {
                        "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                        "title": "Date Collected",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "demultiplexed_from": {
                        "description": "The biosample this in vitro system sample was demultiplexed from using computational methods.",
                        "title": "Demultiplexed From",
                        "type": "string"
                    },
                    "demultiplexed_to": {
                        "description": "The parts into which this sample has been demultiplexed.",
                        "items": {
                            "title": "Demultiplexed To",
                            "type": "string"
                        },
                        "title": "Demultiplexed To",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "disease_terms": {
                        "description": "Ontology term of the disease associated with the biosample.",
                        "items": {
                            "title": "Disease Term",
                            "type": "string"
                        },
                        "title": "Disease Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "Donor(s) the sample was derived from.",
                        "items": {
                            "description": "Donor.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "embryonic": {
                        "description": "Biosample is embryonic.",
                        "title": "Embryonic",
                        "type": "boolean"
                    },
                    "file_sets": {
                        "description": "The file sets linked to this sample.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "growth_medium": {
                        "description": "A growth medium of the in vitro system.",
                        "enum": [
                            "DMEM with serum",
                            "DMEM without serum",
                            "SMBM with serum",
                            "SMBM without serum"
                        ],
                        "title": "Growth Medium",
                        "type": "string"
                    },
                    "institutional_certificates": {
                        "description": "The institutional certificates under which use of this sample is approved.",
                        "items": {
                            "title": "Institutional Certificate",
                            "type": "string"
                        },
                        "title": "Institutional Certificates",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "lower_bound_age": {
                        "description": "Lower bound of age of the organism at the time of collection of the sample.",
                        "title": "Lower Bound Age",
                        "type": "number"
                    },
                    "lower_bound_age_in_hours": {
                        "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                        "title": "Lower Bound Age In Hours",
                        "type": "number"
                    },
                    "modifications": {
                        "description": "Links to modifications applied to this biosample.",
                        "items": {
                            "description": "Link to a modification applied to this biosample.",
                            "title": "Modification",
                            "type": "string"
                        },
                        "title": "Modifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "moi": {
                        "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                        "minimum": 0,
                        "title": "Multiplicity Of Infection",
                        "type": "number"
                    },
                    "multiplexed_in": {
                        "description": "The multiplexed samples in which this sample is included.",
                        "items": {
                            "title": "Multiplexed In",
                            "type": "string"
                        },
                        "title": "Multiplexed In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "nucleic_acid_delivery": {
                        "description": "Method of introduction of nucleic acid into the cell.",
                        "enum": [
                            "transfection",
                            "adenoviral transduction",
                            "lentiviral transduction"
                        ],
                        "title": "Nucleic Acid Delivery",
                        "type": "string"
                    },
                    "origin_of": {
                        "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                        "items": {
                            "title": "Originated Sample",
                            "type": "string"
                        },
                        "title": "Origin Sample Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "originated_from": {
                        "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                        "title": "Originated From",
                        "type": "string"
                    },
                    "part_of": {
                        "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                        "title": "Part of Biosample",
                        "type": "string"
                    },
                    "parts": {
                        "description": "The parts into which this sample has been divided.",
                        "items": {
                            "title": "Biosample Part",
                            "type": "string"
                        },
                        "title": "Biosample Parts",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "passage_number": {
                        "description": "Number of passages including the passages from the source.",
                        "minimum": 0,
                        "title": "Passage Number",
                        "type": "integer"
                    },
                    "pooled_from": {
                        "description": "The biosamples this biosample is pooled from.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Biosamples Pooled From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "pooled_in": {
                        "description": "The pooled samples in which this sample is included.",
                        "items": {
                            "title": "Biosample Pooled In",
                            "type": "string"
                        },
                        "title": "Pooled In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "sample_terms": {
                        "description": "Ontology terms identifying a biosample.",
                        "items": {
                            "description": "Ontology term identifying a biosample.",
                            "title": "Sample Term",
                            "type": "string"
                        },
                        "title": "Sample Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sex": {
                        "enum": [
                            "female",
                            "male",
                            "mixed",
                            "unspecified"
                        ],
                        "title": "Sex",
                        "type": "string"
                    },
                    "sorted_fractions": {
                        "description": "The fractions into which this sample has been sorted.",
                        "items": {
                            "title": "Sorted Fraction Sample",
                            "type": "string"
                        },
                        "title": "Sorted Fraction Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sorted_from": {
                        "description": "Links to a larger sample from which this sample was obtained through sorting.",
                        "title": "Sorted From",
                        "type": "string"
                    },
                    "sorted_from_detail": {
                        "description": "Detail for sample sorted into fractions capturing information about sorting.",
                        "title": "Sorted From Detail",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "starting_amount": {
                        "description": "The initial quantity of samples obtained.",
                        "title": "Starting Amount",
                        "type": "number"
                    },
                    "starting_amount_units": {
                        "description": "The units used to quantify the amount of samples obtained.",
                        "enum": [
                            "cells",
                            "cells/ml",
                            "g",
                            "items",
                            "mg",
                            "whole animals",
                            "whole embryos",
                            "\u03bcg",
                            "ng"
                        ],
                        "title": "Starting Amount Units",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the sample.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "targeted_sample_term": {
                        "description": "Ontology term identifying the targeted endpoint biosample resulting from differentation or reprogramming.",
                        "title": "Targeted Sample Term",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens",
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "time_post_change": {
                        "description": "The time that elapsed past the time-point when the cell fate change treatments were introduced.",
                        "title": "Time Post Change",
                        "type": "number"
                    },
                    "time_post_change_units": {
                        "description": "The units of time that elapsed past the point when the cell fate change treatments were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Change Units",
                        "type": "string"
                    },
                    "time_post_library_delivery": {
                        "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                        "title": "Time Post Library Delivery",
                        "type": "number"
                    },
                    "time_post_library_delivery_units": {
                        "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Library Delivery Units",
                        "type": "string"
                    },
                    "treatments": {
                        "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                        "items": {
                            "title": "Treatment",
                            "type": "string"
                        },
                        "title": "Treatments",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "upper_bound_age": {
                        "description": "Upper bound of age of the organism at the time of collection of the sample.",
                        "title": "Upper Bound Age",
                        "type": "number"
                    },
                    "upper_bound_age_in_hours": {
                        "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                        "title": "Upper Bound Age In Hours",
                        "type": "number"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "In Vitro System",
                "type": "object"
            },
            "InstitutionalCertificate": {
                "additionalProperties": false,
                "description": "An institutional certificate defining the data sharing limitations for data authorized for submission to the IGVF portal.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "certificate_identifier": {
                        "description": "A unique identifier for the certificate.",
                        "pattern": "^IP\\d{3}-\\d{2}$",
                        "title": "Certificate Identifier",
                        "type": "string"
                    },
                    "controlled_access": {
                        "description": "Indicator of whether the samples are under controlled access.",
                        "title": "Controlled Access",
                        "type": "boolean"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "data_use_limitation": {
                        "description": "Code indicating the limitations on data use for data generated from the applicable samples. GRU (General research use): Use of the data is limited only by the terms of the Data Use Certification: these data will be added to the dbGaP Collection. HMB (Health/medical/biomedical): Use of the data is limited to health/medical/biomedical purposes, does not include the study of population origins or ancestry. DS (Disease specific): Use of the data must be related to the specified disease. Other: any other customized limitation.",
                        "enum": [
                            "DS",
                            "GRU",
                            "HMB",
                            "other"
                        ],
                        "title": "Data Use Limitation",
                        "type": "string"
                    },
                    "data_use_limitation_modifiers": {
                        "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples. COL: Requestor must provide a letter of collaboration with the primary study investigator(s). GSO: Use of the data is limited to genetic studies only. IRB: Approval Required IRB Requestor must provide documentation of local IRB approval. MDS: Use of the data includes methods development research (e.g., development and testing of software or algorithms). NPU: Use of the data is limited to not-for-profit organizations. PUB: Requestor agrees to make results of studies using the data available to the larger scientific community.",
                        "items": {
                            "enum": [
                                "COL",
                                "GSO",
                                "IRB",
                                "MDS",
                                "NPU",
                                "PUB"
                            ],
                            "title": "Data Use Limitation Modifier",
                            "type": "string"
                        },
                        "title": "Data Use Limitation Modifiers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "samples": {
                        "description": "Samples covered by this institutional certificate.",
                        "items": {
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "urls": {
                        "description": "Link to the institutional certification form.",
                        "items": {
                            "description": "An institutional certification form.",
                            "title": "URL",
                            "type": "string"
                        },
                        "title": "URL",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Institutional Certificate",
                "type": "object"
            },
            "ItemType": {
                "enum": [
                    "AccessKey",
                    "AnalysisStep",
                    "AnalysisStepVersion",
                    "Award",
                    "Biomarker",
                    "Document",
                    "HumanDonor",
                    "RodentDonor",
                    "AlignmentFile",
                    "ConfigurationFile",
                    "GenomeBrowserAnnotationFile",
                    "ImageFile",
                    "MatrixFile",
                    "ModelFile",
                    "ReferenceFile",
                    "SequenceFile",
                    "SignalFile",
                    "TabularFile",
                    "AnalysisSet",
                    "AuxiliarySet",
                    "ConstructLibrarySet",
                    "CuratedSet",
                    "MeasurementSet",
                    "ModelSet",
                    "PredictionSet",
                    "Gene",
                    "Image",
                    "InstitutionalCertificate",
                    "Lab",
                    "CrisprModification",
                    "DegronModification",
                    "AssayTerm",
                    "PhenotypeTerm",
                    "PlatformTerm",
                    "SampleTerm",
                    "OpenReadingFrame",
                    "Page",
                    "PhenotypicFeature",
                    "Publication",
                    "InVitroSystem",
                    "MultiplexedSample",
                    "PrimaryCell",
                    "TechnicalSample",
                    "Tissue",
                    "WholeOrganism",
                    "Software",
                    "SoftwareVersion",
                    "Source",
                    "Treatment",
                    "User",
                    "Workflow"
                ],
                "type": "string",
                "x-enum-varnames": [
                    "AccessKey",
                    "AnalysisStep",
                    "AnalysisStepVersion",
                    "Award",
                    "Biomarker",
                    "Document",
                    "HumanDonor",
                    "RodentDonor",
                    "AlignmentFile",
                    "ConfigurationFile",
                    "GenomeBrowserAnnotationFile",
                    "ImageFile",
                    "MatrixFile",
                    "ModelFile",
                    "ReferenceFile",
                    "SequenceFile",
                    "SignalFile",
                    "TabularFile",
                    "AnalysisSet",
                    "AuxiliarySet",
                    "ConstructLibrarySet",
                    "CuratedSet",
                    "MeasurementSet",
                    "ModelSet",
                    "PredictionSet",
                    "Gene",
                    "Image",
                    "InstitutionalCertificate",
                    "Lab",
                    "CrisprModification",
                    "DegronModification",
                    "AssayTerm",
                    "PhenotypeTerm",
                    "PlatformTerm",
                    "SampleTerm",
                    "OpenReadingFrame",
                    "Page",
                    "PhenotypicFeature",
                    "Publication",
                    "InVitroSystem",
                    "MultiplexedSample",
                    "PrimaryCell",
                    "TechnicalSample",
                    "Tissue",
                    "WholeOrganism",
                    "Software",
                    "SoftwareVersion",
                    "Source",
                    "Treatment",
                    "User",
                    "Workflow"
                ]
            },
            "JSONSchema": {
                "description": "A JSON Schema object",
                "type": "object"
            },
            "Lab": {
                "additionalProperties": false,
                "description": "A lab that is part of or affiliated with the IGVF consortium.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "awards": {
                        "description": "Grants associated with the lab.",
                        "items": {
                            "description": "A grant associated with the lab.",
                            "title": "Grant",
                            "type": "string"
                        },
                        "title": "Award",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "institute_label": {
                        "description": "An abbreviation for the institute the lab is associated with.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
                        "title": "Institute Label",
                        "type": "string"
                    },
                    "name": {
                        "description": "A short unique name for the lab, current convention is lower cased and hyphen delimited of PI's first and last name (e.g. john-doe).",
                        "pattern": "^[a-z0-9\\-]+$",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "pi": {
                        "description": "Principle Investigator of the lab.",
                        "title": "P.I.",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "current",
                            "deleted",
                            "disabled"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the lab.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Lab",
                "type": "object"
            },
            "Limit": {
                "default": 25,
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "integer"
                    }
                ]
            },
            "MatrixFile": {
                "additionalProperties": false,
                "description": "A file containing quantification data in a multi-dimension format.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_summary": {
                        "description": "A summary of the data in the matrix file.",
                        "title": "Content Summary",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "dimension1": {
                        "description": "First dimension of the matrix.",
                        "enum": [
                            "cell",
                            "fragment",
                            "gene",
                            "time",
                            "treatment",
                            "variant",
                            "genomic position"
                        ],
                        "title": "Dimension 1",
                        "type": "string"
                    },
                    "dimension2": {
                        "description": "Second dimension of the matrix.",
                        "enum": [
                            "cell",
                            "fragment",
                            "gene",
                            "time",
                            "treatment",
                            "variant",
                            "genomic position"
                        ],
                        "title": "Dimension 2",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "h5ad",
                            "hdf5",
                            "mtx",
                            "tar",
                            "hic"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "reference_files": {
                        "description": "Link to the reference files used to generate this file.",
                        "items": {
                            "description": "Link to a reference file used to generate this file.",
                            "title": "Reference File",
                            "type": "string"
                        },
                        "title": "Reference Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the matrix file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Matrix File",
                "type": "object"
            },
            "MeasurementSet": {
                "additionalProperties": false,
                "description": "Measurement set is a file set that hosts raw data files (e.g. FASTQs) resulting from sequencing of a library prepared from the nucleic acids of the sample that is the main target of the assay. For example sequencing of accessible regions in the genome, or sequencing of the transcriptome of the sample. The assay can either be bulk or single cell type. The sample specific raw sequencing results will be captured in the measurement sets. The files in the measurement sets are specific to the sample being investigated. See auxiliary sets for files that are not a direct result of sequencing the sample under investigation.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "assay_term": {
                        "description": "The assay used to produce data in this measurement set.",
                        "title": "Assay Term",
                        "type": "string"
                    },
                    "auxiliary_sets": {
                        "description": "The auxiliary sets of files produced alongside raw data from this measurement set.",
                        "items": {
                            "description": "An auxiliary set of files produced alongside raw data from this measurement set.",
                            "title": "Auxiliary Set",
                            "type": "string"
                        },
                        "title": "Auxiliary Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_file_sets": {
                        "description": "File sets that can serve as scientific controls for this measurement_set.",
                        "items": {
                            "description": "File sets that can serve as scientific controls for this measurement_set.",
                            "title": "Control",
                            "type": "string"
                        },
                        "title": "Controls",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "pattern": "^GEO:GSE\\d+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donors of the samples associated with this measurement set.",
                        "items": {
                            "description": "Donor of a sample associated with this measurement set.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "external_image_url": {
                        "description": "Links to the external site where images produced by this measurement are stored.",
                        "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$",
                        "title": "External Image URL",
                        "type": "string"
                    },
                    "file_set_type": {
                        "description": "The category that best describes this measurement set.",
                        "enum": [
                            "experimental data"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "multiome_size": {
                        "description": "The number of datasets included in the multiome experiment this measurement set is a part of.",
                        "minimum": 2,
                        "title": "Multiome Size",
                        "type": "integer"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "preferred_assay_title": {
                        "description": "The custom lab preferred label for the experiment performed in this measurement set.",
                        "enum": [
                            "10x multiome",
                            "10x multiome with MULTI-seq",
                            "AAV-MPRA",
                            "ATAC-seq",
                            "CERES-seq",
                            "Cell painting",
                            "CRISPR FlowFISH",
                            "DOGMA-seq",
                            "Histone ChIP-seq",
                            "Hi-C",
                            "HT-recruit",
                            "lentiMPRA",
                            "MERFISH",
                            "MIAA",
                            "mN2H",
                            "MPRA",
                            "MPRA (scQer)",
                            "MULTI-seq",
                            "Parse SPLiT-seq",
                            "Perturb-seq",
                            "RNA-seq",
                            "SGE",
                            "scATAC-seq",
                            "scNT-seq",
                            "scNT-seq2",
                            "scRNA-seq",
                            "semi-qY2H",
                            "SHARE-seq",
                            "smFISH",
                            "snATAC-seq",
                            "snmC-Seq2",
                            "snMCT-seq",
                            "snM3C-seq",
                            "snRNA-seq",
                            "Spatial transcriptomics",
                            "SUPERSTARR",
                            "TAP-seq",
                            "TF ChIP-seq",
                            "VAMP-seq",
                            "Variant FlowFISH",
                            "Variant painting",
                            "Y2H",
                            "yN2H"
                        ],
                        "title": "Preferred Assay Title",
                        "type": "string"
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for conducting the assay on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "related_multiome_datasets": {
                        "description": "Related datasets included in the multiome experiment this measurement set is a part of.",
                        "items": {
                            "description": "Related dataset included in the multiome experiment this measurement set is a part of.",
                            "title": "Related Multiome Dataset",
                            "type": "string"
                        },
                        "title": "Related Multiome Datasets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The sample(s) associated with this file set.",
                        "items": {
                            "description": "A sample associated with this file set.",
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sequencing_library_types": {
                        "description": "Description of the libraries sequenced in this measurement set.",
                        "items": {
                            "enum": [
                                "direct RNA",
                                "exome capture",
                                "mRNA enriched",
                                "rRNA depleted",
                                "polyA depleted",
                                "polyA enriched"
                            ],
                            "title": "Sequencing Library Type",
                            "type": "string"
                        },
                        "title": "Sequencing Library Types",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "targeted_genes": {
                        "description": "A list of genes targeted in this assay. For example, TF ChIP-seq attempts to identify binding sites of a protein encoded by a specific gene. In CRISPR FlowFISH, the modified samples are sorted based on expression of a specific gene. This property differs from small_scale_gene_list in Construct Library Set, which describes genes targeted by the content integrated in the constructs (such as guide RNAs.)",
                        "items": {
                            "title": "Gene",
                            "type": "string"
                        },
                        "title": "Targeted Genes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Measurement Set",
                "type": "object"
            },
            "ModelFile": {
                "additionalProperties": false,
                "description": "A file containing a trained model.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "anvil_url": {
                        "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                        "title": "AnVIL URL",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "controlled_access": {
                        "description": "Boolean value, indicating the file being controlled access, if true.",
                        "title": "Controlled Access",
                        "type": "boolean"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "hdf5",
                            "json",
                            "tar",
                            "tsv"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the model file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Model File",
                "type": "object"
            },
            "ModelSet": {
                "additionalProperties": false,
                "description": "A file set grouping files that represent trained predictive models. Model file sets contain data files that could be used by predictive modeling software to generate predictions or annotations of genomic features such as genomic variants.",
                "not": {
                    "anyOf": [
                        {
                            "required": [
                                "samples"
                            ]
                        },
                        {
                            "required": [
                                "donors"
                            ]
                        }
                    ]
                },
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "assessed_genes": {
                        "description": "A list of genes assessed in this model set.",
                        "items": {
                            "title": "Gene",
                            "type": "string"
                        },
                        "title": "Assessed Genes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "pattern": "^GEO:GSE\\d+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donor(s) associated with this file set.",
                        "items": {
                            "description": "A donor associated with this file set.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set_type": {
                        "description": "The category that best describes this predictive model set.",
                        "enum": [
                            "neural network",
                            "random forest",
                            "decision tree",
                            "support vector machine",
                            "variant binding effect"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_sets": {
                        "description": "The file set(s) that served as inputs for the derivation of this model set.",
                        "items": {
                            "description": "A file set that serves as input for this file set.",
                            "title": "Input File Set",
                            "type": "string"
                        },
                        "title": "Input File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "model_name": {
                        "description": "The custom lab name given to this predictive model set.",
                        "title": "Model Name",
                        "type": "string"
                    },
                    "model_version": {
                        "description": "The semantic version number for this predictive model set.",
                        "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$",
                        "title": "Model Version",
                        "type": "string"
                    },
                    "model_zoo_location": {
                        "description": "The link to the model on the Kipoi repository.",
                        "pattern": "^https?://kipoi\\.org/models/(\\S+)$",
                        "title": "Model Zoo Location",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "prediction_objects": {
                        "description": "The objects this predictive model set is targeting.",
                        "items": {
                            "description": "An object this predictive model set is targeting.",
                            "enum": [
                                "coding variants",
                                "non-coding variants",
                                "all variants",
                                "regulatory elements",
                                "genes"
                            ],
                            "title": "Prediction Object",
                            "type": "string"
                        },
                        "title": "Prediction Objects",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The sample(s) associated with this file set.",
                        "items": {
                            "description": "A sample associated with this file set.",
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "software_version": {
                        "description": "Version of software used for the derivation of this model set.",
                        "title": "Software Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Model Set",
                "type": "object"
            },
            "MultiplexedSample": {
                "additionalProperties": false,
                "description": "A sample that is made by multiplexing multiple distinct samples.",
                "not": {
                    "anyOf": [
                        {
                            "required": [
                                "construct_library_sets"
                            ]
                        },
                        {
                            "required": [
                                "moi"
                            ]
                        },
                        {
                            "required": [
                                "nucleic_acid_delivery"
                            ]
                        },
                        {
                            "required": [
                                "time_post_library_delivery"
                            ]
                        },
                        {
                            "required": [
                                "time_post_library_delivery_units"
                            ]
                        }
                    ]
                },
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "barcode_sample_map": {
                        "description": "The link to the barcode to sample mapping tabular file.",
                        "title": "Link to barcode sample map tabular file",
                        "type": "string"
                    },
                    "biomarkers": {
                        "description": "The biomarkers of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Biomarker",
                            "type": "string"
                        },
                        "title": "Biomarkers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cellular_sub_pool": {
                        "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                        "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                        "title": "Cellular Sub Pool",
                        "type": "string"
                    },
                    "classifications": {
                        "description": "The general category of this type of sample.",
                        "items": {
                            "title": "Classification",
                            "type": "string"
                        },
                        "title": "Classifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "construct_library_sets": {
                        "description": "The construct library sets of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Construct Library Set",
                            "type": "string"
                        },
                        "title": "Construct Library Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_obtained": {
                        "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                        "title": "Date Obtained",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "disease_terms": {
                        "description": "The disease terms of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Disease Term",
                            "type": "string"
                        },
                        "title": "Disease Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donors of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_sets": {
                        "description": "The file sets linked to this sample.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "institutional_certificates": {
                        "description": "The institutional certificates under which use of this sample is approved.",
                        "items": {
                            "title": "Institutional Certificate",
                            "type": "string"
                        },
                        "title": "Institutional Certificates",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "modifications": {
                        "description": "The modifications of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Modification",
                            "type": "string"
                        },
                        "title": "Modifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "moi": {
                        "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                        "minimum": 0,
                        "title": "Multiplicity Of Infection",
                        "type": "number"
                    },
                    "multiplexed_in": {
                        "description": "The multiplexed samples in which this sample is included.",
                        "items": {
                            "title": "Multiplexed In",
                            "type": "string"
                        },
                        "title": "Multiplexed In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "multiplexed_samples": {
                        "description": "The samples multiplexed together to produce this sample.",
                        "items": {
                            "title": "Multiplexed Sample",
                            "type": "string"
                        },
                        "title": "Multiplexed Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "nucleic_acid_delivery": {
                        "description": "Method of introduction of nucleic acid into the cell.",
                        "enum": [
                            "transfection",
                            "adenoviral transduction",
                            "lentiviral transduction"
                        ],
                        "title": "Nucleic Acid Delivery",
                        "type": "string"
                    },
                    "origin_of": {
                        "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                        "items": {
                            "title": "Originated Sample",
                            "type": "string"
                        },
                        "title": "Origin Sample Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "sample_terms": {
                        "description": "The sample terms of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Sample Term",
                            "type": "string"
                        },
                        "title": "Sample Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sorted_fractions": {
                        "description": "The fractions into which this sample has been sorted.",
                        "items": {
                            "title": "Sorted Fraction Sample",
                            "type": "string"
                        },
                        "title": "Sorted Fraction Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sorted_from": {
                        "description": "Links to a larger sample from which this sample was obtained through sorting.",
                        "title": "Sorted From",
                        "type": "string"
                    },
                    "sorted_from_detail": {
                        "description": "Detail for sample sorted into fractions capturing information about sorting.",
                        "title": "Sorted From Detail",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The sources of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "starting_amount": {
                        "description": "The initial quantity of samples obtained.",
                        "title": "Starting Amount",
                        "type": "number"
                    },
                    "starting_amount_units": {
                        "description": "The units used to quantify the amount of samples obtained.",
                        "enum": [
                            "cells",
                            "cells/ml",
                            "g",
                            "items",
                            "mg",
                            "whole animals",
                            "whole embryos",
                            "\u03bcg",
                            "ng"
                        ],
                        "title": "Starting Amount Units",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of this sample.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "time_post_library_delivery": {
                        "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                        "title": "Time Post Library Delivery",
                        "type": "number"
                    },
                    "time_post_library_delivery_units": {
                        "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Library Delivery Units",
                        "type": "string"
                    },
                    "treatments": {
                        "description": "The treatments of the samples included in this multiplexed sample.",
                        "items": {
                            "title": "Treatment",
                            "type": "string"
                        },
                        "title": "Treatments",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Multiplexed Sample",
                "type": "object"
            },
            "NoResultsResponse": {
                "properties": {
                    "@context": {
                        "type": "string"
                    },
                    "@graph": {
                        "items": {},
                        "type": "array"
                    },
                    "@id": {
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "clear_filters": {
                        "type": "string"
                    },
                    "columns": {
                        "additionalProperties": {
                            "properties": {
                                "title": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "object"
                    },
                    "facet_groups": {
                        "items": {
                            "properties": {
                                "facet_fields": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "facets": {
                        "items": {
                            "properties": {
                                "appended": {
                                    "type": "boolean"
                                },
                                "field": {
                                    "type": "string"
                                },
                                "open_on_load": {
                                    "type": "boolean"
                                },
                                "terms": {
                                    "items": {
                                        "properties": {
                                            "doc_count": {
                                                "type": "integer"
                                            },
                                            "key": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "total": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "filters": {
                        "items": {
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "remove": {
                                    "type": "string"
                                },
                                "term": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "notification": {
                        "type": "string"
                    },
                    "sort": {
                        "additionalProperties": {
                            "properties": {
                                "order": {
                                    "type": "string"
                                },
                                "unmapped_type": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "object"
                    },
                    "title": {
                        "type": "string"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OpenReadingFrame": {
                "additionalProperties": false,
                "description": "Protein-encoding open reading frames (ORF)",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Unique identifiers from the hORFeome database",
                        "items": {
                            "description": "A unique identifier from hORFeome database.",
                            "pattern": "^(hORFeome:[1-9][0-9]*)$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "gene": {
                        "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                        "items": {
                            "description": "An identifier of the Gene.",
                            "title": "ENSEMBL GeneID",
                            "type": "string"
                        },
                        "title": "ENSEMBL GeneID",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "orf_id": {
                        "description": "Open reading frame ID.",
                        "pattern": "^CCSBORF[1-9][0-9]*$",
                        "title": "ORF ID",
                        "type": "string"
                    },
                    "pct_coverage_orf": {
                        "description": "The percentage of Ensembl protein covered by ORF.",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Percentage of Ensembl Protein Covered by ORF",
                        "type": "number"
                    },
                    "pct_coverage_protein": {
                        "description": "The percentage of ORF covered by Ensembl protein.",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Percentage of ORF Covered by Ensembl Protein",
                        "type": "number"
                    },
                    "pct_identical_protein": {
                        "description": "The percentage of identical matches to Ensembl protein.",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Percentage of Identical Matches to Ensembl Protein",
                        "type": "number"
                    },
                    "protein_id": {
                        "description": "ENSEMBL ProteinID of official nomenclature approved protein. The ProteinID does not include the current version number suffix.",
                        "pattern": "^ENSP\\d{11}.?\\d*?$",
                        "title": "ENSEMBL ProteinID",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Open Reading Frame",
                "type": "object"
            },
            "Page": {
                "additionalProperties": false,
                "description": "A page on the IGVF portal.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "canonical_uri": {
                        "description": "The path of the page.",
                        "title": "Canonical URI",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "layout": {
                        "additionalProperties": false,
                        "description": "Hierarchical description of the page layout.",
                        "properties": {
                            "blocks": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "@id": {
                                            "description": "Unique identifier for this blocUnique identifier for this block.",
                                            "title": "Block ID",
                                            "type": "string"
                                        },
                                        "@type": {
                                            "description": "Indicates whether this block contains markdown or a component specification.",
                                            "title": "Block Type",
                                            "type": "string"
                                        },
                                        "body": {
                                            "description": "The text content of this block.",
                                            "title": "Block Body",
                                            "type": "string"
                                        },
                                        "direction": {
                                            "description": "The text language direction -- ltr or rtl.",
                                            "title": "Direction",
                                            "type": "string"
                                        }
                                    },
                                    "title": "Page Layout Components",
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "title": "Page Layout",
                        "type": "object"
                    },
                    "name": {
                        "description": "The name shown in this page's URL.",
                        "pattern": "^[a-z0-9_-]+$",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "parent": {
                        "description": "The parent page associated with this page.",
                        "title": "Parent Page",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "The name shown in the browser's title bar and tabs.",
                        "title": "Title",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Page",
                "type": "object"
            },
            "PhenotypeTerm": {
                "additionalProperties": false,
                "description": "An ontology term from Experimental Factor Ontology (EFO), Human Disease Ontology (DOID), Human Phenotype Ontology (HP), Mondo Disease Ontology (MONDO), National Cancer Institute Thesaurus (NCIT), or Ontology of Biological Attributes (OBA) for phenotypes, diseases, and traits.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ancestors": {
                        "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Ancestors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "deprecated_ntr_terms": {
                        "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                        "items": {
                            "description": "NTR term ID",
                            "pattern": "^NTR:[0-9]{2,8}$",
                            "title": "Term ID",
                            "type": "string"
                        },
                        "title": "Deprecated NTR terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "is_a": {
                        "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                        "items": {
                            "title": "Ontology Term",
                            "type": "string"
                        },
                        "title": "Is A",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "name": {
                        "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "ontology": {
                        "description": "The ontology in which the term is recorded.",
                        "title": "Ontology",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the ontology term.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "synonyms": {
                        "description": "Synonyms for the term that have been recorded in an ontology.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Synonyms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "term_id": {
                        "description": "An ontology term identifier describing a phenotype.",
                        "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                        "title": "Phenotype Term ID",
                        "type": "string"
                    },
                    "term_name": {
                        "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                        "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                        "title": "Term Name",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Phenotype Term",
                "type": "object"
            },
            "PhenotypicFeature": {
                "additionalProperties": false,
                "description": "A phenotypic feature of a donor the sample is coming from. For example, the donor\u2019s height measured at the time of sample collection.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "feature": {
                        "description": "The phenotypic feature observed for the donor.",
                        "title": "Phenotypic Feature",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "observation_date": {
                        "description": "The date the feature was observed or measured.",
                        "title": "Observation Date",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "A quantity associated with the phenotypic feature, if applicable.",
                        "title": "Quantity",
                        "type": "number"
                    },
                    "quantity_units": {
                        "description": "The unit of measurement for a quantity associated with the phenotypic feature.",
                        "enum": [
                            "meter",
                            "micromole",
                            "nanogram",
                            "microgram",
                            "milligram",
                            "gram",
                            "kilogram",
                            "milli-International Unit per milliliter",
                            "picogram per milliliter",
                            "nanogram per milliliter",
                            "milligram per deciliter"
                        ],
                        "title": "Quantity Units",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Phenotypic Feature",
                "type": "object"
            },
            "PlatformTerm": {
                "additionalProperties": false,
                "description": "An ontology term from Experimental Factor Ontology (EFO) for platforms and instruments used in assays.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ancestors": {
                        "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Ancestors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "company": {
                        "description": "The company that developed and sells the instrument.",
                        "enum": [
                            "10X Genomics",
                            "Illumina",
                            "Life Technologies",
                            "Oxford Nanopore Technologies",
                            "Pacific Biosciences",
                            "Parse Biosciences",
                            "Roche"
                        ],
                        "title": "Company",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "deprecated_ntr_terms": {
                        "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                        "items": {
                            "description": "NTR term ID",
                            "pattern": "^NTR:[0-9]{2,8}$",
                            "title": "Term ID",
                            "type": "string"
                        },
                        "title": "Deprecated NTR terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "is_a": {
                        "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                        "items": {
                            "title": "Ontology Term",
                            "type": "string"
                        },
                        "title": "Is A",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "name": {
                        "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "ontology": {
                        "description": "The ontology in which the term is recorded.",
                        "title": "Ontology",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sequencing_kits": {
                        "description": "The available sequencing kits for this platform.",
                        "items": {
                            "description": "A reagent kit used with a library to prepare it for sequencing.",
                            "enum": [
                                "HiSeq SBS Kit v4",
                                "HiSeq SR Cluster Kit v4-cBot-HS",
                                "HiSeq PE Cluster Kit v4-cBot-HS",
                                "HiSeq SR Rapid Cluster Kit v2",
                                "HiSeq PE Rapid Cluster Kit v2",
                                "HiSeq Rapid SBS Kit v2",
                                "HiSeq 3000/4000 SBS Kit",
                                "HiSeq 3000/4000 SR Cluster Kit",
                                "HiSeq 3000/4000 PE Cluster Kit",
                                "MiSeq Reagent Kit v2",
                                "NextSeq 500 Mid Output Kit",
                                "NextSeq 500 High Output Kit",
                                "NextSeq 500 Mid Output v2 Kit",
                                "NextSeq 500 High Output v2 Kit",
                                "NextSeq 500/550 Mid-Output v2.5 Kit",
                                "NextSeq 500/550 High-Output v2.5 Kit",
                                "TG NextSeq 500/550 Mid-Output Kit v2.5",
                                "TG NextSeq 500/550 High-Output Kit v2.5",
                                "NextSeq 1000/2000 P1 Reagent Kit",
                                "NextSeq 1000/2000 P2 Reagent Kit",
                                "NextSeq 1000/2000 P3 Reagent Kit",
                                "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                                "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                                "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                                "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                                "NovaSeq 6000 SP Reagent Kit v1.5",
                                "NovaSeq 6000 S1 Reagent Kit v1.5",
                                "NovaSeq 6000 S2 Reagent Kit v1.5",
                                "NovaSeq 6000 S4 Reagent Kit v1.5",
                                "NovaSeq X Series 1.5B Reagent Kit",
                                "NovaSeq X Series 10B Reagent Kit",
                                "NovaSeq X Series 25B Reagent Kit",
                                "ONT Ligation Sequencing Kit V14",
                                "Sequel sequencing kit 3.0",
                                "Sequel II sequencing kit 2.0"
                            ],
                            "title": "Sequencing Kit",
                            "type": "string"
                        },
                        "title": "Sequencing Kits",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the ontology term.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "synonyms": {
                        "description": "Synonyms for the term that have been recorded in an ontology.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Synonyms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "term_id": {
                        "description": "An ontology term identifier describing a platform.",
                        "pattern": "^(EFO|NTR):[0-9]{2,8}$",
                        "title": "Term ID",
                        "type": "string"
                    },
                    "term_name": {
                        "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                        "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                        "title": "Term Name",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Platform Term",
                "type": "object"
            },
            "PredictionSet": {
                "additionalProperties": false,
                "description": "A file set of computational predictions. Prediction sets contain results of analyses to predict functions or traits of genomic features.",
                "oneOf": [
                    {
                        "required": [
                            "lab",
                            "award",
                            "file_set_type",
                            "samples"
                        ]
                    },
                    {
                        "required": [
                            "lab",
                            "award",
                            "file_set_type",
                            "donors"
                        ]
                    }
                ],
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "assessed_genes": {
                        "description": "A list of gene(s) assessed in this prediction set. This property is used to describe the gene(s) being investigated, especially how the input variables in the prediction set affect some critical functionality of the gene(s). For example, the effect could be predicted from genetic variants on the binding affinity of a transcription factor encoded by a gene (assessed_genes). It differs from small_scale_gene_list and large_scale_gene_list, as these are used when the input variables of the prediction set are genes.",
                        "items": {
                            "title": "Gene",
                            "type": "string"
                        },
                        "title": "Assessed Genes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "control_for": {
                        "description": "The file sets for which this file set is a control.",
                        "items": {
                            "title": "File Set Controlled By This File Set",
                            "type": "string"
                        },
                        "title": "File Sets Controlled By This File Set",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "pattern": "^GEO:GSE\\d+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "The donor(s) associated with this file set.",
                        "items": {
                            "description": "A donor associated with this file set.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set_type": {
                        "description": "The category that best describes this prediction set.",
                        "enum": [
                            "pathogenicity",
                            "functional effect",
                            "protein stability",
                            "activity level",
                            "binding effect"
                        ],
                        "title": "File Set Type",
                        "type": "string"
                    },
                    "files": {
                        "description": "The files associated with this file set.",
                        "items": {
                            "title": "File",
                            "type": "string"
                        },
                        "title": "Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_set_for": {
                        "description": "The file sets that use this file set as an input.",
                        "items": {
                            "title": "Input File Set For",
                            "type": "string"
                        },
                        "title": "Input File Set For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "input_file_sets": {
                        "description": "The file set(s) required for this prediction set.",
                        "items": {
                            "description": "A file set that serves as input for this file set.",
                            "title": "Input File Set",
                            "type": "string"
                        },
                        "title": "Input File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "large_scale_gene_list": {
                        "description": "The large scale list of (>100 genes) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genes whose expression level is predicted in this prediction set. It differs from assessed_genes (see more information under assessed_genes).",
                        "title": "Large Scale Gene List",
                        "type": "string"
                    },
                    "large_scale_loci_list": {
                        "description": "A large scale list (>100) of specific chromosomal regions whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genetic variants whose functionality is predicted in this prediction set.",
                        "title": "Large Scale Loci List",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The sample(s) associated with this file set.",
                        "items": {
                            "description": "A sample associated with this file set.",
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "scope": {
                        "description": "The scope or scale that this prediction set is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property.",
                        "enum": [
                            "genes",
                            "loci",
                            "genome-wide"
                        ],
                        "title": "Prediction Scope",
                        "type": "string"
                    },
                    "small_scale_gene_list": {
                        "description": "The specific, small scale list of (<=100) gene(s) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genes whose expression level is predicted in this prediction set. It differs from assessed_genes (see more information under assessed_genes).",
                        "items": {
                            "title": "Gene",
                            "type": "string"
                        },
                        "title": "Small Scale Gene List",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "small_scale_loci_list": {
                        "description": "A small scale (<=100) list of specific chromosomal region(s) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genetic variants whose functionality is predicted in this prediction set.",
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "assembly": {
                                    "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                                    "enum": [
                                        "GRCh38",
                                        "GRCm39"
                                    ],
                                    "title": "Mapping assembly",
                                    "type": "string"
                                },
                                "chromosome": {
                                    "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                                    "pattern": "^(chr[0-9A-Za-z_]+)$",
                                    "title": "Chromosome",
                                    "type": "string"
                                },
                                "end": {
                                    "description": "The 1-based, closed (inclusive) ending coordinate.",
                                    "minimum": 1,
                                    "title": "End",
                                    "type": "integer"
                                },
                                "start": {
                                    "description": "The 1-based, closed (inclusive) starting coordinate.",
                                    "minimum": 1,
                                    "title": "Start",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "assembly",
                                "chromosome",
                                "start",
                                "end"
                            ],
                            "title": "Locus",
                            "type": "object"
                        },
                        "title": "Small Scale Loci List",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_files_timestamp": {
                        "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                        "title": "Submitted Files Timestamp",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the prediction set.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Prediction Set",
                "type": "object"
            },
            "PrimaryCell": {
                "additionalProperties": false,
                "description": "A biosample that is directly harvested from a donor as cells, such as fibroblasts or immune cells.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "age": {
                        "description": "Age of organism at the time of collection of the sample.",
                        "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                        "title": "Age",
                        "type": "string"
                    },
                    "age_units": {
                        "description": "The units of time associated with age of the biosample.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                        ],
                        "title": "Age Units",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biomarkers": {
                        "description": "Biological markers that are associated with this sample.",
                        "items": {
                            "description": "Associated biomarker.",
                            "title": "Biomarker",
                            "type": "string"
                        },
                        "title": "Biomarkers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cellular_sub_pool": {
                        "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                        "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                        "title": "Cellular Sub Pool",
                        "type": "string"
                    },
                    "classifications": {
                        "description": "The general category of this type of sample.",
                        "items": {
                            "title": "Classification",
                            "type": "string"
                        },
                        "title": "Classifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "construct_library_sets": {
                        "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                        "items": {
                            "title": "Construct Library Set",
                            "type": "string"
                        },
                        "title": "Construct Library Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_obtained": {
                        "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                        "title": "Date Harvested",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "disease_terms": {
                        "description": "Ontology term of the disease associated with the biosample.",
                        "items": {
                            "title": "Disease Term",
                            "type": "string"
                        },
                        "title": "Disease Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "Donor(s) the sample was derived from.",
                        "items": {
                            "description": "Donor.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "embryonic": {
                        "description": "Biosample is embryonic.",
                        "title": "Embryonic",
                        "type": "boolean"
                    },
                    "file_sets": {
                        "description": "The file sets linked to this sample.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "institutional_certificates": {
                        "description": "The institutional certificates under which use of this sample is approved.",
                        "items": {
                            "title": "Institutional Certificate",
                            "type": "string"
                        },
                        "title": "Institutional Certificates",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "lower_bound_age": {
                        "description": "Lower bound of age of the organism at the time of collection of the sample.",
                        "title": "Lower Bound Age",
                        "type": "number"
                    },
                    "lower_bound_age_in_hours": {
                        "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                        "title": "Lower Bound Age In Hours",
                        "type": "number"
                    },
                    "modifications": {
                        "description": "Links to modifications applied to this biosample.",
                        "items": {
                            "description": "Link to a modification applied to this biosample.",
                            "title": "Modification",
                            "type": "string"
                        },
                        "title": "Modifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "moi": {
                        "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                        "minimum": 0,
                        "title": "Multiplicity Of Infection",
                        "type": "number"
                    },
                    "multiplexed_in": {
                        "description": "The multiplexed samples in which this sample is included.",
                        "items": {
                            "title": "Multiplexed In",
                            "type": "string"
                        },
                        "title": "Multiplexed In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "nucleic_acid_delivery": {
                        "description": "Method of introduction of nucleic acid into the cell.",
                        "enum": [
                            "transfection",
                            "adenoviral transduction",
                            "lentiviral transduction"
                        ],
                        "title": "Nucleic Acid Delivery",
                        "type": "string"
                    },
                    "origin_of": {
                        "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                        "items": {
                            "title": "Originated Sample",
                            "type": "string"
                        },
                        "title": "Origin Sample Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "originated_from": {
                        "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                        "title": "Originated From",
                        "type": "string"
                    },
                    "part_of": {
                        "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                        "title": "Part of Biosample",
                        "type": "string"
                    },
                    "parts": {
                        "description": "The parts into which this sample has been divided.",
                        "items": {
                            "title": "Biosample Part",
                            "type": "string"
                        },
                        "title": "Biosample Parts",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "passage_number": {
                        "description": "Number of passages including the passages from the source.",
                        "minimum": 0,
                        "title": "Passage Number",
                        "type": "integer"
                    },
                    "pooled_from": {
                        "description": "The biosamples this biosample is pooled from.",
                        "items": {
                            "title": "Primary Cell Pooled From",
                            "type": "string"
                        },
                        "title": "Biosamples Pooled From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "pooled_in": {
                        "description": "The pooled samples in which this sample is included.",
                        "items": {
                            "title": "Biosample Pooled In",
                            "type": "string"
                        },
                        "title": "Pooled In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "sample_terms": {
                        "description": "Ontology terms identifying a biosample.",
                        "items": {
                            "description": "Ontology term identifying a biosample.",
                            "title": "Sample Term",
                            "type": "string"
                        },
                        "title": "Sample Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sex": {
                        "enum": [
                            "female",
                            "male",
                            "mixed",
                            "unspecified"
                        ],
                        "title": "Sex",
                        "type": "string"
                    },
                    "sorted_fractions": {
                        "description": "The fractions into which this sample has been sorted.",
                        "items": {
                            "title": "Sorted Fraction Sample",
                            "type": "string"
                        },
                        "title": "Sorted Fraction Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sorted_from": {
                        "description": "Links to a larger sample from which this sample was obtained through sorting.",
                        "title": "Sorted From",
                        "type": "string"
                    },
                    "sorted_from_detail": {
                        "description": "Detail for sample sorted into fractions capturing information about sorting.",
                        "title": "Sorted From Detail",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "starting_amount": {
                        "description": "The initial quantity of samples obtained.",
                        "title": "Starting Amount",
                        "type": "number"
                    },
                    "starting_amount_units": {
                        "description": "The units used to quantify the amount of samples obtained.",
                        "enum": [
                            "cells",
                            "cells/ml",
                            "g",
                            "items",
                            "mg",
                            "whole animals",
                            "whole embryos",
                            "\u03bcg",
                            "ng"
                        ],
                        "title": "Starting Amount Units",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the sample.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens",
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "time_post_library_delivery": {
                        "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                        "title": "Time Post Library Delivery",
                        "type": "number"
                    },
                    "time_post_library_delivery_units": {
                        "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Library Delivery Units",
                        "type": "string"
                    },
                    "treatments": {
                        "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                        "items": {
                            "title": "Treatment",
                            "type": "string"
                        },
                        "title": "Treatments",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "upper_bound_age": {
                        "description": "Upper bound of age of the organism at the time of collection of the sample.",
                        "title": "Upper Bound Age",
                        "type": "number"
                    },
                    "upper_bound_age_in_hours": {
                        "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                        "title": "Upper Bound Age In Hours",
                        "type": "number"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Primary Cell",
                "type": "object"
            },
            "Publication": {
                "additionalProperties": false,
                "description": "A publication related to IGVF.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "abstract": {
                        "description": "Abstract of the publication or communication.",
                        "title": "Abstract",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "attachment": {
                        "additionalProperties": false,
                        "description": "The attached content.",
                        "properties": {
                            "download": {
                                "title": "File Name",
                                "type": "string"
                            },
                            "height": {
                                "minimum": 0,
                                "title": "Image Height",
                                "type": "integer"
                            },
                            "href": {
                                "title": "Hypertext REFerence",
                                "type": "string"
                            },
                            "md5sum": {
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "size": {
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": {
                                "enum": [
                                    "application/json",
                                    "application/pdf",
                                    "image/gif",
                                    "image/jpeg",
                                    "image/png",
                                    "image/svs",
                                    "image/tiff",
                                    "text/autosql",
                                    "text/html",
                                    "text/plain",
                                    "text/tab-separated-values"
                                ],
                                "title": "MIME type",
                                "type": "string"
                            },
                            "width": {
                                "minimum": 0,
                                "title": "Image Width",
                                "type": "integer"
                            }
                        },
                        "title": "Attachment",
                        "type": "object"
                    },
                    "authors": {
                        "description": "The authors of the publication.",
                        "title": "Authors",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_published": {
                        "description": "The date the publication or communication was published; must be in YYYY-MM-DD format.",
                        "title": "Publication Date",
                        "type": "string"
                    },
                    "date_revised": {
                        "description": "The date the publication was revised.",
                        "title": "Date Revised",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "donors": {
                        "description": "The donors associated with this publication.",
                        "items": {
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_sets": {
                        "description": "The file sets associated with this publication.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "issue": {
                        "description": "The issue of the publication.",
                        "title": "Issue",
                        "type": "string"
                    },
                    "journal": {
                        "description": "The journal of the publication.",
                        "title": "Journal",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "page": {
                        "description": "Pagination of the reference",
                        "title": "Page",
                        "type": "string"
                    },
                    "publication_identifiers": {
                        "description": "The publication identifiers associated with this publication object.",
                        "items": {
                            "description": "An identifier that references data found in the object.",
                            "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                            "title": "Publication Identifier",
                            "type": "string"
                        },
                        "title": "Publication Identifiers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publication_year": {
                        "description": "The year the publication was published.",
                        "title": "Publication Year",
                        "type": "integer"
                    },
                    "published_by": {
                        "description": "The affiliation of the lab with a larger organization, such as IGVF.",
                        "items": {
                            "enum": [
                                "community",
                                "IGVF",
                                "ENCODE"
                            ],
                            "title": "Published By",
                            "type": "string"
                        },
                        "title": "Published By",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "samples": {
                        "description": "The samples associated with this publication.",
                        "items": {
                            "title": "Sample",
                            "type": "string"
                        },
                        "title": "Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "software": {
                        "description": "The software associated with this publication.",
                        "items": {
                            "title": "Software",
                            "type": "string"
                        },
                        "title": "Software",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "software_versions": {
                        "description": "The software versions associated with this publication.",
                        "items": {
                            "title": "Software Version",
                            "type": "string"
                        },
                        "title": "Software Versions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the publication.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title of the publication or communication.",
                        "title": "Title",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "volume": {
                        "description": "The volume of the publication.",
                        "title": "Volume",
                        "type": "string"
                    },
                    "workflows": {
                        "description": "The workflows associated with this publication.",
                        "items": {
                            "title": "Workflow",
                            "type": "string"
                        },
                        "title": "Workflows",
                        "type": "array",
                        "uniqueItems": true
                    }
                },
                "title": "Publication",
                "type": "object"
            },
            "ReferenceFile": {
                "additionalProperties": false,
                "description": "A file containing diverse reference related information.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "anvil_url": {
                        "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                        "title": "AnVIL URL",
                        "type": "string"
                    },
                    "assembly": {
                        "description": "Genome assembly applicable for the reference data.",
                        "enum": [
                            "GRCh38",
                            "hg19",
                            "GRCm39",
                            "mm10"
                        ],
                        "title": "Genome Assembly",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "controlled_access": {
                        "description": "Boolean value, indicating the file being controlled access, if true.",
                        "title": "Controlled Access",
                        "type": "boolean"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "^(GENCODE|GRC|ENSEMBL):.+$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "external": {
                        "description": "Indicates whether the file was obtained from an external, non-IGVF source.",
                        "title": "External",
                        "type": "boolean"
                    },
                    "external_id": {
                        "description": "A unique identifier for the file at its original source.",
                        "title": "External Identifier",
                        "type": "string"
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "bed",
                            "csv",
                            "dat",
                            "fasta",
                            "gaf",
                            "gds",
                            "gtf",
                            "obo",
                            "owl",
                            "PWM",
                            "tar",
                            "tsv",
                            "txt",
                            "vcf",
                            "xml"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format_type": {
                        "description": "The subtype of bed files.",
                        "enum": [
                            "bed12",
                            "bed3",
                            "bed3+",
                            "bed5",
                            "bed6",
                            "bed6+",
                            "bed9",
                            "bed9+",
                            "mpra_starr"
                        ],
                        "title": "File Format Type",
                        "type": "string"
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "source_url": {
                        "description": "Link to external resource, such as NCBI or GENCODE, where the reference data was obtained.",
                        "title": "Source Url",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the reference file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "transcriptome_annotation": {
                        "description": "The annotation and version of the reference resource.",
                        "enum": [
                            "GENCODE 40",
                            "GENCODE 41",
                            "GENCODE 42",
                            "GENCODE 43",
                            "GENCODE 44",
                            "GENCODE 45",
                            "GENCODE M30",
                            "GENCODE M31",
                            "GENCODE M32",
                            "GENCODE M33",
                            "GENCODE M34"
                        ],
                        "title": "Transcriptome Annotation",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Reference File",
                "type": "object"
            },
            "RodentDonor": {
                "additionalProperties": false,
                "description": "A rodent donor of a biosample. Submission of any sample originating from a rodent donor requires submission of information about the relevant donor. The rodent donor can be a generic representative of an inbred strain, or a unique, individual mouse. For example, submission of a B6 mouse donor is a prerequisite for submission of any B6 mouse samples.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                            "pattern": "^(GEO:SAMN\\d+)|(IMSR_JAX:\\d{6})|(ENCODE:ENCDO\\d{3}[A-Z]{3})$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "genotype": {
                        "description": "The genotype of the strain according to accepted nomenclature conventions.",
                        "title": "Strain Genotype",
                        "type": "string"
                    },
                    "individual_rodent": {
                        "description": "This rodent donor represents an individual rodent.",
                        "title": "Individual Rodent",
                        "type": "boolean"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "phenotypic_features": {
                        "description": "A list of associated phenotypic features of the donor.",
                        "items": {
                            "description": "Phenotypic feature",
                            "title": "Phenotypic Feature",
                            "type": "string"
                        },
                        "title": "Phenotypic Features",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "rodent_identifier": {
                        "description": "The identifier for this individual rodent donor.",
                        "title": "Rodent Identifier",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sex": {
                        "description": "Sex of the donor.",
                        "enum": [
                            "male",
                            "female",
                            "unspecified"
                        ],
                        "title": "Sex",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "strain": {
                        "description": "The specific strain designation of a non-human donor.",
                        "title": "Strain Name",
                        "type": "string"
                    },
                    "strain_background": {
                        "description": "The specific parent strain designation of a non-human donor.",
                        "enum": [
                            "A/J (AJ)",
                            "C57BL/6J (B6)",
                            "129S1/SvImJ (129)",
                            "NOD/ShiLtJ (NOD)",
                            "NZO/H1LtJ (NZO)",
                            "CAST/EiJ (CAST)",
                            "PWK/PhJ (PWK)",
                            "WSB/EiJ (WSB)",
                            "CAST (M. m. castaneus)",
                            "WSB (M. m. domesticus)",
                            "PWK (M. m. musculus)"
                        ],
                        "title": "Strain Background",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the rodent donor.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Rodent Donor",
                "type": "object"
            },
            "SampleTerm": {
                "additionalProperties": false,
                "description": "An ontology term from Cell Ontology (CL), Cell Line Ontology (CLO), Experimental Factor Ontology (EFO), or Uber-anatomy ontology (UBERON) for biological or technical samples.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ancestors": {
                        "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Ancestors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cell_slims": {
                        "description": "Cells associated with the sample term.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Cell",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Sample identifiers from external resources, such as Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((Cellosaurus:CVCL_\\w{4})|(DepMap:ACH-[0-9]{6}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "deprecated_ntr_terms": {
                        "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                        "items": {
                            "description": "NTR term ID",
                            "pattern": "^NTR:[0-9]{2,8}$",
                            "title": "Term ID",
                            "type": "string"
                        },
                        "title": "Deprecated NTR terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "developmental_slims": {
                        "description": "Developmental stages associated with the sample term.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Developmental Slims",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "is_a": {
                        "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                        "items": {
                            "title": "Ontology Term",
                            "type": "string"
                        },
                        "title": "Is A",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "name": {
                        "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "ontology": {
                        "description": "The ontology in which the term is recorded.",
                        "title": "Ontology",
                        "type": "string"
                    },
                    "organ_slims": {
                        "description": "Organs associated with the sample term.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Organ",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the ontology term.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "synonyms": {
                        "description": "Synonyms for the term that have been recorded in an ontology.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Synonyms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "system_slims": {
                        "description": "Organ systems associated with the sample term.",
                        "items": {
                            "type": "string"
                        },
                        "title": "System Slims",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "term_id": {
                        "description": "An ontology identifier describing a biological sample",
                        "pattern": "^(UBERON|EFO|CL|CLO|NTR):[0-9]{2,8}$",
                        "title": "Term ID",
                        "type": "string"
                    },
                    "term_name": {
                        "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                        "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                        "title": "Term Name",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Sample Term",
                "type": "object"
            },
            "SequenceFile": {
                "additionalProperties": false,
                "description": "A file containing sequencing results in bam, fastq, or pod5 formats.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "anvil_url": {
                        "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                        "title": "AnVIL URL",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "base_modifications": {
                        "description": "The chemical modifications to bases in a DNA sequence that are detected in this file.",
                        "items": {
                            "description": "The chemical modification to bases in a DNA sequence that is detected in this file.",
                            "enum": [
                                "4mC",
                                "5hmC",
                                "5mC",
                                "6mA"
                            ],
                            "title": "Base Modification",
                            "type": "string"
                        },
                        "title": "Base Modifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "controlled_access": {
                        "description": "Boolean value, indicating the file being controlled access, if true.",
                        "title": "Controlled Access",
                        "type": "boolean"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "^(SRA:(SRR|SRX)\\d+)$",
                            "title": "External identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "bam",
                            "fastq",
                            "pod5"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "flowcell_id": {
                        "description": "The alphanumeric identifier for the flowcell of a sequencing machine.",
                        "pattern": "^[a-zA-Z0-9-]+$",
                        "title": "Flowcell ID",
                        "type": "string"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "illumina_read_type": {
                        "description": "The read type of the file. Relevant only for files produced using an Illumina sequencing platform.",
                        "enum": [
                            "R1",
                            "R2",
                            "R3",
                            "I1",
                            "I2"
                        ],
                        "title": "Illumina Read Type",
                        "type": "string"
                    },
                    "index": {
                        "description": "An Illumina index associated with the file.",
                        "title": "Index",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lane": {
                        "description": "An integer identifying the lane of a sequencing machine.",
                        "minimum": 1,
                        "title": "Lane",
                        "type": "integer"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "maximum_read_length": {
                        "description": "For high-throughput sequencing, the maximum number of contiguous nucleotides determined by sequencing.",
                        "maximum": 300000000,
                        "minimum": 0,
                        "title": "Maximum Read Length",
                        "type": "integer"
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "mean_read_length": {
                        "description": "For high-throughput sequencing, the mean number of contiguous nucleotides determined by sequencing.",
                        "maximum": 300000000,
                        "minimum": 0,
                        "title": "Mean Read Length",
                        "type": "number"
                    },
                    "minimum_read_length": {
                        "description": "For high-throughput sequencing, the minimum number of contiguous nucleotides determined by sequencing.",
                        "maximum": 300000000,
                        "minimum": 0,
                        "title": "Minimum Read Length",
                        "type": "integer"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "read_count": {
                        "description": "Number of reads in a fastq file.",
                        "minimum": 0,
                        "title": "Read Count",
                        "type": "integer"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "seqspecs": {
                        "description": "Link(s) to the associated seqspec YAML configuration file(s).",
                        "items": {
                            "title": "Seqspecs",
                            "type": "string"
                        },
                        "title": "Seqspecs",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sequencing_kit": {
                        "description": "A reagent kit used with a library to prepare it for sequencing.",
                        "enum": [
                            "HiSeq SBS Kit v4",
                            "HiSeq SR Cluster Kit v4-cBot-HS",
                            "HiSeq PE Cluster Kit v4-cBot-HS",
                            "HiSeq SR Rapid Cluster Kit v2",
                            "HiSeq PE Rapid Cluster Kit v2",
                            "HiSeq Rapid SBS Kit v2",
                            "HiSeq 3000/4000 SBS Kit",
                            "HiSeq 3000/4000 SR Cluster Kit",
                            "HiSeq 3000/4000 PE Cluster Kit",
                            "MiSeq Reagent Kit v2",
                            "NextSeq 500 Mid Output Kit",
                            "NextSeq 500 High Output Kit",
                            "NextSeq 500 Mid Output v2 Kit",
                            "NextSeq 500 High Output v2 Kit",
                            "NextSeq 500/550 Mid-Output v2.5 Kit",
                            "NextSeq 500/550 High-Output v2.5 Kit",
                            "TG NextSeq 500/550 Mid-Output Kit v2.5",
                            "TG NextSeq 500/550 High-Output Kit v2.5",
                            "NextSeq 1000/2000 P1 Reagent Kit",
                            "NextSeq 1000/2000 P2 Reagent Kit",
                            "NextSeq 1000/2000 P3 Reagent Kit",
                            "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                            "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                            "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                            "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                            "NovaSeq 6000 SP Reagent Kit v1.5",
                            "NovaSeq 6000 S1 Reagent Kit v1.5",
                            "NovaSeq 6000 S2 Reagent Kit v1.5",
                            "NovaSeq 6000 S4 Reagent Kit v1.5",
                            "NovaSeq X Series 1.5B Reagent Kit",
                            "NovaSeq X Series 10B Reagent Kit",
                            "NovaSeq X Series 25B Reagent Kit",
                            "ONT Ligation Sequencing Kit V14",
                            "Sequel sequencing kit 3.0",
                            "Sequel II sequencing kit 2.0"
                        ],
                        "title": "Sequencing Kit",
                        "type": "string"
                    },
                    "sequencing_platform": {
                        "description": "The measurement device used to produce sequencing data.",
                        "title": "Sequencing Platform",
                        "type": "string"
                    },
                    "sequencing_run": {
                        "description": "An ordinal number indicating which sequencing run of the associated library that the file belongs to.",
                        "minimum": 1,
                        "title": "Sequencing Run",
                        "type": "integer"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the sequence file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Sequence File",
                "type": "object"
            },
            "SignalFile": {
                "additionalProperties": false,
                "description": "A file containing analyzed sequencing data in signal form using a bigwig format.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "assembly": {
                        "description": "Genome assembly applicable for the annotation data.",
                        "enum": [
                            "GRCh38",
                            "GRCm39"
                        ],
                        "title": "Genome Assembly",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_summary": {
                        "description": "A summary of the data in the signal file.",
                        "title": "Content Summary",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "bigWig"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "filtered": {
                        "description": "Indicates if the signal file is filtered.",
                        "title": "Filtered",
                        "type": "boolean"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "normalized": {
                        "description": "Indicates if the signal file is normalized.",
                        "title": "Normalized",
                        "type": "boolean"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "reference_files": {
                        "description": "Link to the reference files used to generate this file.",
                        "items": {
                            "description": "Link to a reference file used to generate this file.",
                            "title": "Reference File",
                            "type": "string"
                        },
                        "title": "Reference Files",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "start_view_position": {
                        "description": "The 0-based coordinate for the default starting position when viewing the signal in a genome browser.",
                        "pattern": "^(chr(X|Y|M|[1-9]|1[0-9]|2[0-2]):[0-9]+)$",
                        "title": "Start View Position",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "strand_specificity": {
                        "description": "The strandedness of the signal file: plus, minus, or unstranded.",
                        "enum": [
                            "plus",
                            "minus",
                            "unstranded"
                        ],
                        "title": "Strand Specificity",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the signal file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "transcriptome_annotation": {
                        "description": "The annotation and version of the reference resource.",
                        "enum": [
                            "GENCODE 40",
                            "GENCODE 41",
                            "GENCODE 42",
                            "GENCODE 43",
                            "GENCODE 44",
                            "GENCODE 45",
                            "GENCODE M30",
                            "GENCODE M31",
                            "GENCODE M32",
                            "GENCODE M33",
                            "GENCODE M34"
                        ],
                        "title": "Transcriptome Annotation",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Signal File",
                "type": "object"
            },
            "Software": {
                "additionalProperties": false,
                "description": "A software used for computational  analysis. For example, Bowtie2 alignment software.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name of the software package; a lowercase version of the title.",
                        "pattern": "^[a-z0-9\\-\\_]+",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "source_url": {
                        "description": "An external resource to the codebase.",
                        "title": "Source URL",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "The preferred viewable name of the software.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Title",
                        "type": "string"
                    },
                    "used_by": {
                        "description": "The component(s) of the IGVF consortium that utilize this software.",
                        "items": {
                            "enum": [
                                "consortium analysis",
                                "DACC",
                                "processing pipelines"
                            ],
                            "title": "Used by",
                            "type": "string"
                        },
                        "title": "Used by",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "versions": {
                        "description": "A list of versions that have been released for this software.",
                        "items": {
                            "title": "Version",
                            "type": "string"
                        },
                        "title": "Versions",
                        "type": "array",
                        "uniqueItems": true
                    }
                },
                "title": "Software",
                "type": "object"
            },
            "SoftwareVersion": {
                "additionalProperties": false,
                "anyOf": [
                    {
                        "required": [
                            "lab",
                            "award",
                            "software",
                            "version",
                            "download_id"
                        ]
                    },
                    {
                        "required": [
                            "lab",
                            "award",
                            "software",
                            "version",
                            "downloaded_url"
                        ]
                    }
                ],
                "description": "A specific version of a software used for computational analysis. For example, Bowtie2 v2.3.0.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "download_id": {
                        "description": "The MD5 checksum, SHA-1 commit ID, image hash, or similar permanent identifier of the particular version of software used.",
                        "title": "Download ID",
                        "type": "string"
                    },
                    "downloaded_url": {
                        "description": "An external resource to track the version of the software downloaded.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "name": {
                        "description": "A unique identifier for a software version.",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "software": {
                        "description": "Unique name of the software package.",
                        "title": "Software",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a particular software.",
                        "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$",
                        "title": "Version",
                        "type": "string"
                    }
                },
                "title": "Software Version",
                "type": "object"
            },
            "Source": {
                "additionalProperties": false,
                "description": "A vendor or a lab that provides samples for study.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "name": {
                        "description": "A short unique name for the source.",
                        "pattern": "^[a-z0-9\\-]+$",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the source.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "The complete name of the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Title",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Source",
                "type": "object"
            },
            "TabularFile": {
                "additionalProperties": false,
                "description": "A file containing textual data with a tabular structure.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_step_version": {
                        "description": "The analysis step version of the file.",
                        "title": "Analysis Step Version",
                        "type": "string"
                    },
                    "anvil_url": {
                        "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                        "title": "AnVIL URL",
                        "type": "string"
                    },
                    "assembly": {
                        "description": "Genome assembly applicable for the tabular data.",
                        "enum": [
                            "GRCh38",
                            "GRCm39"
                        ],
                        "title": "Genome Assembly",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "content_md5sum": {
                        "description": "The MD5sum of the uncompressed file.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "Content MD5sum",
                        "type": "string"
                    },
                    "content_type": {
                        "description": "The type of content in the file.",
                        "title": "Content Type",
                        "type": "string"
                    },
                    "controlled_access": {
                        "description": "Boolean value, indicating the file being controlled access, if true.",
                        "title": "Controlled Access",
                        "type": "boolean"
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                        "items": {
                            "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "pattern": "(?!)",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "derived_from": {
                        "description": "The files participating as inputs into software to produce this output file.",
                        "items": {
                            "title": "File Derived From",
                            "type": "string"
                        },
                        "title": "Derived From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format": {
                        "description": "The file format or extension of the file.",
                        "enum": [
                            "bed",
                            "csv",
                            "gtf",
                            "tsv",
                            "txt",
                            "vcf"
                        ],
                        "title": "File Format",
                        "type": "string"
                    },
                    "file_format_specifications": {
                        "description": "Document that further explains the file format.",
                        "items": {
                            "title": "File Format Specifications Document",
                            "type": "string"
                        },
                        "title": "File Format Specifications Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_format_type": {
                        "description": "The subtype of bed files.",
                        "enum": [
                            "bed12",
                            "bed3",
                            "bed3+",
                            "bed5",
                            "bed6",
                            "bed6+",
                            "bed9",
                            "bed9+",
                            "mpra_starr"
                        ],
                        "title": "File Format Type",
                        "type": "string"
                    },
                    "file_set": {
                        "description": "The file set that this file belongs to.",
                        "title": "File Set",
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size specified in bytes.",
                        "minimum": 0,
                        "title": "File Size",
                        "type": "integer"
                    },
                    "gene_list_for": {
                        "description": "File Set(s) that this file is a gene list for.",
                        "items": {
                            "title": "Gene List For",
                            "type": "string"
                        },
                        "title": "Gene List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The download path to obtain file.",
                        "title": "Download URL",
                        "type": "string"
                    },
                    "input_file_for": {
                        "description": "The files which are derived from this file.",
                        "items": {
                            "title": "Input File For",
                            "type": "string"
                        },
                        "title": "Input File For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "integrated_in": {
                        "description": "Construct library set(s) that this file was used for in insert design.",
                        "items": {
                            "title": "Integrated In",
                            "type": "string"
                        },
                        "title": "Integrated In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "loci_list_for": {
                        "description": "File Set(s) that this file is a loci list for.",
                        "items": {
                            "title": "Loci List For",
                            "type": "string"
                        },
                        "title": "Loci List For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "md5sum": {
                        "description": "The md5sum of the file being transferred.",
                        "maxLength": 32,
                        "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                        "title": "MD5sum",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "s3_uri": {
                        "description": "The S3 URI of public file object.",
                        "title": "S3 URI",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitted_file_name": {
                        "description": "Original name of the file.",
                        "title": "Submitted File Name",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the tabular file.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "transcriptome_annotation": {
                        "description": "The annotation and version of the reference resource.",
                        "enum": [
                            "GENCODE 40",
                            "GENCODE 41",
                            "GENCODE 42",
                            "GENCODE 43",
                            "GENCODE 44",
                            "GENCODE 45",
                            "GENCODE M30",
                            "GENCODE M31",
                            "GENCODE M32",
                            "GENCODE M33",
                            "GENCODE M34"
                        ],
                        "title": "Transcriptome Annotation",
                        "type": "string"
                    },
                    "upload_credentials": {
                        "description": "The upload credentials for S3 to submit the file content.",
                        "title": "Upload Credentials",
                        "type": "object"
                    },
                    "upload_status": {
                        "description": "The upload/validation status of the file.",
                        "enum": [
                            "pending",
                            "file not found",
                            "invalidated",
                            "validated"
                        ],
                        "title": "Upload Status",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "validation_error_detail": {
                        "description": "Explanation of why the file failed the automated content checks.",
                        "title": "Validation Error Detail",
                        "type": "string"
                    }
                },
                "title": "Tabular File",
                "type": "object"
            },
            "TechnicalSample": {
                "additionalProperties": false,
                "description": "A sample that is used as a medium to perform biological measurement without the intent to characterize the technical sample itself. For example, the solution in which RNA oligos binding experiments are performed.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "classifications": {
                        "description": "The general category of this type of sample.",
                        "items": {
                            "title": "Classification",
                            "type": "string"
                        },
                        "title": "Classifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "construct_library_sets": {
                        "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                        "items": {
                            "title": "Construct Library Set",
                            "type": "string"
                        },
                        "title": "Construct Library Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_obtained": {
                        "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                        "title": "Date Obtained",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "file_sets": {
                        "description": "The file sets linked to this sample.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "institutional_certificates": {
                        "description": "The institutional certificates under which use of this sample is approved.",
                        "items": {
                            "title": "Institutional Certificate",
                            "type": "string"
                        },
                        "title": "Institutional Certificates",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "moi": {
                        "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                        "minimum": 0,
                        "title": "Multiplicity Of Infection",
                        "type": "number"
                    },
                    "multiplexed_in": {
                        "description": "The multiplexed samples in which this sample is included.",
                        "items": {
                            "title": "Multiplexed In",
                            "type": "string"
                        },
                        "title": "Multiplexed In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "nucleic_acid_delivery": {
                        "description": "Method of introduction of nucleic acid into the cell.",
                        "enum": [
                            "transfection",
                            "adenoviral transduction",
                            "lentiviral transduction"
                        ],
                        "title": "Nucleic Acid Delivery",
                        "type": "string"
                    },
                    "origin_of": {
                        "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                        "items": {
                            "title": "Originated Sample",
                            "type": "string"
                        },
                        "title": "Origin Sample Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "sample_material": {
                        "enum": [
                            "undefined",
                            "inorganic",
                            "synthetic",
                            "organic"
                        ],
                        "title": "Sample Material",
                        "type": "string"
                    },
                    "sample_terms": {
                        "description": "Ontology terms identifying a technical sample.",
                        "items": {
                            "description": "Ontology term identifying a technical sample.",
                            "title": "Sample Term",
                            "type": "string"
                        },
                        "title": "Sample Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sorted_fractions": {
                        "description": "The fractions into which this sample has been sorted.",
                        "items": {
                            "title": "Sorted Fraction Sample",
                            "type": "string"
                        },
                        "title": "Sorted Fraction Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sorted_from": {
                        "description": "Links to a larger sample from which this sample was obtained through sorting.",
                        "title": "Sorted From",
                        "type": "string"
                    },
                    "sorted_from_detail": {
                        "description": "Detail for sample sorted into fractions capturing information about sorting.",
                        "title": "Sorted From Detail",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "starting_amount": {
                        "description": "The initial quantity of samples obtained.",
                        "title": "Starting Amount",
                        "type": "number"
                    },
                    "starting_amount_units": {
                        "description": "The units used to quantify the amount of samples obtained.",
                        "enum": [
                            "cells",
                            "cells/ml",
                            "g",
                            "items",
                            "mg",
                            "whole animals",
                            "whole embryos",
                            "\u03bcg",
                            "ng"
                        ],
                        "title": "Starting Amount Units",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of this sample.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "enum": [
                            "Saccharomyces cerevisiae",
                            "Homo sapiens"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "time_post_library_delivery": {
                        "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                        "title": "Time Post Library Delivery",
                        "type": "number"
                    },
                    "time_post_library_delivery_units": {
                        "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Library Delivery Units",
                        "type": "string"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Technical Sample",
                "type": "object"
            },
            "Tissue": {
                "additionalProperties": false,
                "description": "A biosample that is directly harvested from a donor, typically a dissection from an organ.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "age": {
                        "description": "Age of organism at the time of collection of the sample.",
                        "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                        "title": "Age",
                        "type": "string"
                    },
                    "age_units": {
                        "description": "The units of time associated with age of the biosample.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                        ],
                        "title": "Age Units",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biomarkers": {
                        "description": "Biological markers that are associated with this sample.",
                        "items": {
                            "description": "Associated biomarker.",
                            "title": "Biomarker",
                            "type": "string"
                        },
                        "title": "Biomarkers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ccf_id": {
                        "description": "HubMap Common Coordinate Framework unique identifier corresponding to the organ, biological structure, and spatial location of the tissue specimen.",
                        "title": "Common Coordinate Framework Identifier",
                        "type": "string"
                    },
                    "cellular_sub_pool": {
                        "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                        "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                        "title": "Cellular Sub Pool",
                        "type": "string"
                    },
                    "classifications": {
                        "description": "The general category of this type of sample.",
                        "items": {
                            "title": "Classification",
                            "type": "string"
                        },
                        "title": "Classifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "construct_library_sets": {
                        "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                        "items": {
                            "title": "Construct Library Set",
                            "type": "string"
                        },
                        "title": "Construct Library Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_obtained": {
                        "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                        "title": "Date Harvested",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "disease_terms": {
                        "description": "Ontology term of the disease associated with the biosample.",
                        "items": {
                            "title": "Disease Term",
                            "type": "string"
                        },
                        "title": "Disease Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "Donor(s) the sample was derived from.",
                        "items": {
                            "description": "Donor.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "embryonic": {
                        "description": "Biosample is embryonic.",
                        "title": "Embryonic",
                        "type": "boolean"
                    },
                    "file_sets": {
                        "description": "The file sets linked to this sample.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "institutional_certificates": {
                        "description": "The institutional certificates under which use of this sample is approved.",
                        "items": {
                            "title": "Institutional Certificate",
                            "type": "string"
                        },
                        "title": "Institutional Certificates",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "lower_bound_age": {
                        "description": "Lower bound of age of the organism at the time of collection of the sample.",
                        "title": "Lower Bound Age",
                        "type": "number"
                    },
                    "lower_bound_age_in_hours": {
                        "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                        "title": "Lower Bound Age In Hours",
                        "type": "number"
                    },
                    "modifications": {
                        "description": "Links to modifications applied to this biosample.",
                        "items": {
                            "description": "Link to a modification applied to this biosample.",
                            "title": "Modification",
                            "type": "string"
                        },
                        "title": "Modifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "moi": {
                        "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                        "minimum": 0,
                        "title": "Multiplicity Of Infection",
                        "type": "number"
                    },
                    "multiplexed_in": {
                        "description": "The multiplexed samples in which this sample is included.",
                        "items": {
                            "title": "Multiplexed In",
                            "type": "string"
                        },
                        "title": "Multiplexed In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "nucleic_acid_delivery": {
                        "description": "Method of introduction of nucleic acid into the cell.",
                        "enum": [
                            "transfection",
                            "adenoviral transduction",
                            "lentiviral transduction"
                        ],
                        "title": "Nucleic Acid Delivery",
                        "type": "string"
                    },
                    "origin_of": {
                        "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                        "items": {
                            "title": "Originated Sample",
                            "type": "string"
                        },
                        "title": "Origin Sample Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "originated_from": {
                        "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                        "title": "Originated From",
                        "type": "string"
                    },
                    "part_of": {
                        "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                        "title": "Part of Biosample",
                        "type": "string"
                    },
                    "parts": {
                        "description": "The parts into which this sample has been divided.",
                        "items": {
                            "title": "Biosample Part",
                            "type": "string"
                        },
                        "title": "Biosample Parts",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "pmi": {
                        "description": "The amount of time elapsed since death.",
                        "minimum": 1,
                        "title": "Post-mortem Interval",
                        "type": "integer"
                    },
                    "pmi_units": {
                        "description": "The unit in which the PMI time was reported.",
                        "enum": [
                            "second",
                            "minute",
                            "hour",
                            "day",
                            "week"
                        ],
                        "title": "Post-mortem Interval Units",
                        "type": "string"
                    },
                    "pooled_from": {
                        "description": "The biosamples this biosample is pooled from.",
                        "items": {
                            "title": "Tissue Pooled From",
                            "type": "string"
                        },
                        "title": "Biosamples Pooled From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "pooled_in": {
                        "description": "The pooled samples in which this sample is included.",
                        "items": {
                            "title": "Biosample Pooled In",
                            "type": "string"
                        },
                        "title": "Pooled In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "preservation_method": {
                        "description": "The method by which the tissue was preserved: cryopreservation (slow-freeze) or flash-freezing.",
                        "enum": [
                            "cryopreservation",
                            "flash-freezing"
                        ],
                        "title": "Preservation Method",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "sample_terms": {
                        "description": "Ontology terms identifying a biosample.",
                        "items": {
                            "description": "Ontology term identifying a biosample.",
                            "title": "Sample Term",
                            "type": "string"
                        },
                        "title": "Sample Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sex": {
                        "enum": [
                            "female",
                            "male",
                            "mixed",
                            "unspecified"
                        ],
                        "title": "Sex",
                        "type": "string"
                    },
                    "sorted_fractions": {
                        "description": "The fractions into which this sample has been sorted.",
                        "items": {
                            "title": "Sorted Fraction Sample",
                            "type": "string"
                        },
                        "title": "Sorted Fraction Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sorted_from": {
                        "description": "Links to a larger sample from which this sample was obtained through sorting.",
                        "title": "Sorted From",
                        "type": "string"
                    },
                    "sorted_from_detail": {
                        "description": "Detail for sample sorted into fractions capturing information about sorting.",
                        "title": "Sorted From Detail",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "starting_amount": {
                        "description": "The initial quantity of samples obtained.",
                        "title": "Starting Amount",
                        "type": "number"
                    },
                    "starting_amount_units": {
                        "description": "The units used to quantify the amount of samples obtained.",
                        "enum": [
                            "cells",
                            "cells/ml",
                            "g",
                            "items",
                            "mg",
                            "whole animals",
                            "whole embryos",
                            "\u03bcg",
                            "ng"
                        ],
                        "title": "Starting Amount Units",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the sample.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens",
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "time_post_library_delivery": {
                        "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                        "title": "Time Post Library Delivery",
                        "type": "number"
                    },
                    "time_post_library_delivery_units": {
                        "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Library Delivery Units",
                        "type": "string"
                    },
                    "treatments": {
                        "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                        "items": {
                            "title": "Treatment",
                            "type": "string"
                        },
                        "title": "Treatments",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "upper_bound_age": {
                        "description": "Upper bound of age of the organism at the time of collection of the sample.",
                        "title": "Upper Bound Age",
                        "type": "number"
                    },
                    "upper_bound_age_in_hours": {
                        "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                        "title": "Upper Bound Age In Hours",
                        "type": "number"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Tissue",
                "type": "object"
            },
            "Treatment": {
                "additionalProperties": false,
                "description": "A protein or chemical treatment applied to samples such as lipopolysaccharide, interleukin-2, or leucine.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "amount": {
                        "description": "Specific quantity of the applied treatment (used in conjunction with amount_units).",
                        "title": "Amount",
                        "type": "number"
                    },
                    "amount_units": {
                        "description": "A unit for an amount other than those for time or temperature.",
                        "enum": [
                            "mg/kg",
                            "mg/mL",
                            "mM",
                            "ng/mL",
                            "nM",
                            "percent",
                            "\u03bcg/kg",
                            "\u03bcg/kg",
                            "\u03bcg/mL",
                            "\u03bcM",
                            "kpa"
                        ],
                        "title": "Amount Units",
                        "type": "string"
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biosamples_treated": {
                        "description": "The samples which have been treated using this treatment.",
                        "items": {
                            "title": "Biosamples Treated",
                            "type": "string"
                        },
                        "title": "Biosamples Treated",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "depletion": {
                        "description": "Treatment is depleted.",
                        "title": "Depletion",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that describe the treatment protocol details.",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "duration": {
                        "description": "Duration indicates the time elapsed between the start and end of the treatment.",
                        "title": "Duration",
                        "type": "number"
                    },
                    "duration_units": {
                        "description": "A unit of time.",
                        "enum": [
                            "second",
                            "minute",
                            "hour",
                            "day"
                        ],
                        "title": "Duration Units",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "pH": {
                        "description": "Final pH of the solution containing a chemical compound (if applicable)",
                        "title": "pH",
                        "type": "number"
                    },
                    "post_treatment_time": {
                        "description": "Post treatment time in conjunction with post treatment time units is used to specify the time that has passed between the point when biosamples were removed from the treatment solution before being sampled or treated with the next treatment.",
                        "title": "Post-treatment Time",
                        "type": "number"
                    },
                    "post_treatment_time_units": {
                        "description": "A unit of time.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Post-treatment Time Units",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "purpose": {
                        "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                        "enum": [
                            "activation",
                            "agonist",
                            "antagonist",
                            "control",
                            "differentiation",
                            "de-differentiation",
                            "perturbation",
                            "selection",
                            "stimulation"
                        ],
                        "title": "Purpose",
                        "type": "string"
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "archived",
                            "deleted",
                            "in progress",
                            "released"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "title": "Summary",
                        "type": "string"
                    },
                    "temperature": {
                        "description": "The temperature in Celsius to which the sample was exposed",
                        "title": "Temperature",
                        "type": "number"
                    },
                    "temperature_units": {
                        "description": "A unit of temperature.",
                        "enum": [
                            "Celsius"
                        ],
                        "title": "Temperature Units",
                        "type": "string"
                    },
                    "treatment_term_id": {
                        "description": "Ontology identifier describing a component in the treatment.",
                        "pattern": "^((CHEBI:[0-9]{1,7})|(UniProtKB:[A-Z0-9]{6})|(NTR:[0-9]{2,8}))$",
                        "title": "Treatment Term ID",
                        "type": "string"
                    },
                    "treatment_term_name": {
                        "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc.",
                        "title": "Treatment Term Name",
                        "type": "string"
                    },
                    "treatment_type": {
                        "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                        "enum": [
                            "chemical",
                            "protein",
                            "environmental"
                        ],
                        "title": "Treatment Type",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    }
                },
                "title": "Treatment",
                "type": "object"
            },
            "User": {
                "additionalProperties": false,
                "description": "A user of IGVF data portal who is a member or affiliate member of IGVF.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email associated with the user's account.",
                        "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
                        "title": "Email",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "The user's first (given) name.",
                        "title": "First Name",
                        "type": "string"
                    },
                    "groups": {
                        "description": "Additional access control groups",
                        "items": {
                            "enum": [
                                "admin",
                                "read-only-admin",
                                "verified"
                            ],
                            "title": "Group",
                            "type": "string"
                        },
                        "title": "Groups",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "job_title": {
                        "description": "The role of the user in their lab or organization.",
                        "enum": [
                            "Principal Investigator",
                            "Co-Investigator",
                            "Project Manager",
                            "Submitter",
                            "Post Doc",
                            "Data Wrangler",
                            "Scientist",
                            "Computational Scientist",
                            "Software Developer",
                            "NHGRI staff member",
                            "Other"
                        ],
                        "title": "Job Title",
                        "type": "string"
                    },
                    "lab": {
                        "description": "Lab user is primarily associated with.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The user's last (family) name.",
                        "title": "Last Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "current",
                            "deleted",
                            "disabled"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submits_for": {
                        "description": "Labs user is authorized to submit data for.",
                        "items": {
                            "description": "A lab user is authorized to submit for.",
                            "title": "Lab Submittable For",
                            "type": "string"
                        },
                        "title": "Submits For",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "title": {
                        "description": "The full name of the user.",
                        "title": "Title",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "viewing_groups": {
                        "description": "The group that determines which set of data the user has permission to view.",
                        "items": {
                            "enum": [
                                "community",
                                "IGVF"
                            ],
                            "title": "View Access Group",
                            "type": "string"
                        },
                        "title": "View Access Groups",
                        "type": "array",
                        "uniqueItems": true
                    }
                },
                "title": "User",
                "type": "object"
            },
            "WholeOrganism": {
                "additionalProperties": false,
                "description": "A biosample that is a whole model organism. For example, a mouse embryo.",
                "not": {
                    "anyOf": [
                        {
                            "required": [
                                "part_of"
                            ]
                        },
                        {
                            "required": [
                                "pooled_from"
                            ]
                        }
                    ]
                },
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "age": {
                        "description": "Age of organism at the time of collection of the sample.",
                        "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                        "title": "Age",
                        "type": "string"
                    },
                    "age_units": {
                        "description": "The units of time associated with age of the biosample.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                        ],
                        "title": "Age Units",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "biomarkers": {
                        "description": "Biological markers that are associated with this sample.",
                        "items": {
                            "description": "Associated biomarker.",
                            "title": "Biomarker",
                            "type": "string"
                        },
                        "title": "Biomarkers",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "cellular_sub_pool": {
                        "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                        "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                        "title": "Cellular Sub Pool",
                        "type": "string"
                    },
                    "classifications": {
                        "description": "The general category of this type of sample.",
                        "items": {
                            "title": "Classification",
                            "type": "string"
                        },
                        "title": "Classifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "construct_library_sets": {
                        "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                        "items": {
                            "title": "Construct Library Set",
                            "type": "string"
                        },
                        "title": "Construct Library Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "date_obtained": {
                        "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                        "title": "Date Obtained",
                        "type": "string"
                    },
                    "dbxrefs": {
                        "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                        "items": {
                            "description": "An identifier from external resource.",
                            "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                            "title": "External Identifier",
                            "type": "string"
                        },
                        "title": "External Resources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "disease_terms": {
                        "description": "Ontology term of the disease associated with the biosample.",
                        "items": {
                            "title": "Disease Term",
                            "type": "string"
                        },
                        "title": "Disease Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "donors": {
                        "description": "Donor(s) the sample was derived from.",
                        "items": {
                            "description": "Donor.",
                            "title": "Donor",
                            "type": "string"
                        },
                        "title": "Donors",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "embryonic": {
                        "description": "Biosample is embryonic.",
                        "title": "Embryonic",
                        "type": "boolean"
                    },
                    "file_sets": {
                        "description": "The file sets linked to this sample.",
                        "items": {
                            "title": "File Set",
                            "type": "string"
                        },
                        "title": "File Sets",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "institutional_certificates": {
                        "description": "The institutional certificates under which use of this sample is approved.",
                        "items": {
                            "title": "Institutional Certificate",
                            "type": "string"
                        },
                        "title": "Institutional Certificates",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "lot_id": {
                        "description": "The lot identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Lot ID",
                        "type": "string"
                    },
                    "lower_bound_age": {
                        "description": "Lower bound of age of the organism at the time of collection of the sample.",
                        "title": "Lower Bound Age",
                        "type": "number"
                    },
                    "lower_bound_age_in_hours": {
                        "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                        "title": "Lower Bound Age In Hours",
                        "type": "number"
                    },
                    "modifications": {
                        "description": "Links to modifications applied to this biosample.",
                        "items": {
                            "description": "Link to a modification applied to this biosample.",
                            "title": "Modification",
                            "type": "string"
                        },
                        "title": "Modifications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "moi": {
                        "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                        "minimum": 0,
                        "title": "Multiplicity Of Infection",
                        "type": "number"
                    },
                    "multiplexed_in": {
                        "description": "The multiplexed samples in which this sample is included.",
                        "items": {
                            "title": "Multiplexed In",
                            "type": "string"
                        },
                        "title": "Multiplexed In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "nucleic_acid_delivery": {
                        "description": "Method of introduction of nucleic acid into the cell.",
                        "enum": [
                            "transfection",
                            "adenoviral transduction",
                            "lentiviral transduction"
                        ],
                        "title": "Nucleic Acid Delivery",
                        "type": "string"
                    },
                    "origin_of": {
                        "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                        "items": {
                            "title": "Originated Sample",
                            "type": "string"
                        },
                        "title": "Origin Sample Of",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "originated_from": {
                        "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                        "title": "Originated From",
                        "type": "string"
                    },
                    "part_of": {
                        "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                        "title": "Part of Biosample",
                        "type": "string"
                    },
                    "parts": {
                        "description": "The parts into which this sample has been divided.",
                        "items": {
                            "title": "Biosample Part",
                            "type": "string"
                        },
                        "title": "Biosample Parts",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "pooled_from": {
                        "description": "The biosamples this biosample is pooled from.",
                        "items": {
                            "description": "Pooled biosample.",
                            "title": "Biosample Pooled From",
                            "type": "string"
                        },
                        "title": "Biosamples Pooled From",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "pooled_in": {
                        "description": "The pooled samples in which this sample is included.",
                        "items": {
                            "title": "Biosample Pooled In",
                            "type": "string"
                        },
                        "title": "Pooled In",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "product_id": {
                        "description": "The product identifier provided by the originating lab or vendor.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Product ID",
                        "type": "string"
                    },
                    "protocols": {
                        "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                        "items": {
                            "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                            "title": "Protocol",
                            "type": "string"
                        },
                        "title": "Protocols",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "sample_terms": {
                        "description": "Ontology terms identifying a biosample.",
                        "items": {
                            "description": "Ontology term identifying a biosample.",
                            "title": "Sample Term",
                            "type": "string"
                        },
                        "title": "Sample Terms",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "sex": {
                        "enum": [
                            "female",
                            "male",
                            "mixed",
                            "unspecified"
                        ],
                        "title": "Sex",
                        "type": "string"
                    },
                    "sorted_fractions": {
                        "description": "The fractions into which this sample has been sorted.",
                        "items": {
                            "title": "Sorted Fraction Sample",
                            "type": "string"
                        },
                        "title": "Sorted Fraction Samples",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "sorted_from": {
                        "description": "Links to a larger sample from which this sample was obtained through sorting.",
                        "title": "Sorted From",
                        "type": "string"
                    },
                    "sorted_from_detail": {
                        "description": "Detail for sample sorted into fractions capturing information about sorting.",
                        "title": "Sorted From Detail",
                        "type": "string"
                    },
                    "sources": {
                        "description": "The originating lab(s) or vendor(s).",
                        "items": {
                            "description": "The originating lab or vendor.",
                            "title": "Source",
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "starting_amount": {
                        "description": "The initial quantity of samples obtained.",
                        "title": "Starting Amount",
                        "type": "number"
                    },
                    "starting_amount_units": {
                        "description": "The units used to quantify the amount of samples obtained.",
                        "enum": [
                            "cells",
                            "cells/ml",
                            "g",
                            "items",
                            "mg",
                            "whole animals",
                            "whole embryos",
                            "\u03bcg",
                            "ng"
                        ],
                        "title": "Starting Amount Units",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the sample.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "taxa": {
                        "description": "The species of the organism.",
                        "enum": [
                            "Homo sapiens",
                            "Mus musculus"
                        ],
                        "title": "Taxa",
                        "type": "string"
                    },
                    "time_post_library_delivery": {
                        "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                        "title": "Time Post Library Delivery",
                        "type": "number"
                    },
                    "time_post_library_delivery_units": {
                        "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                        "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "title": "Time Post Library Delivery Units",
                        "type": "string"
                    },
                    "treatments": {
                        "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                        "items": {
                            "title": "Treatment",
                            "type": "string"
                        },
                        "title": "Treatments",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "upper_bound_age": {
                        "description": "Upper bound of age of the organism at the time of collection of the sample.",
                        "title": "Upper Bound Age",
                        "type": "number"
                    },
                    "upper_bound_age_in_hours": {
                        "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                        "title": "Upper Bound Age In Hours",
                        "type": "number"
                    },
                    "url": {
                        "description": "An external resource with additional information.",
                        "title": "URL",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "virtual": {
                        "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                        "title": "Virtual",
                        "type": "boolean"
                    }
                },
                "title": "Whole Organism",
                "type": "object"
            },
            "Workflow": {
                "additionalProperties": false,
                "description": "A workflow for computational analysis of genomic data. A workflow is made up of analysis steps.",
                "properties": {
                    "@id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "@type": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Type",
                        "type": "array"
                    },
                    "accession": {
                        "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                        "title": "Accession",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Lab specific identifiers to reference an object.",
                        "items": {
                            "description": "A lab specific identifier to reference an object.",
                            "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                            "title": "Lab Alias",
                            "type": "string"
                        },
                        "title": "Aliases",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "alternate_accessions": {
                        "description": "Accessions previously assigned to objects that have been merged with this object.",
                        "items": {
                            "description": "An accession previously assigned to an object that has been merged with this object.",
                            "title": "Alternate Accession",
                            "type": "string"
                        },
                        "title": "Alternate Accessions",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "analysis_steps": {
                        "description": "The analysis steps which are part of this workflow.",
                        "items": {
                            "title": "Analysis Step",
                            "type": "string"
                        },
                        "title": "Analysis Steps",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "award": {
                        "description": "Grant associated with the submission.",
                        "title": "Award",
                        "type": "string"
                    },
                    "collections": {
                        "description": "Some samples are part of particular data collections.",
                        "items": {
                            "enum": [
                                "ClinGen",
                                "ENCODE",
                                "GREGoR",
                                "IGVF_catalog_beta_v0.1",
                                "IGVF_catalog_beta_v0.2",
                                "IGVF_catalog_beta_v0.3",
                                "IGVF_catalog_beta_v0.4",
                                "MaveDB",
                                "MPRAbase",
                                "Vista"
                            ],
                            "type": "string"
                        },
                        "title": "Collections",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "creation_timestamp": {
                        "description": "The date the object was created.",
                        "title": "Creation Timestamp",
                        "type": "string"
                    },
                    "description": {
                        "description": "A plain text description of the object.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Description",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents that provide additional information (not data file).",
                        "items": {
                            "description": "A document that provides additional information (not data file).",
                            "title": "Document",
                            "type": "string"
                        },
                        "title": "Documents",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "lab": {
                        "description": "Lab associated with the submission.",
                        "title": "Lab",
                        "type": "string"
                    },
                    "name": {
                        "description": "The preferred viewable name of the workflow.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Name",
                        "type": "string"
                    },
                    "notes": {
                        "description": "DACC internal notes.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Notes",
                        "type": "string"
                    },
                    "publications": {
                        "description": "The publications associated with this object.",
                        "items": {
                            "description": "A publication associated with this object.",
                            "title": "Publication",
                            "type": "string"
                        },
                        "title": "Publications",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "release_timestamp": {
                        "description": "The date the object was released.",
                        "title": "Release Timestamp",
                        "type": "string"
                    },
                    "revoke_detail": {
                        "description": "Explanation of why an object was transitioned to the revoked status.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Revoke Detail",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "The version of the JSON schema that the server uses to validate the object.",
                        "pattern": "^\\d+(\\.\\d+)*$",
                        "title": "Schema Version",
                        "type": "string"
                    },
                    "source_url": {
                        "description": "An external resource to the code base of the workflow in github.",
                        "pattern": "^https?://github\\.com/(\\S+)$",
                        "title": "Source URL",
                        "type": "string"
                    },
                    "standards_page": {
                        "description": "A link to a page describing the standards for this workflow.",
                        "title": "Standards Page",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the metadata object.",
                        "enum": [
                            "in progress",
                            "released",
                            "deleted",
                            "replaced",
                            "revoked",
                            "archived"
                        ],
                        "title": "Status",
                        "type": "string"
                    },
                    "submitted_by": {
                        "description": "The user who submitted the object.",
                        "title": "Submitted By",
                        "type": "string"
                    },
                    "submitter_comment": {
                        "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                        "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                        "title": "Submitter Comment",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A summary of the object.",
                        "title": "Summary",
                        "type": "string"
                    },
                    "uuid": {
                        "description": "The unique identifier associated with every object.",
                        "title": "UUID",
                        "type": "string"
                    },
                    "workflow_repositories": {
                        "description": "Resources hosting the workflow.",
                        "items": {
                            "description": "Resource hosting the workflow.",
                            "title": "Workflow Repository",
                            "type": "string"
                        },
                        "title": "Workflow Repositories",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "workflow_version": {
                        "description": "The version of this workflow.",
                        "minimum": 1,
                        "title": "Workflow Version",
                        "type": "integer"
                    }
                },
                "title": "Workflow",
                "type": "object"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "scheme": "basic",
                "type": "http"
            }
        }
    },
    "info": {
        "title": "IGVF Project API",
        "version": "45.0.0"
    },
    "openapi": "3.1.0",
    "paths": {
        "/access-keys/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AccessKey items. Supports filtering on fields within AccessKey items.",
                "operationId": "access_keys",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by access_key_id",
                        "explode": true,
                        "in": "query",
                        "name": "access_key_id",
                        "schema": {
                            "items": {
                                "description": "An access key.",
                                "title": "Access Key ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "Description of the access key.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by secret_access_key_hash",
                        "explode": true,
                        "in": "query",
                        "name": "secret_access_key_hash",
                        "schema": {
                            "items": {
                                "description": "A secret access key.",
                                "title": "Secret Access Key Hash",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "enum": [
                                    "current",
                                    "deleted"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by user",
                        "explode": true,
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "items": {
                                "description": "The user that is assigned to this access key.",
                                "title": "User",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AccessKey"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AccessKeyResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AccessKey collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/alignment-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AlignmentFile items. Supports filtering on fields within AlignmentFile items.",
                "operationId": "alignment_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by anvil_url",
                        "explode": true,
                        "in": "query",
                        "name": "anvil_url",
                        "schema": {
                            "items": {
                                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                                "title": "AnVIL URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assembly",
                        "explode": true,
                        "in": "query",
                        "name": "assembly",
                        "schema": {
                            "items": {
                                "description": "Genome assembly applicable for the annotation data.",
                                "enum": [
                                    "GRCh38",
                                    "GRCm39"
                                ],
                                "title": "Genome Assembly",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_summary",
                        "explode": true,
                        "in": "query",
                        "name": "content_summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the data in the alignment file.",
                                "title": "Content Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by controlled_access",
                        "explode": true,
                        "in": "query",
                        "name": "controlled_access",
                        "schema": {
                            "items": {
                                "description": "Boolean value, indicating the file being controlled access, if true.",
                                "title": "Controlled Access",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "bam"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by filtered",
                        "explode": true,
                        "in": "query",
                        "name": "filtered",
                        "schema": {
                            "items": {
                                "description": "Indicates whether reads that did not pass a filtering step, such as PCR duplicates, have been removed from the file.",
                                "title": "Filtered",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by redacted",
                        "explode": true,
                        "in": "query",
                        "name": "redacted",
                        "schema": {
                            "items": {
                                "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information.",
                                "title": "Redacted",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by reference_files",
                        "explode": true,
                        "in": "query",
                        "name": "reference_files",
                        "schema": {
                            "description": "Link to the reference files used to generate this file.",
                            "items": {
                                "description": "Link to a reference file used to generate this file.",
                                "title": "Reference File",
                                "type": "string"
                            },
                            "title": "Reference Files",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the alignment file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotation",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotation",
                        "schema": {
                            "items": {
                                "description": "The annotation and version of the reference resource.",
                                "enum": [
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34"
                                ],
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AlignmentFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AlignmentFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AlignmentFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/analysis-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AnalysisSet items. Supports filtering on fields within AnalysisSet items.",
                "operationId": "analysis_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assay_titles",
                        "explode": true,
                        "in": "query",
                        "name": "assay_titles",
                        "schema": {
                            "description": "Title(s) of assays that produced data analyzed in the analysis set.",
                            "items": {
                                "description": "Title of assay that produced data analyzed in the analysis set.",
                                "title": "Assay Title",
                                "type": "string"
                            },
                            "title": "Assay Titles",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                                "pattern": "^GEO:GSE\\d+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "donors.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.sex",
                        "explode": true,
                        "in": "query",
                        "name": "donors.sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.status",
                        "explode": true,
                        "in": "query",
                        "name": "donors.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "donors.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The level of this analysis set. An intermediate analysis cannot be interpreted on its own and is part of a principal analysis. A principal analysis is the core analysis for an experimental design, the results of which can be interpretable on their own.",
                                "enum": [
                                    "intermediate analysis",
                                    "principal analysis"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "files.creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_size",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.href",
                        "explode": true,
                        "in": "query",
                        "name": "files.href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "files.s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform",
                        "schema": {
                            "items": {
                                "description": "The measurement device used to produce sequencing data.",
                                "title": "Sequencing Platform",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this prediction set.",
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                            "items": {
                                "description": "A treatment applied to the biosample.",
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Cell Fate Change Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.classifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.modifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.modifications",
                        "schema": {
                            "description": "Links to modifications applied to this biosample.",
                            "items": {
                                "description": "Link to a modification applied to this biosample.",
                                "title": "Modification",
                                "type": "string"
                            },
                            "title": "Modifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "samples.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                            "items": {
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AnalysisSet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AnalysisSetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AnalysisSet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/analysis-step-versions/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AnalysisStepVersion items. Supports filtering on fields within AnalysisStepVersion items.",
                "operationId": "analysis_step_versions",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step.@id",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step.name",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step.name",
                        "schema": {
                            "items": {
                                "description": "Full name of the analysis step.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software_versions.@id",
                        "explode": true,
                        "in": "query",
                        "name": "software_versions.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software_versions.name",
                        "explode": true,
                        "in": "query",
                        "name": "software_versions.name",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for a software version.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AnalysisStepVersion"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AnalysisStepVersionResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AnalysisStepVersion collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/analysis-steps/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AnalysisStep items. Supports filtering on fields within AnalysisStep items.",
                "operationId": "analysis_steps",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_types",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_types",
                        "schema": {
                            "description": "The classification of the software.",
                            "items": {
                                "enum": [
                                    "alignment",
                                    "file format conversion",
                                    "signal generation"
                                ],
                                "title": "Type",
                                "type": "string"
                            },
                            "title": "Analysis Step Types",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_content_types",
                        "explode": true,
                        "in": "query",
                        "name": "input_content_types",
                        "schema": {
                            "description": "The content types used as input for the analysis step.",
                            "items": {
                                "description": "A content type used as input for the analysis step.",
                                "title": "Input Content Type",
                                "type": "string"
                            },
                            "title": "Input Content Types",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "Full name of the analysis step.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by output_content_types",
                        "explode": true,
                        "in": "query",
                        "name": "output_content_types",
                        "schema": {
                            "description": "The content types produced as output by the analysis step.",
                            "items": {
                                "description": "A content type produced as output by the analysis step.",
                                "title": "Output Content Type",
                                "type": "string"
                            },
                            "title": "Output Content Types",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parents.@id",
                        "explode": true,
                        "in": "query",
                        "name": "parents.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parents.title",
                        "explode": true,
                        "in": "query",
                        "name": "parents.title",
                        "schema": {
                            "items": {
                                "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
                                "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by step_label",
                        "explode": true,
                        "in": "query",
                        "name": "step_label",
                        "schema": {
                            "items": {
                                "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step",
                                "pattern": "^[a-z0-9-]+-step$",
                                "title": "Step Label",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
                                "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by workflow.@id",
                        "explode": true,
                        "in": "query",
                        "name": "workflow.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by workflow.accession",
                        "explode": true,
                        "in": "query",
                        "name": "workflow.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AnalysisStep"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AnalysisStepResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AnalysisStep collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/assay-terms/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AssayTerm items. Supports filtering on fields within AssayTerm items.",
                "operationId": "assay_terms",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ancestors",
                        "explode": true,
                        "in": "query",
                        "name": "ancestors",
                        "schema": {
                            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Ancestors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assay_slims",
                        "explode": true,
                        "in": "query",
                        "name": "assay_slims",
                        "schema": {
                            "description": "A broad categorization of the assay term.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Assay Type",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by category_slims",
                        "explode": true,
                        "in": "query",
                        "name": "category_slims",
                        "schema": {
                            "description": "The type of feature or interaction measured by the assay.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Assay Category",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by deprecated_ntr_terms",
                        "explode": true,
                        "in": "query",
                        "name": "deprecated_ntr_terms",
                        "schema": {
                            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                            "items": {
                                "description": "NTR term ID",
                                "pattern": "^NTR:[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "title": "Deprecated NTR terms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by is_a",
                        "explode": true,
                        "in": "query",
                        "name": "is_a",
                        "schema": {
                            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                            "items": {
                                "title": "Ontology Term",
                                "type": "string"
                            },
                            "title": "Is A",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by objective_slims",
                        "explode": true,
                        "in": "query",
                        "name": "objective_slims",
                        "schema": {
                            "description": "The purpose of the assay.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Assay Objective",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ontology",
                        "explode": true,
                        "in": "query",
                        "name": "ontology",
                        "schema": {
                            "items": {
                                "description": "The ontology in which the term is recorded.",
                                "title": "Ontology",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by preferred_assay_titles",
                        "explode": true,
                        "in": "query",
                        "name": "preferred_assay_titles",
                        "schema": {
                            "description": "The custom lab preferred labels that this assay term may be associated with.",
                            "items": {
                                "description": "The custom lab preferred label for the experiment performed in this measurement set.",
                                "enum": [
                                    "10x multiome",
                                    "10x multiome with MULTI-seq",
                                    "AAV-MPRA",
                                    "ATAC-seq",
                                    "CERES-seq",
                                    "Cell painting",
                                    "CRISPR FlowFISH",
                                    "DOGMA-seq",
                                    "Histone ChIP-seq",
                                    "Hi-C",
                                    "HT-recruit",
                                    "lentiMPRA",
                                    "MERFISH",
                                    "MIAA",
                                    "mN2H",
                                    "MPRA",
                                    "MPRA (scQer)",
                                    "MULTI-seq",
                                    "Parse SPLiT-seq",
                                    "Perturb-seq",
                                    "RNA-seq",
                                    "SGE",
                                    "scATAC-seq",
                                    "scNT-seq",
                                    "scNT-seq2",
                                    "scRNA-seq",
                                    "semi-qY2H",
                                    "SHARE-seq",
                                    "smFISH",
                                    "snATAC-seq",
                                    "snmC-Seq2",
                                    "snMCT-seq",
                                    "snM3C-seq",
                                    "snRNA-seq",
                                    "Spatial transcriptomics",
                                    "SUPERSTARR",
                                    "TAP-seq",
                                    "TF ChIP-seq",
                                    "VAMP-seq",
                                    "Variant FlowFISH",
                                    "Variant painting",
                                    "Y2H",
                                    "yN2H"
                                ],
                                "title": "Preferred Assay Title",
                                "type": "string"
                            },
                            "title": "Preferred Assay Titles",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "synonyms",
                        "schema": {
                            "description": "Synonyms for the term that have been recorded in an ontology.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_id",
                        "explode": true,
                        "in": "query",
                        "name": "term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing an assay.",
                                "pattern": "^(OBI|NTR):[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_name",
                        "explode": true,
                        "in": "query",
                        "name": "term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AssayTerm"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AssayTermResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AssayTerm collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/auxiliary-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate AuxiliarySet items. Supports filtering on fields within AuxiliarySet items.",
                "operationId": "auxiliary_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                                "pattern": "^GEO:GSE\\d+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "donors.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.sex",
                        "explode": true,
                        "in": "query",
                        "name": "donors.sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.status",
                        "explode": true,
                        "in": "query",
                        "name": "donors.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "donors.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this auxiliary file set.",
                                "enum": [
                                    "cell hashing",
                                    "cell sorting",
                                    "circularized RNA barcode detection",
                                    "gRNA sequencing",
                                    "oligo-conjugated lipids",
                                    "quantification DNA barcode sequencing",
                                    "variant sequencing"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "files.creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_size",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.href",
                        "explode": true,
                        "in": "query",
                        "name": "files.href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "files.s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform",
                        "schema": {
                            "items": {
                                "description": "The measurement device used to produce sequencing data.",
                                "title": "Sequencing Platform",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by measurement_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "measurement_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by measurement_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "measurement_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by measurement_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "measurement_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by measurement_sets.preferred_assay_title",
                        "explode": true,
                        "in": "query",
                        "name": "measurement_sets.preferred_assay_title",
                        "schema": {
                            "items": {
                                "description": "The custom lab preferred label for the experiment performed in this measurement set.",
                                "title": "Preferred Assay Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                            "items": {
                                "description": "A treatment applied to the biosample.",
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Cell Fate Change Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.classifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.modifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.modifications",
                        "schema": {
                            "description": "Links to modifications applied to this biosample.",
                            "items": {
                                "description": "Link to a modification applied to this biosample.",
                                "title": "Modification",
                                "type": "string"
                            },
                            "title": "Modifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "samples.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                            "items": {
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/AuxiliarySet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AuxiliarySetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the AuxiliarySet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/awards/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Award items. Supports filtering on fields within Award items.",
                "operationId": "awards",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by component",
                        "explode": true,
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "enum": [
                                    "affiliate",
                                    "data analysis",
                                    "data coordination",
                                    "functional characterization",
                                    "mapping",
                                    "networks",
                                    "predictive modeling"
                                ],
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by contact_pi",
                        "explode": true,
                        "in": "query",
                        "name": "contact_pi",
                        "schema": {
                            "items": {
                                "description": "The contact Principal Investigator of the grant.",
                                "title": "Contact P.I.",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by end_date",
                        "explode": true,
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "items": {
                                "description": "The date when the award concludes.",
                                "title": "End Date",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "The official grant number from the NIH database, if applicable",
                                "pattern": "^[A-Za-z0-9\\-]+$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pis",
                        "explode": true,
                        "in": "query",
                        "name": "pis",
                        "schema": {
                            "description": "Principal Investigator(s) of the grant.",
                            "items": {
                                "description": "User object of the investigator.",
                                "title": "Investigator",
                                "type": "string"
                            },
                            "title": "Principal Investigators",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by project",
                        "explode": true,
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "items": {
                                "description": "The collection of biological data related to a single initiative, originating from a consortium.",
                                "enum": [
                                    "community",
                                    "ENCODE",
                                    "IGVF"
                                ],
                                "title": "Project",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by start_date",
                        "explode": true,
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "items": {
                                "description": "The date when the award begins.",
                                "title": "Start Date",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "current",
                                    "deleted",
                                    "disabled"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the award.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by viewing_group",
                        "explode": true,
                        "in": "query",
                        "name": "viewing_group",
                        "schema": {
                            "items": {
                                "description": "The group that determines which set of data the user has permission to view.",
                                "enum": [
                                    "community",
                                    "IGVF"
                                ],
                                "title": "View Access Group",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Award"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "AwardResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Award collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/batch-download": {
            "get": {
                "description": "Generates TSV of files contained in FileSets in search results.",
                "operationId": "batch_download",
                "parameters": [
                    {
                        "description": "Type of objects to return. Can be repeated for multiple types.",
                        "explode": true,
                        "in": "query",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Query string for searching.",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Any field from any object type can be used as a filter. Use '!' for negation, '*' as a wildcard, and 'lt:', 'lte:', 'gt:', 'gte:' for range queries on numeric fields.",
                        "explode": true,
                        "in": "query",
                        "name": "field_filters",
                        "schema": {
                            "type": "object"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/tab-separated-values": {
                                "example": "@id\thref\nhref1\thref2",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List files to download based on search query. All results are returned.",
                "tags": [
                    "IGVF"
                ]
            }
        },
        "/biomarkers/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Biomarker items. Supports filtering on fields within Biomarker items.",
                "operationId": "biomarkers",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.name",
                        "explode": true,
                        "in": "query",
                        "name": "award.name",
                        "schema": {
                            "items": {
                                "description": "The official grant number from the NIH database, if applicable",
                                "pattern": "^[A-Za-z0-9\\-]+$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biomarker_for",
                        "explode": true,
                        "in": "query",
                        "name": "biomarker_for",
                        "schema": {
                            "description": "The samples which have been confirmed to have this biomarker.",
                            "items": {
                                "title": "Biomarker For",
                                "type": "string"
                            },
                            "title": "Biomarker For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classification",
                        "explode": true,
                        "in": "query",
                        "name": "classification",
                        "schema": {
                            "items": {
                                "description": "Sample specific biomarker.",
                                "enum": [
                                    "cell surface protein",
                                    "marker gene"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene",
                        "explode": true,
                        "in": "query",
                        "name": "gene",
                        "schema": {
                            "items": {
                                "description": "Biomarker gene.",
                                "title": "Gene",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "The biomarker name.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name_quantification",
                        "explode": true,
                        "in": "query",
                        "name": "name_quantification",
                        "schema": {
                            "items": {
                                "description": "A concatenation of the name and quantification of the biomarker.",
                                "title": "Name and Quantification",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by quantification",
                        "explode": true,
                        "in": "query",
                        "name": "quantification",
                        "schema": {
                            "items": {
                                "description": "The biomarker association to the biosample, disease or other condition.  This can be the absence of the biomarker or the presence of the biomarker in some low, intermediate or high quantity.",
                                "enum": [
                                    "negative",
                                    "positive",
                                    "low",
                                    "intermediate",
                                    "high"
                                ],
                                "title": "Quantification",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "synonyms",
                        "schema": {
                            "description": "Alternate names for this biomarker.",
                            "items": {
                                "title": "Synonym",
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Biomarker"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "BiomarkerResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Biomarker collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/configuration-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate ConfigurationFile items. Supports filtering on fields within ConfigurationFile items.",
                "operationId": "configuration_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "yaml",
                                    "json"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by seqspec_of",
                        "explode": true,
                        "in": "query",
                        "name": "seqspec_of",
                        "schema": {
                            "description": "Sequence files this file is a seqspec of.",
                            "items": {
                                "title": "Seqspec Of",
                                "type": "string"
                            },
                            "title": "Seqspec Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the configuration file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/ConfigurationFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ConfigurationFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the ConfigurationFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/construct-library-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate ConstructLibrarySet items. Supports filtering on fields within ConstructLibrarySet items.",
                "operationId": "construct_library_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by applied_to_samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "applied_to_samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by associated_phenotypes.@id",
                        "explode": true,
                        "in": "query",
                        "name": "associated_phenotypes.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by associated_phenotypes.term_id",
                        "explode": true,
                        "in": "query",
                        "name": "associated_phenotypes.term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing a phenotype.",
                                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                                "title": "Phenotype Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by associated_phenotypes.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "associated_phenotypes.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by average_guide_coverage",
                        "explode": true,
                        "in": "query",
                        "name": "average_guide_coverage",
                        "schema": {
                            "items": {
                                "description": "The average number of guides targeting each element of interest in the library.",
                                "minimum": 0,
                                "title": "Average Guide Coverage",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by average_insert_size",
                        "explode": true,
                        "in": "query",
                        "name": "average_insert_size",
                        "schema": {
                            "items": {
                                "description": "The average size of the inserts cloned into vectors in the library.",
                                "minimum": 0,
                                "title": "Average Insert Size",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by exon",
                        "explode": true,
                        "in": "query",
                        "name": "exon",
                        "schema": {
                            "items": {
                                "description": "An identifier in plain text for the specific exon in an expression vector library. The associated gene must be listed in the small_scale_gene_list property.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Exon",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The type or category of this construct library set.",
                                "enum": [
                                    "guide library",
                                    "reporter library",
                                    "expression vector library",
                                    "editing template library"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by guide_type",
                        "explode": true,
                        "in": "query",
                        "name": "guide_type",
                        "schema": {
                            "items": {
                                "description": "The design of guides used in a CRISPR library, paired-guide (pgRNA) or single-guide (sgRNA).",
                                "enum": [
                                    "sgRNA",
                                    "pgRNA"
                                ],
                                "title": "Guide Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_content_files",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_content_files",
                        "schema": {
                            "description": "The files containing sequence material of interest either used for insert design or directly cloned into vectors in this library.",
                            "items": {
                                "title": "Integrated Content File",
                                "type": "string"
                            },
                            "title": "Integrated Content Files",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_gene_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_gene_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_gene_list.accession",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_gene_list.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_gene_list.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_gene_list.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_loci_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_loci_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_loci_list.accession",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_loci_list.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_loci_list.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_loci_list.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_guide_coverage",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_guide_coverage",
                        "schema": {
                            "items": {
                                "description": "Lower bound of the number of guides targeting each element of interest in the library.",
                                "title": "Lower Bound Guide Coverage",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_insert_size",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_insert_size",
                        "schema": {
                            "items": {
                                "description": "Lower bound of the size of the inserts cloned in vectors in the library.",
                                "title": "Lower Bound Insert Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by orf_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "orf_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by orf_list.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "orf_list.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by orf_list.gene",
                        "explode": true,
                        "in": "query",
                        "name": "orf_list.gene",
                        "schema": {
                            "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                            "items": {
                                "description": "An identifier of the Gene.",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "title": "ENSEMBL GeneID",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by orf_list.orf_id",
                        "explode": true,
                        "in": "query",
                        "name": "orf_list.orf_id",
                        "schema": {
                            "items": {
                                "description": "Open reading frame ID.",
                                "pattern": "^CCSBORF[1-9][0-9]*$",
                                "title": "ORF ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product or catalog identifier provided following deposition to addgene.org.",
                                "pattern": "^addgene:\\d{5,6}$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by scope",
                        "explode": true,
                        "in": "query",
                        "name": "scope",
                        "schema": {
                            "items": {
                                "description": "The scope or scale that this construct library is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property. If exon is specified, an exon identifier and the associated gene will need to be listed in exon and genes properties. If tile is specified, a tile identifier, start and stop coordinates, and the associated gene will need to be listed in tile and small_scale_gene_list or large_scale_gene_list properties.",
                                "enum": [
                                    "tile",
                                    "exon",
                                    "genes",
                                    "loci",
                                    "genome-wide",
                                    "interactors",
                                    "alleles",
                                    "targeton"
                                ],
                                "title": "Library Construct Scope",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by selection_criteria",
                        "explode": true,
                        "in": "query",
                        "name": "selection_criteria",
                        "schema": {
                            "description": "The criteria used to select the sequence material cloned into the library.",
                            "items": {
                                "description": "The criterion used to select or design the sequence material cloned into the library.",
                                "enum": [
                                    "accessible genome regions",
                                    "candidate cis-regulatory elements",
                                    "chromatin states",
                                    "phenotype-associated variants",
                                    "DNase hypersensitive sites",
                                    "genes",
                                    "histone modifications",
                                    "protein interactors",
                                    "sequence variants",
                                    "synthetic elements",
                                    "transcription start sites",
                                    "TF binding sites"
                                ],
                                "title": "Selection Criterion",
                                "type": "string"
                            },
                            "title": "Selection Criteria",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.geneid",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.geneid",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.name",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.name",
                        "schema": {
                            "items": {
                                "description": "The full gene name preferably approved by the official nomenclature.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.symbol",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.symbol",
                        "schema": {
                            "items": {
                                "description": "Gene symbol approved by the official nomenclature.",
                                "title": "Gene Symbol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.synonyms",
                        "schema": {
                            "description": "Alternative symbols that have been used to refer to the gene.",
                            "items": {
                                "description": "An alternative symbol/name referring to the gene.",
                                "title": "Synonym",
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_loci_list",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_loci_list",
                        "schema": {
                            "description": "A small scale (<=100) list of specific chromosomal region(s).",
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "assembly": {
                                        "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                                        "enum": [
                                            "GRCh38",
                                            "GRCm39"
                                        ],
                                        "title": "Mapping assembly",
                                        "type": "string"
                                    },
                                    "chromosome": {
                                        "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                                        "pattern": "^(chr[0-9A-Za-z_]+)$",
                                        "title": "Chromosome",
                                        "type": "string"
                                    },
                                    "end": {
                                        "description": "The 1-based, closed (inclusive) ending coordinate.",
                                        "minimum": 1,
                                        "title": "End",
                                        "type": "integer"
                                    },
                                    "start": {
                                        "description": "The 1-based, closed (inclusive) starting coordinate.",
                                        "minimum": 1,
                                        "title": "Start",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "assembly",
                                    "chromosome",
                                    "start",
                                    "end"
                                ],
                                "title": "Locus",
                                "type": "object"
                            },
                            "title": "Small Scale Loci List",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources",
                        "explode": true,
                        "in": "query",
                        "name": "sources",
                        "schema": {
                            "description": "The originating lab(s) or vendor(s).",
                            "items": {
                                "description": "The originating lab or vendor.",
                                "title": "Source",
                                "type": "string"
                            },
                            "title": "Sources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeton",
                        "explode": true,
                        "in": "query",
                        "name": "targeton",
                        "schema": {
                            "items": {
                                "description": "An identifier in plain text for the specific targeton in an editing template library. The associated gene must be listed in the small_scale_gene_list property.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Targeton",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by tiling_modality",
                        "explode": true,
                        "in": "query",
                        "name": "tiling_modality",
                        "schema": {
                            "items": {
                                "description": "The tiling modality of guides across elements or loci in a CRISPR library.",
                                "enum": [
                                    "peak tiling",
                                    "full tiling",
                                    "sparse peaks"
                                ],
                                "title": "Tiling Modality",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_guide_coverage",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_guide_coverage",
                        "schema": {
                            "items": {
                                "description": "Upper bound of the number of guides targeting each element of interest in the library.",
                                "title": "Upper Bound Guide Coverage",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_insert_size",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_insert_size",
                        "schema": {
                            "items": {
                                "description": "Upper bound of the size of the inserts cloned in vectors in the library.",
                                "title": "Upper Bound Insert Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/ConstructLibrarySet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ConstructLibrarySetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the ConstructLibrarySet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/crispr-modifications/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate CrisprModification items. Supports filtering on fields within CrisprModification items.",
                "operationId": "crispr_modifications",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by activated",
                        "explode": true,
                        "in": "query",
                        "name": "activated",
                        "schema": {
                            "items": {
                                "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
                                "title": "Activated",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by activating_agent_term_id",
                        "explode": true,
                        "in": "query",
                        "name": "activating_agent_term_id",
                        "schema": {
                            "items": {
                                "description": "The CHEBI identifier for the activating agent of the modification.",
                                "pattern": "^CHEBI:[0-9]{1,7}$",
                                "title": "Activating Agent Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by activating_agent_term_name",
                        "explode": true,
                        "in": "query",
                        "name": "activating_agent_term_name",
                        "schema": {
                            "items": {
                                "description": "The CHEBI name for the activating agent of the modification.",
                                "title": "Activating Agent Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biosamples_modified",
                        "explode": true,
                        "in": "query",
                        "name": "biosamples_modified",
                        "schema": {
                            "description": "The biosamples which have been modified with this modification.",
                            "items": {
                                "title": "Biosamples Modified",
                                "type": "string"
                            },
                            "title": "Biosamples Modified",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cas",
                        "explode": true,
                        "in": "query",
                        "name": "cas",
                        "schema": {
                            "items": {
                                "description": "The name of the CRISPR associated protein used in the modification.",
                                "enum": [
                                    "Cas9",
                                    "Cas12a",
                                    "Cas13",
                                    "dCas9",
                                    "nCas9",
                                    "SpG",
                                    "SpRY"
                                ],
                                "title": "Cas",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cas_species",
                        "explode": true,
                        "in": "query",
                        "name": "cas_species",
                        "schema": {
                            "items": {
                                "description": "The originating species of the Cas nuclease.",
                                "enum": [
                                    "Streptococcus pyogenes (Sp)",
                                    "Staphylococcus aureus (Sa)",
                                    "Campylobacter jejuni (Cj)",
                                    "Neisseria meningitidis (Nm)"
                                ],
                                "title": "Cas species",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by fused_domain",
                        "explode": true,
                        "in": "query",
                        "name": "fused_domain",
                        "schema": {
                            "items": {
                                "description": "The name of the molecule fused to a Cas protein.",
                                "enum": [
                                    "2xVP64",
                                    "3xVP64",
                                    "ABE8e",
                                    "ABE8.20",
                                    "ANTI-FLAG",
                                    "BE4",
                                    "BE4max",
                                    "eA3A",
                                    "eA3A-T31A",
                                    "eA3A-T44D-S45A",
                                    "KOX1-KRAB",
                                    "M-MLV RT (PE2)",
                                    "p300",
                                    "TdCBE",
                                    "TdCGBE",
                                    "TdDE",
                                    "VPH",
                                    "VP64",
                                    "VP64-p65-Rta (VPR)",
                                    "ZIM3-KRAB"
                                ],
                                "title": "Fused Domain",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modality",
                        "explode": true,
                        "in": "query",
                        "name": "modality",
                        "schema": {
                            "items": {
                                "description": "The purpose or intended effect of a modification.",
                                "enum": [
                                    "activation",
                                    "base editing",
                                    "cutting",
                                    "interference",
                                    "knockout",
                                    "localizing",
                                    "prime editing"
                                ],
                                "title": "Modality",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product or catalog identifier provided following deposition to addgene.org.",
                                "pattern": "^addgene:\\d{5,6}$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources",
                        "explode": true,
                        "in": "query",
                        "name": "sources",
                        "schema": {
                            "description": "The originating lab(s) or vendor(s).",
                            "items": {
                                "description": "The originating lab or vendor.",
                                "title": "Source",
                                "type": "string"
                            },
                            "title": "Sources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by tagged_protein",
                        "explode": true,
                        "in": "query",
                        "name": "tagged_protein",
                        "schema": {
                            "items": {
                                "description": "The tagged protein in modifications in which the Cas nuclease is fused to an antibody.",
                                "title": "Tagged Protein",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/CrisprModification"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "CrisprModificationResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the CrisprModification collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/curated-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate CuratedSet items. Supports filtering on fields within CuratedSet items.",
                "operationId": "curated_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assemblies",
                        "explode": true,
                        "in": "query",
                        "name": "assemblies",
                        "schema": {
                            "description": "The genome assemblies to which the referencing files in the file set are utilizing (e.g., GRCh38).",
                            "items": {
                                "title": "Assembly",
                                "type": "string"
                            },
                            "title": "Assemblies",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                                "pattern": "^GEO:GSE\\d+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "donors.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.sex",
                        "explode": true,
                        "in": "query",
                        "name": "donors.sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.status",
                        "explode": true,
                        "in": "query",
                        "name": "donors.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "donors.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this curated file set.",
                                "enum": [
                                    "barcodes",
                                    "editing templates",
                                    "elements",
                                    "external data for catalog",
                                    "genome",
                                    "genes",
                                    "guide RNAs",
                                    "transcriptome",
                                    "variants"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "files.creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_size",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.href",
                        "explode": true,
                        "in": "query",
                        "name": "files.href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "files.s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform",
                        "schema": {
                            "items": {
                                "description": "The measurement device used to produce sequencing data.",
                                "title": "Sequencing Platform",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                            "items": {
                                "description": "A treatment applied to the biosample.",
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Cell Fate Change Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.classifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.modifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.modifications",
                        "schema": {
                            "description": "Links to modifications applied to this biosample.",
                            "items": {
                                "description": "Link to a modification applied to this biosample.",
                                "title": "Modification",
                                "type": "string"
                            },
                            "title": "Modifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "samples.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                            "items": {
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens",
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotations",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotations",
                        "schema": {
                            "description": "The annotation versions of the reference resource.",
                            "items": {
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "title": "Transcriptome Annotations",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/CuratedSet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "CuratedSetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the CuratedSet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/degron-modifications/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate DegronModification items. Supports filtering on fields within DegronModification items.",
                "operationId": "degron_modifications",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by activated",
                        "explode": true,
                        "in": "query",
                        "name": "activated",
                        "schema": {
                            "items": {
                                "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
                                "title": "Activated",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by activating_agent_term_id",
                        "explode": true,
                        "in": "query",
                        "name": "activating_agent_term_id",
                        "schema": {
                            "items": {
                                "description": "The CHEBI identifier for the activating agent of the modification.",
                                "pattern": "^CHEBI:[0-9]{1,7}$",
                                "title": "Activating Agent Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by activating_agent_term_name",
                        "explode": true,
                        "in": "query",
                        "name": "activating_agent_term_name",
                        "schema": {
                            "items": {
                                "description": "The CHEBI name for the activating agent of the modification.",
                                "title": "Activating Agent Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biosamples_modified",
                        "explode": true,
                        "in": "query",
                        "name": "biosamples_modified",
                        "schema": {
                            "description": "The biosamples which have been modified with this modification.",
                            "items": {
                                "title": "Biosamples Modified",
                                "type": "string"
                            },
                            "title": "Biosamples Modified",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by degron_system",
                        "explode": true,
                        "in": "query",
                        "name": "degron_system",
                        "schema": {
                            "items": {
                                "description": "The type of degron system implemented.",
                                "enum": [
                                    "AID",
                                    "AlissAid",
                                    "ssAID"
                                ],
                                "title": "Degron System",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modality",
                        "explode": true,
                        "in": "query",
                        "name": "modality",
                        "schema": {
                            "items": {
                                "description": "The purpose or intended effect of a modification.",
                                "enum": [
                                    "degradation"
                                ],
                                "title": "Modality",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product or catalog identifier provided following deposition to addgene.org.",
                                "pattern": "^addgene:\\d{5,6}$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources",
                        "explode": true,
                        "in": "query",
                        "name": "sources",
                        "schema": {
                            "description": "The originating lab(s) or vendor(s).",
                            "items": {
                                "description": "The originating lab or vendor.",
                                "title": "Source",
                                "type": "string"
                            },
                            "title": "Sources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by tagged_proteins",
                        "explode": true,
                        "in": "query",
                        "name": "tagged_proteins",
                        "schema": {
                            "description": "The tagged proteins which are targeted for degradation.",
                            "items": {
                                "title": "Gene",
                                "type": "string"
                            },
                            "title": "Tagged Proteins",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/DegronModification"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "DegronModificationResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the DegronModification collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/documents/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Document items. Supports filtering on fields within Document items.",
                "operationId": "documents",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by characterization_method",
                        "explode": true,
                        "in": "query",
                        "name": "characterization_method",
                        "schema": {
                            "items": {
                                "description": "The method used for the characterization.",
                                "enum": [
                                    "FACS",
                                    "immunoblot",
                                    "immunofluorescence",
                                    "immunoprecipitation",
                                    "mass spectrometry",
                                    "PCR",
                                    "restriction digest",
                                    "RT-qPCR",
                                    "sequencing"
                                ],
                                "title": "Characterization Method",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by document_type",
                        "explode": true,
                        "in": "query",
                        "name": "document_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes the document.",
                                "enum": [
                                    "cell fate change protocol",
                                    "characterization",
                                    "computational protocol",
                                    "experimental protocol",
                                    "file format specification",
                                    "image",
                                    "model source data",
                                    "plate map",
                                    "plasmid map",
                                    "plasmid sequence",
                                    "standards"
                                ],
                                "title": "Document Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the document.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by urls",
                        "explode": true,
                        "in": "query",
                        "name": "urls",
                        "schema": {
                            "description": "External resources with additional information to the document.",
                            "items": {
                                "description": "An external resource with additional information to the document.",
                                "title": "URL",
                                "type": "string"
                            },
                            "title": "URL",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Document"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "DocumentResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Document collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/genes/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Gene items. Supports filtering on fields within Gene items.",
                "operationId": "genes",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Unique identifiers from external resources.",
                            "items": {
                                "description": "A unique identifier from external resource (e.g. ENTREZ, HGNC, MGI, FlyBase, WormBase, ENSEMBL, MIM, UniProtKB, Vega, miRBase).",
                                "pattern": "^((ENTREZ:[1-9][0-9]*)|(HGNC:\\d+)|(MGI:\\d+)|(MIM:\\d+)|(UniProtKB:[0-9A-Z]+)|(Vega:OTT[A-Z]+G\\d+)|(miRBase:MI\\d+)|(IMGT/GENE-DB:[0-9A-Za-z/\\(\\)\\-]+)|(RefSeq:[A-Z]{2}_[\\d.]+)|(GeneCards:[0-9a-zA-Z-]+))$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by geneid",
                        "explode": true,
                        "in": "query",
                        "name": "geneid",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by geneid_with_version",
                        "explode": true,
                        "in": "query",
                        "name": "geneid_with_version",
                        "schema": {
                            "items": {
                                "description": "The ENSEMBL GeneID concatenated with its version number.",
                                "title": "ENSEMBL GeneID With Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by locations",
                        "explode": true,
                        "in": "query",
                        "name": "locations",
                        "schema": {
                            "description": "Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies.",
                            "items": {
                                "additionalProperties": false,
                                "description": "Gene location specified using 1-based, closed coordinates for a specific version of the reference genome assembly.",
                                "properties": {
                                    "assembly": {
                                        "description": "The genome assembly to which coordinates relate. e.g. GRCh38.",
                                        "enum": [
                                            "GRCh38",
                                            "GRCm39"
                                        ],
                                        "title": "Mapping Assembly",
                                        "type": "string"
                                    },
                                    "chromosome": {
                                        "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                                        "pattern": "^(chr[0-9A-Za-z]+)$",
                                        "title": "Chromosome",
                                        "type": "string"
                                    },
                                    "end": {
                                        "description": "The ending coordinate.",
                                        "minimum": 0,
                                        "title": "End",
                                        "type": "integer"
                                    },
                                    "start": {
                                        "description": "The starting coordinate.",
                                        "minimum": 0,
                                        "title": "Start",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "assembly",
                                    "chromosome",
                                    "start",
                                    "end"
                                ],
                                "title": "Gene Location",
                                "type": "object"
                            },
                            "title": "Gene Locations",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "The full gene name preferably approved by the official nomenclature.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by symbol",
                        "explode": true,
                        "in": "query",
                        "name": "symbol",
                        "schema": {
                            "items": {
                                "description": "Gene symbol approved by the official nomenclature.",
                                "title": "Gene Symbol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "synonyms",
                        "schema": {
                            "description": "Alternative symbols that have been used to refer to the gene.",
                            "items": {
                                "description": "An alternative symbol/name referring to the gene.",
                                "title": "Synonym",
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens",
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotation",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotation",
                        "schema": {
                            "items": {
                                "description": "The annotation and version of the reference resource.",
                                "enum": [
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34"
                                ],
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by version_number",
                        "explode": true,
                        "in": "query",
                        "name": "version_number",
                        "schema": {
                            "items": {
                                "description": "Current ENSEMBL GeneID version number of the gene.",
                                "pattern": "^\\d+?",
                                "title": "ENSEMBL GeneID Version Number",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Gene"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "GeneResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Gene collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/genome-browser-annotation-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate GenomeBrowserAnnotationFile items. Supports filtering on fields within GenomeBrowserAnnotationFile items.",
                "operationId": "genome_browser_annotation_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assembly",
                        "explode": true,
                        "in": "query",
                        "name": "assembly",
                        "schema": {
                            "items": {
                                "description": "Genome assembly applicable for the annotation data.",
                                "enum": [
                                    "GRCh38",
                                    "GRCm39"
                                ],
                                "title": "Genome Assembly",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "bigBed",
                                    "tabix"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_type",
                        "schema": {
                            "items": {
                                "description": "The subtype of bed files.",
                                "enum": [
                                    "bed12",
                                    "bed3",
                                    "bed3+",
                                    "bed5",
                                    "bed6",
                                    "bed6+",
                                    "bed9",
                                    "bed9+",
                                    "mpra_starr"
                                ],
                                "title": "File Format Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the genome browser annotation file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotation",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotation",
                        "schema": {
                            "items": {
                                "description": "The annotation and version of the reference resource.",
                                "enum": [
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34"
                                ],
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "GenomeBrowserAnnotationFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the GenomeBrowserAnnotationFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/human-donors/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate HumanDonor items. Supports filtering on fields within HumanDonor items.",
                "operationId": "human_donors",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                                "pattern": "(^GEO:SAMN\\d+$)|(^ENCODE:ENCDO\\d{3}[A-Z]{3}$)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ethnicities",
                        "explode": true,
                        "in": "query",
                        "name": "ethnicities",
                        "schema": {
                            "description": "Ethnicity of the donor.",
                            "items": {
                                "enum": [
                                    "African American",
                                    "African Caribbean",
                                    "Arab",
                                    "Asian",
                                    "Black",
                                    "Black African",
                                    "Chinese",
                                    "Colombian",
                                    "Dai Chinese",
                                    "Esan",
                                    "Eskimo",
                                    "European",
                                    "Gambian",
                                    "Han Chinese",
                                    "Hispanic",
                                    "Indian",
                                    "Japanese",
                                    "Kinh Vietnamese",
                                    "Luhya",
                                    "Maasai",
                                    "Mende",
                                    "Native Hawaiian",
                                    "Pacific Islander",
                                    "Puerto Rican",
                                    "Yoruba"
                                ],
                                "type": "string"
                            },
                            "title": "Ethnicity",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by human_donor_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "human_donor_identifiers",
                        "schema": {
                            "description": "Identifiers of this human donor.",
                            "items": {
                                "description": "An identifier of this human donor.",
                                "title": "Human Donor Identifier",
                                "type": "string"
                            },
                            "title": "Human Donor Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.@id",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.feature.@id",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.feature.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.feature.term_id",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.feature.term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing a phenotype.",
                                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                                "title": "Phenotype Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.feature.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.feature.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.observation_date",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.observation_date",
                        "schema": {
                            "items": {
                                "description": "The date the feature was observed or measured.",
                                "title": "Observation Date",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.quantity_units",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.quantity_units",
                        "schema": {
                            "items": {
                                "description": "The unit of measurement for a quantity associated with the phenotypic feature.",
                                "title": "Quantity Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by related_donors.donor.@id",
                        "explode": true,
                        "in": "query",
                        "name": "related_donors.donor.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by related_donors.donor.accession",
                        "explode": true,
                        "in": "query",
                        "name": "related_donors.donor.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sex",
                        "explode": true,
                        "in": "query",
                        "name": "sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "enum": [
                                    "male",
                                    "female",
                                    "unspecified"
                                ],
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the human donor.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/HumanDonor"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "HumanDonorResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the HumanDonor collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/image-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate ImageFile items. Supports filtering on fields within ImageFile items.",
                "operationId": "image_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "jpg",
                                    "png"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the image file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/ImageFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ImageFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the ImageFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/images/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Image items. Supports filtering on fields within Image items.",
                "operationId": "images",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by caption",
                        "explode": true,
                        "in": "query",
                        "name": "caption",
                        "schema": {
                            "items": {
                                "description": "The caption of the image.",
                                "title": "Caption",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by download_url",
                        "explode": true,
                        "in": "query",
                        "name": "download_url",
                        "schema": {
                            "items": {
                                "description": "Download Url",
                                "title": "Download Url",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by thumb_nail",
                        "explode": true,
                        "in": "query",
                        "name": "thumb_nail",
                        "schema": {
                            "items": {
                                "description": "Image url",
                                "title": "Thumb Nail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Image"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ImageResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Image collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/in-vitro-systems/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate InVitroSystem items. Supports filtering on fields within InVitroSystem items.",
                "operationId": "in_vitro_systems",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age",
                        "explode": true,
                        "in": "query",
                        "name": "age",
                        "schema": {
                            "items": {
                                "description": "Age of organism at the time of collection of the sample.",
                                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                                "title": "Age",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age_units",
                        "explode": true,
                        "in": "query",
                        "name": "age_units",
                        "schema": {
                            "items": {
                                "description": "The units of time associated with age of the biosample.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                ],
                                "title": "Age Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biomarkers",
                        "explode": true,
                        "in": "query",
                        "name": "biomarkers",
                        "schema": {
                            "description": "Biological markers that are associated with this sample.",
                            "items": {
                                "description": "Associated biomarker.",
                                "title": "Biomarker",
                                "type": "string"
                            },
                            "title": "Biomarkers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_fate_change_protocol",
                        "explode": true,
                        "in": "query",
                        "name": "cell_fate_change_protocol",
                        "schema": {
                            "items": {
                                "description": "A protocol applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                                "title": "Cell Fate Change Protocol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_fate_change_treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "cell_fate_change_treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_fate_change_treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "cell_fate_change_treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_fate_change_treatments.status",
                        "explode": true,
                        "in": "query",
                        "name": "cell_fate_change_treatments.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_fate_change_treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "cell_fate_change_treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_fate_change_treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "cell_fate_change_treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cellular_sub_pool",
                        "explode": true,
                        "in": "query",
                        "name": "cellular_sub_pool",
                        "schema": {
                            "items": {
                                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                                "title": "Cellular Sub Pool",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classifications",
                        "explode": true,
                        "in": "query",
                        "name": "classifications",
                        "schema": {
                            "description": "The general category of this type of in vitro system.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_obtained",
                        "explode": true,
                        "in": "query",
                        "name": "date_obtained",
                        "schema": {
                            "items": {
                                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                                "title": "Date Collected",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by demultiplexed_from",
                        "explode": true,
                        "in": "query",
                        "name": "demultiplexed_from",
                        "schema": {
                            "items": {
                                "description": "The biosample this in vitro system sample was demultiplexed from using computational methods.",
                                "title": "Demultiplexed From",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by demultiplexed_to",
                        "explode": true,
                        "in": "query",
                        "name": "demultiplexed_to",
                        "schema": {
                            "description": "The parts into which this sample has been demultiplexed.",
                            "items": {
                                "title": "Demultiplexed To",
                                "type": "string"
                            },
                            "title": "Demultiplexed To",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors",
                        "explode": true,
                        "in": "query",
                        "name": "donors",
                        "schema": {
                            "description": "Donor(s) the sample was derived from.",
                            "items": {
                                "description": "Donor.",
                                "title": "Donor",
                                "type": "string"
                            },
                            "title": "Donors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by embryonic",
                        "explode": true,
                        "in": "query",
                        "name": "embryonic",
                        "schema": {
                            "items": {
                                "description": "Biosample is embryonic.",
                                "title": "Embryonic",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.status",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by growth_medium",
                        "explode": true,
                        "in": "query",
                        "name": "growth_medium",
                        "schema": {
                            "items": {
                                "description": "A growth medium of the in vitro system.",
                                "enum": [
                                    "DMEM with serum",
                                    "DMEM without serum",
                                    "SMBM with serum",
                                    "SMBM without serum"
                                ],
                                "title": "Growth Medium",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.@id",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.certificate_identifier",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.certificate_identifier",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the certificate.",
                                "pattern": "^IP\\d{3}-\\d{2}$",
                                "title": "Certificate Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of the organism at the time of collection of the sample.",
                                "title": "Lower Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                                "title": "Lower Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.status",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.summary",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by moi",
                        "explode": true,
                        "in": "query",
                        "name": "moi",
                        "schema": {
                            "items": {
                                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                                "minimum": 0,
                                "title": "Multiplicity Of Infection",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by nucleic_acid_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "nucleic_acid_delivery",
                        "schema": {
                            "items": {
                                "description": "Method of introduction of nucleic acid into the cell.",
                                "enum": [
                                    "transfection",
                                    "adenoviral transduction",
                                    "lentiviral transduction"
                                ],
                                "title": "Nucleic Acid Delivery",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by origin_of",
                        "explode": true,
                        "in": "query",
                        "name": "origin_of",
                        "schema": {
                            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                            "items": {
                                "title": "Originated Sample",
                                "type": "string"
                            },
                            "title": "Origin Sample Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by originated_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "originated_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by originated_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "originated_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by part_of",
                        "explode": true,
                        "in": "query",
                        "name": "part_of",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                                "title": "Part of Biosample",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parts",
                        "explode": true,
                        "in": "query",
                        "name": "parts",
                        "schema": {
                            "description": "The parts into which this sample has been divided.",
                            "items": {
                                "title": "Biosample Part",
                                "type": "string"
                            },
                            "title": "Biosample Parts",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by passage_number",
                        "explode": true,
                        "in": "query",
                        "name": "passage_number",
                        "schema": {
                            "items": {
                                "description": "Number of passages including the passages from the source.",
                                "minimum": 0,
                                "title": "Passage Number",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_from",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_from",
                        "schema": {
                            "description": "The biosamples this biosample is pooled from.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Biosamples Pooled From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_in",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_in",
                        "schema": {
                            "description": "The pooled samples in which this sample is included.",
                            "items": {
                                "title": "Biosample Pooled In",
                                "type": "string"
                            },
                            "title": "Pooled In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sex",
                        "explode": true,
                        "in": "query",
                        "name": "sex",
                        "schema": {
                            "items": {
                                "enum": [
                                    "female",
                                    "male",
                                    "mixed",
                                    "unspecified"
                                ],
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_fractions",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_fractions",
                        "schema": {
                            "description": "The fractions into which this sample has been sorted.",
                            "items": {
                                "title": "Sorted Fraction Sample",
                                "type": "string"
                            },
                            "title": "Sorted Fraction Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from_detail",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from_detail",
                        "schema": {
                            "items": {
                                "description": "Detail for sample sorted into fractions capturing information about sorting.",
                                "title": "Sorted From Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount",
                        "schema": {
                            "items": {
                                "description": "The initial quantity of samples obtained.",
                                "title": "Starting Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount_units",
                        "schema": {
                            "items": {
                                "description": "The units used to quantify the amount of samples obtained.",
                                "enum": [
                                    "cells",
                                    "cells/ml",
                                    "g",
                                    "items",
                                    "mg",
                                    "whole animals",
                                    "whole embryos",
                                    "\u03bcg",
                                    "ng"
                                ],
                                "title": "Starting Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeted_sample_term",
                        "explode": true,
                        "in": "query",
                        "name": "targeted_sample_term",
                        "schema": {
                            "items": {
                                "description": "Ontology term identifying the targeted endpoint biosample resulting from differentation or reprogramming.",
                                "title": "Targeted Sample Term",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens",
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_change",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_change",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the cell fate change treatments were introduced.",
                                "title": "Time Post Change",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_change_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_change_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the cell fate change treatments were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Change Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                                "title": "Time Post Library Delivery",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Library Delivery Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.status",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of the organism at the time of collection of the sample.",
                                "title": "Upper Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                                "title": "Upper Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/InVitroSystem"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "InVitroSystemResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the InVitroSystem collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/institutional-certificates/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate InstitutionalCertificate items. Supports filtering on fields within InstitutionalCertificate items.",
                "operationId": "institutional_certificates",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by certificate_identifier",
                        "explode": true,
                        "in": "query",
                        "name": "certificate_identifier",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the certificate.",
                                "pattern": "^IP\\d{3}-\\d{2}$",
                                "title": "Certificate Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by controlled_access",
                        "explode": true,
                        "in": "query",
                        "name": "controlled_access",
                        "schema": {
                            "items": {
                                "description": "Indicator of whether the samples are under controlled access.",
                                "title": "Controlled Access",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by data_use_limitation",
                        "explode": true,
                        "in": "query",
                        "name": "data_use_limitation",
                        "schema": {
                            "items": {
                                "description": "Code indicating the limitations on data use for data generated from the applicable samples. GRU (General research use): Use of the data is limited only by the terms of the Data Use Certification: these data will be added to the dbGaP Collection. HMB (Health/medical/biomedical): Use of the data is limited to health/medical/biomedical purposes, does not include the study of population origins or ancestry. DS (Disease specific): Use of the data must be related to the specified disease. Other: any other customized limitation.",
                                "enum": [
                                    "DS",
                                    "GRU",
                                    "HMB",
                                    "other"
                                ],
                                "title": "Data Use Limitation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by data_use_limitation_modifiers",
                        "explode": true,
                        "in": "query",
                        "name": "data_use_limitation_modifiers",
                        "schema": {
                            "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples. COL: Requestor must provide a letter of collaboration with the primary study investigator(s). GSO: Use of the data is limited to genetic studies only. IRB: Approval Required IRB Requestor must provide documentation of local IRB approval. MDS: Use of the data includes methods development research (e.g., development and testing of software or algorithms). NPU: Use of the data is limited to not-for-profit organizations. PUB: Requestor agrees to make results of studies using the data available to the larger scientific community.",
                            "items": {
                                "enum": [
                                    "COL",
                                    "GSO",
                                    "IRB",
                                    "MDS",
                                    "NPU",
                                    "PUB"
                                ],
                                "title": "Data Use Limitation Modifier",
                                "type": "string"
                            },
                            "title": "Data Use Limitation Modifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples",
                        "explode": true,
                        "in": "query",
                        "name": "samples",
                        "schema": {
                            "description": "Samples covered by this institutional certificate.",
                            "items": {
                                "title": "Sample",
                                "type": "string"
                            },
                            "title": "Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by urls",
                        "explode": true,
                        "in": "query",
                        "name": "urls",
                        "schema": {
                            "description": "Link to the institutional certification form.",
                            "items": {
                                "description": "An institutional certification form.",
                                "title": "URL",
                                "type": "string"
                            },
                            "title": "URL",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/InstitutionalCertificate"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "InstitutionalCertificateResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the InstitutionalCertificate collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/labs/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Lab items. Supports filtering on fields within Lab items.",
                "operationId": "labs",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by awards.@id",
                        "explode": true,
                        "in": "query",
                        "name": "awards.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by awards.component",
                        "explode": true,
                        "in": "query",
                        "name": "awards.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by awards.name",
                        "explode": true,
                        "in": "query",
                        "name": "awards.name",
                        "schema": {
                            "items": {
                                "description": "The official grant number from the NIH database, if applicable",
                                "pattern": "^[A-Za-z0-9\\-]+$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institute_label",
                        "explode": true,
                        "in": "query",
                        "name": "institute_label",
                        "schema": {
                            "items": {
                                "description": "An abbreviation for the institute the lab is associated with.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
                                "title": "Institute Label",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A short unique name for the lab, current convention is lower cased and hyphen delimited of PI's first and last name (e.g. john-doe).",
                                "pattern": "^[a-z0-9\\-]+$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pi",
                        "explode": true,
                        "in": "query",
                        "name": "pi",
                        "schema": {
                            "items": {
                                "description": "Principle Investigator of the lab.",
                                "title": "P.I.",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "current",
                                    "deleted",
                                    "disabled"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the lab.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Lab"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "LabResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Lab collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/matrix-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate MatrixFile items. Supports filtering on fields within MatrixFile items.",
                "operationId": "matrix_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_summary",
                        "explode": true,
                        "in": "query",
                        "name": "content_summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the data in the matrix file.",
                                "title": "Content Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dimension1",
                        "explode": true,
                        "in": "query",
                        "name": "dimension1",
                        "schema": {
                            "items": {
                                "description": "First dimension of the matrix.",
                                "enum": [
                                    "cell",
                                    "fragment",
                                    "gene",
                                    "time",
                                    "treatment",
                                    "variant",
                                    "genomic position"
                                ],
                                "title": "Dimension 1",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dimension2",
                        "explode": true,
                        "in": "query",
                        "name": "dimension2",
                        "schema": {
                            "items": {
                                "description": "Second dimension of the matrix.",
                                "enum": [
                                    "cell",
                                    "fragment",
                                    "gene",
                                    "time",
                                    "treatment",
                                    "variant",
                                    "genomic position"
                                ],
                                "title": "Dimension 2",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "h5ad",
                                    "hdf5",
                                    "mtx",
                                    "tar",
                                    "hic"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by reference_files",
                        "explode": true,
                        "in": "query",
                        "name": "reference_files",
                        "schema": {
                            "description": "Link to the reference files used to generate this file.",
                            "items": {
                                "description": "Link to a reference file used to generate this file.",
                                "title": "Reference File",
                                "type": "string"
                            },
                            "title": "Reference Files",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the matrix file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/MatrixFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "MatrixFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the MatrixFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/measurement-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate MeasurementSet items. Supports filtering on fields within MeasurementSet items.",
                "operationId": "measurement_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assay_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "assay_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by auxiliary_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "auxiliary_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by auxiliary_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "auxiliary_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by auxiliary_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "auxiliary_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by auxiliary_sets.file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "auxiliary_sets.file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this auxiliary file set.",
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                                "pattern": "^GEO:GSE\\d+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "donors.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.sex",
                        "explode": true,
                        "in": "query",
                        "name": "donors.sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.status",
                        "explode": true,
                        "in": "query",
                        "name": "donors.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "donors.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by external_image_url",
                        "explode": true,
                        "in": "query",
                        "name": "external_image_url",
                        "schema": {
                            "items": {
                                "description": "Links to the external site where images produced by this measurement are stored.",
                                "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$",
                                "title": "External Image URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this measurement set.",
                                "enum": [
                                    "experimental data"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "files.creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_size",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.href",
                        "explode": true,
                        "in": "query",
                        "name": "files.href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "files.s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiome_size",
                        "explode": true,
                        "in": "query",
                        "name": "multiome_size",
                        "schema": {
                            "items": {
                                "description": "The number of datasets included in the multiome experiment this measurement set is a part of.",
                                "minimum": 2,
                                "title": "Multiome Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by preferred_assay_title",
                        "explode": true,
                        "in": "query",
                        "name": "preferred_assay_title",
                        "schema": {
                            "items": {
                                "description": "The custom lab preferred label for the experiment performed in this measurement set.",
                                "enum": [
                                    "10x multiome",
                                    "10x multiome with MULTI-seq",
                                    "AAV-MPRA",
                                    "ATAC-seq",
                                    "CERES-seq",
                                    "Cell painting",
                                    "CRISPR FlowFISH",
                                    "DOGMA-seq",
                                    "Histone ChIP-seq",
                                    "Hi-C",
                                    "HT-recruit",
                                    "lentiMPRA",
                                    "MERFISH",
                                    "MIAA",
                                    "mN2H",
                                    "MPRA",
                                    "MPRA (scQer)",
                                    "MULTI-seq",
                                    "Parse SPLiT-seq",
                                    "Perturb-seq",
                                    "RNA-seq",
                                    "SGE",
                                    "scATAC-seq",
                                    "scNT-seq",
                                    "scNT-seq2",
                                    "scRNA-seq",
                                    "semi-qY2H",
                                    "SHARE-seq",
                                    "smFISH",
                                    "snATAC-seq",
                                    "snmC-Seq2",
                                    "snMCT-seq",
                                    "snM3C-seq",
                                    "snRNA-seq",
                                    "Spatial transcriptomics",
                                    "SUPERSTARR",
                                    "TAP-seq",
                                    "TF ChIP-seq",
                                    "VAMP-seq",
                                    "Variant FlowFISH",
                                    "Variant painting",
                                    "Y2H",
                                    "yN2H"
                                ],
                                "title": "Preferred Assay Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for conducting the assay on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by related_multiome_datasets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "related_multiome_datasets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by related_multiome_datasets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "related_multiome_datasets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.classifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.file_set_type",
                        "schema": {
                            "items": {
                                "description": "The type or category of this construct library set.",
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.small_scale_gene_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.small_scale_gene_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.small_scale_gene_list.geneid",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.small_scale_gene_list.geneid",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.small_scale_gene_list.name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.small_scale_gene_list.name",
                        "schema": {
                            "items": {
                                "description": "The full gene name preferably approved by the official nomenclature.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.small_scale_gene_list.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.small_scale_gene_list.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.small_scale_gene_list.symbol",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.small_scale_gene_list.symbol",
                        "schema": {
                            "items": {
                                "description": "Gene symbol approved by the official nomenclature.",
                                "title": "Gene Symbol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.modifications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.modifications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "samples.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sequencing_library_types",
                        "explode": true,
                        "in": "query",
                        "name": "sequencing_library_types",
                        "schema": {
                            "description": "Description of the libraries sequenced in this measurement set.",
                            "items": {
                                "enum": [
                                    "direct RNA",
                                    "exome capture",
                                    "mRNA enriched",
                                    "rRNA depleted",
                                    "polyA depleted",
                                    "polyA enriched"
                                ],
                                "title": "Sequencing Library Type",
                                "type": "string"
                            },
                            "title": "Sequencing Library Types",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeted_genes.@id",
                        "explode": true,
                        "in": "query",
                        "name": "targeted_genes.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeted_genes.geneid",
                        "explode": true,
                        "in": "query",
                        "name": "targeted_genes.geneid",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeted_genes.name",
                        "explode": true,
                        "in": "query",
                        "name": "targeted_genes.name",
                        "schema": {
                            "items": {
                                "description": "The full gene name preferably approved by the official nomenclature.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeted_genes.symbol",
                        "explode": true,
                        "in": "query",
                        "name": "targeted_genes.symbol",
                        "schema": {
                            "items": {
                                "description": "Gene symbol approved by the official nomenclature.",
                                "title": "Gene Symbol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by targeted_genes.synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "targeted_genes.synonyms",
                        "schema": {
                            "description": "Alternative symbols that have been used to refer to the gene.",
                            "items": {
                                "description": "An alternative symbol/name referring to the gene.",
                                "title": "Synonym",
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/MeasurementSet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "MeasurementSetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the MeasurementSet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/model-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate ModelFile items. Supports filtering on fields within ModelFile items.",
                "operationId": "model_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by anvil_url",
                        "explode": true,
                        "in": "query",
                        "name": "anvil_url",
                        "schema": {
                            "items": {
                                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                                "title": "AnVIL URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by controlled_access",
                        "explode": true,
                        "in": "query",
                        "name": "controlled_access",
                        "schema": {
                            "items": {
                                "description": "Boolean value, indicating the file being controlled access, if true.",
                                "title": "Controlled Access",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "hdf5",
                                    "json",
                                    "tar",
                                    "tsv"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the model file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/ModelFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ModelFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the ModelFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/model-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate ModelSet items. Supports filtering on fields within ModelSet items.",
                "operationId": "model_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assessed_genes",
                        "explode": true,
                        "in": "query",
                        "name": "assessed_genes",
                        "schema": {
                            "description": "A list of genes assessed in this model set.",
                            "items": {
                                "title": "Gene",
                                "type": "string"
                            },
                            "title": "Assessed Genes",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                                "pattern": "^GEO:GSE\\d+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "donors.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.sex",
                        "explode": true,
                        "in": "query",
                        "name": "donors.sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.status",
                        "explode": true,
                        "in": "query",
                        "name": "donors.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "donors.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this predictive model set.",
                                "enum": [
                                    "neural network",
                                    "random forest",
                                    "decision tree",
                                    "support vector machine",
                                    "variant binding effect"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "files.creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_size",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.href",
                        "explode": true,
                        "in": "query",
                        "name": "files.href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "files.s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform",
                        "schema": {
                            "items": {
                                "description": "The measurement device used to produce sequencing data.",
                                "title": "Sequencing Platform",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by model_name",
                        "explode": true,
                        "in": "query",
                        "name": "model_name",
                        "schema": {
                            "items": {
                                "description": "The custom lab name given to this predictive model set.",
                                "title": "Model Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by model_version",
                        "explode": true,
                        "in": "query",
                        "name": "model_version",
                        "schema": {
                            "items": {
                                "description": "The semantic version number for this predictive model set.",
                                "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$",
                                "title": "Model Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by model_zoo_location",
                        "explode": true,
                        "in": "query",
                        "name": "model_zoo_location",
                        "schema": {
                            "items": {
                                "description": "The link to the model on the Kipoi repository.",
                                "pattern": "^https?://kipoi\\.org/models/(\\S+)$",
                                "title": "Model Zoo Location",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by prediction_objects",
                        "explode": true,
                        "in": "query",
                        "name": "prediction_objects",
                        "schema": {
                            "description": "The objects this predictive model set is targeting.",
                            "items": {
                                "description": "An object this predictive model set is targeting.",
                                "enum": [
                                    "coding variants",
                                    "non-coding variants",
                                    "all variants",
                                    "regulatory elements",
                                    "genes"
                                ],
                                "title": "Prediction Object",
                                "type": "string"
                            },
                            "title": "Prediction Objects",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                            "items": {
                                "description": "A treatment applied to the biosample.",
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Cell Fate Change Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.classifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.modifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.modifications",
                        "schema": {
                            "description": "Links to modifications applied to this biosample.",
                            "items": {
                                "description": "Link to a modification applied to this biosample.",
                                "title": "Modification",
                                "type": "string"
                            },
                            "title": "Modifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "samples.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                            "items": {
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software_version",
                        "explode": true,
                        "in": "query",
                        "name": "software_version",
                        "schema": {
                            "items": {
                                "description": "Version of software used for the derivation of this model set.",
                                "title": "Software Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/ModelSet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ModelSetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the ModelSet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/multiplexed-samples/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate MultiplexedSample items. Supports filtering on fields within MultiplexedSample items.",
                "operationId": "multiplexed_samples",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by barcode_sample_map",
                        "explode": true,
                        "in": "query",
                        "name": "barcode_sample_map",
                        "schema": {
                            "items": {
                                "description": "The link to the barcode to sample mapping tabular file.",
                                "title": "Link to barcode sample map tabular file",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biomarkers",
                        "explode": true,
                        "in": "query",
                        "name": "biomarkers",
                        "schema": {
                            "description": "The biomarkers of the samples included in this multiplexed sample.",
                            "items": {
                                "title": "Biomarker",
                                "type": "string"
                            },
                            "title": "Biomarkers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cellular_sub_pool",
                        "explode": true,
                        "in": "query",
                        "name": "cellular_sub_pool",
                        "schema": {
                            "items": {
                                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                                "title": "Cellular Sub Pool",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classifications",
                        "explode": true,
                        "in": "query",
                        "name": "classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_obtained",
                        "explode": true,
                        "in": "query",
                        "name": "date_obtained",
                        "schema": {
                            "items": {
                                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                                "title": "Date Obtained",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors",
                        "explode": true,
                        "in": "query",
                        "name": "donors",
                        "schema": {
                            "description": "The donors of the samples included in this multiplexed sample.",
                            "items": {
                                "title": "Donor",
                                "type": "string"
                            },
                            "title": "Donors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.status",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates",
                        "schema": {
                            "description": "The institutional certificates under which use of this sample is approved.",
                            "items": {
                                "title": "Institutional Certificate",
                                "type": "string"
                            },
                            "title": "Institutional Certificates",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.status",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.summary",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by moi",
                        "explode": true,
                        "in": "query",
                        "name": "moi",
                        "schema": {
                            "items": {
                                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                                "minimum": 0,
                                "title": "Multiplicity Of Infection",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by nucleic_acid_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "nucleic_acid_delivery",
                        "schema": {
                            "items": {
                                "description": "Method of introduction of nucleic acid into the cell.",
                                "enum": [
                                    "transfection",
                                    "adenoviral transduction",
                                    "lentiviral transduction"
                                ],
                                "title": "Nucleic Acid Delivery",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by origin_of",
                        "explode": true,
                        "in": "query",
                        "name": "origin_of",
                        "schema": {
                            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                            "items": {
                                "title": "Originated Sample",
                                "type": "string"
                            },
                            "title": "Origin Sample Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_fractions",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_fractions",
                        "schema": {
                            "description": "The fractions into which this sample has been sorted.",
                            "items": {
                                "title": "Sorted Fraction Sample",
                                "type": "string"
                            },
                            "title": "Sorted Fraction Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from_detail",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from_detail",
                        "schema": {
                            "items": {
                                "description": "Detail for sample sorted into fractions capturing information about sorting.",
                                "title": "Sorted From Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount",
                        "schema": {
                            "items": {
                                "description": "The initial quantity of samples obtained.",
                                "title": "Starting Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount_units",
                        "schema": {
                            "items": {
                                "description": "The units used to quantify the amount of samples obtained.",
                                "enum": [
                                    "cells",
                                    "cells/ml",
                                    "g",
                                    "items",
                                    "mg",
                                    "whole animals",
                                    "whole embryos",
                                    "\u03bcg",
                                    "ng"
                                ],
                                "title": "Starting Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of this sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                                "title": "Time Post Library Delivery",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Library Delivery Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.status",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/MultiplexedSample"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "MultiplexedSampleResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the MultiplexedSample collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/multireport.tsv": {
            "get": {
                "description": "Like /search endpoint but returns a TSV file instead of JSON. Must specify item type(s).",
                "operationId": "report",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by item type.",
                        "explode": true,
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "example": 100,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Does not work with limit=all.",
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Any field from any item type can be used as a filter. Use '!' at end of field name for negation and 'lt:', 'lte:', 'gt:', 'gte:' with value for range queries on numeric fields. Examples: {'status!': 'in progress', 'file_size': 'gte:30000'}",
                        "explode": true,
                        "in": "query",
                        "name": "field_filters",
                        "schema": {
                            "type": "object"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Fields to include in the response. Can be repeated for multiple fields.",
                        "explode": true,
                        "in": "query",
                        "name": "field",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Object with links, or object with some links embedded.",
                        "in": "query",
                        "name": "frame",
                        "schema": {
                            "enum": [
                                "object",
                                "embedded"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/tab-separated-values": {
                                "example": "Column1\tColumn2\tColumn3\nValue1\tValue2\tValue3",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Generate a report based on search query. All results are returned.",
                "tags": [
                    "IGVF"
                ]
            }
        },
        "/open-reading-frames/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate OpenReadingFrame items. Supports filtering on fields within OpenReadingFrame items.",
                "operationId": "open_reading_frames",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award",
                        "explode": true,
                        "in": "query",
                        "name": "award",
                        "schema": {
                            "items": {
                                "description": "Grant associated with the submission.",
                                "title": "Award",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Unique identifiers from the hORFeome database",
                            "items": {
                                "description": "A unique identifier from hORFeome database.",
                                "pattern": "^(hORFeome:[1-9][0-9]*)$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene.@id",
                        "explode": true,
                        "in": "query",
                        "name": "gene.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene.geneid",
                        "explode": true,
                        "in": "query",
                        "name": "gene.geneid",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene.symbol",
                        "explode": true,
                        "in": "query",
                        "name": "gene.symbol",
                        "schema": {
                            "items": {
                                "description": "Gene symbol approved by the official nomenclature.",
                                "title": "Gene Symbol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab",
                        "explode": true,
                        "in": "query",
                        "name": "lab",
                        "schema": {
                            "items": {
                                "description": "Lab associated with the submission.",
                                "title": "Lab",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by orf_id",
                        "explode": true,
                        "in": "query",
                        "name": "orf_id",
                        "schema": {
                            "items": {
                                "description": "Open reading frame ID.",
                                "pattern": "^CCSBORF[1-9][0-9]*$",
                                "title": "ORF ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pct_coverage_orf",
                        "explode": true,
                        "in": "query",
                        "name": "pct_coverage_orf",
                        "schema": {
                            "items": {
                                "description": "The percentage of Ensembl protein covered by ORF.",
                                "maximum": 100,
                                "minimum": 0,
                                "title": "Percentage of Ensembl Protein Covered by ORF",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pct_coverage_protein",
                        "explode": true,
                        "in": "query",
                        "name": "pct_coverage_protein",
                        "schema": {
                            "items": {
                                "description": "The percentage of ORF covered by Ensembl protein.",
                                "maximum": 100,
                                "minimum": 0,
                                "title": "Percentage of ORF Covered by Ensembl Protein",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pct_identical_protein",
                        "explode": true,
                        "in": "query",
                        "name": "pct_identical_protein",
                        "schema": {
                            "items": {
                                "description": "The percentage of identical matches to Ensembl protein.",
                                "maximum": 100,
                                "minimum": 0,
                                "title": "Percentage of Identical Matches to Ensembl Protein",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protein_id",
                        "explode": true,
                        "in": "query",
                        "name": "protein_id",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL ProteinID of official nomenclature approved protein. The ProteinID does not include the current version number suffix.",
                                "pattern": "^ENSP\\d{11}.?\\d*?$",
                                "title": "ENSEMBL ProteinID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by",
                        "schema": {
                            "items": {
                                "description": "The user who submitted the object.",
                                "title": "Submitted By",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/OpenReadingFrame"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "OpenReadingFrameResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the OpenReadingFrame collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/pages/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Page items. Supports filtering on fields within Page items.",
                "operationId": "pages",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award",
                        "explode": true,
                        "in": "query",
                        "name": "award",
                        "schema": {
                            "items": {
                                "description": "Grant associated with the submission.",
                                "title": "Award",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by canonical_uri",
                        "explode": true,
                        "in": "query",
                        "name": "canonical_uri",
                        "schema": {
                            "items": {
                                "description": "The path of the page.",
                                "title": "Canonical URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab",
                        "explode": true,
                        "in": "query",
                        "name": "lab",
                        "schema": {
                            "items": {
                                "description": "Lab associated with the submission.",
                                "title": "Lab",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "The name shown in this page's URL.",
                                "pattern": "^[a-z0-9_-]+$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parent",
                        "explode": true,
                        "in": "query",
                        "name": "parent",
                        "schema": {
                            "items": {
                                "description": "The parent page associated with this page.",
                                "title": "Parent Page",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "The name shown in the browser's title bar and tabs.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Page"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PageResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Page collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/phenotype-terms/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate PhenotypeTerm items. Supports filtering on fields within PhenotypeTerm items.",
                "operationId": "phenotype_terms",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ancestors",
                        "explode": true,
                        "in": "query",
                        "name": "ancestors",
                        "schema": {
                            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Ancestors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by deprecated_ntr_terms",
                        "explode": true,
                        "in": "query",
                        "name": "deprecated_ntr_terms",
                        "schema": {
                            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                            "items": {
                                "description": "NTR term ID",
                                "pattern": "^NTR:[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "title": "Deprecated NTR terms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by is_a",
                        "explode": true,
                        "in": "query",
                        "name": "is_a",
                        "schema": {
                            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                            "items": {
                                "title": "Ontology Term",
                                "type": "string"
                            },
                            "title": "Is A",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ontology",
                        "explode": true,
                        "in": "query",
                        "name": "ontology",
                        "schema": {
                            "items": {
                                "description": "The ontology in which the term is recorded.",
                                "title": "Ontology",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "synonyms",
                        "schema": {
                            "description": "Synonyms for the term that have been recorded in an ontology.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_id",
                        "explode": true,
                        "in": "query",
                        "name": "term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing a phenotype.",
                                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                                "title": "Phenotype Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_name",
                        "explode": true,
                        "in": "query",
                        "name": "term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/PhenotypeTerm"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PhenotypeTermResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the PhenotypeTerm collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/phenotypic-features/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate PhenotypicFeature items. Supports filtering on fields within PhenotypicFeature items.",
                "operationId": "phenotypic_features",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by feature.@id",
                        "explode": true,
                        "in": "query",
                        "name": "feature.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by feature.term_id",
                        "explode": true,
                        "in": "query",
                        "name": "feature.term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing a phenotype.",
                                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                                "title": "Phenotype Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by feature.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "feature.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by observation_date",
                        "explode": true,
                        "in": "query",
                        "name": "observation_date",
                        "schema": {
                            "items": {
                                "description": "The date the feature was observed or measured.",
                                "title": "Observation Date",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by quantity",
                        "explode": true,
                        "in": "query",
                        "name": "quantity",
                        "schema": {
                            "items": {
                                "description": "A quantity associated with the phenotypic feature, if applicable.",
                                "title": "Quantity",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by quantity_units",
                        "explode": true,
                        "in": "query",
                        "name": "quantity_units",
                        "schema": {
                            "items": {
                                "description": "The unit of measurement for a quantity associated with the phenotypic feature.",
                                "enum": [
                                    "meter",
                                    "micromole",
                                    "nanogram",
                                    "microgram",
                                    "milligram",
                                    "gram",
                                    "kilogram",
                                    "milli-International Unit per milliliter",
                                    "picogram per milliliter",
                                    "nanogram per milliliter",
                                    "milligram per deciliter"
                                ],
                                "title": "Quantity Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/PhenotypicFeature"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PhenotypicFeatureResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the PhenotypicFeature collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/platform-terms/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate PlatformTerm items. Supports filtering on fields within PlatformTerm items.",
                "operationId": "platform_terms",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ancestors",
                        "explode": true,
                        "in": "query",
                        "name": "ancestors",
                        "schema": {
                            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Ancestors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by company",
                        "explode": true,
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "items": {
                                "description": "The company that developed and sells the instrument.",
                                "enum": [
                                    "10X Genomics",
                                    "Illumina",
                                    "Life Technologies",
                                    "Oxford Nanopore Technologies",
                                    "Pacific Biosciences",
                                    "Parse Biosciences",
                                    "Roche"
                                ],
                                "title": "Company",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by deprecated_ntr_terms",
                        "explode": true,
                        "in": "query",
                        "name": "deprecated_ntr_terms",
                        "schema": {
                            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                            "items": {
                                "description": "NTR term ID",
                                "pattern": "^NTR:[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "title": "Deprecated NTR terms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by is_a",
                        "explode": true,
                        "in": "query",
                        "name": "is_a",
                        "schema": {
                            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                            "items": {
                                "title": "Ontology Term",
                                "type": "string"
                            },
                            "title": "Is A",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ontology",
                        "explode": true,
                        "in": "query",
                        "name": "ontology",
                        "schema": {
                            "items": {
                                "description": "The ontology in which the term is recorded.",
                                "title": "Ontology",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sequencing_kits",
                        "explode": true,
                        "in": "query",
                        "name": "sequencing_kits",
                        "schema": {
                            "description": "The available sequencing kits for this platform.",
                            "items": {
                                "description": "A reagent kit used with a library to prepare it for sequencing.",
                                "enum": [
                                    "HiSeq SBS Kit v4",
                                    "HiSeq SR Cluster Kit v4-cBot-HS",
                                    "HiSeq PE Cluster Kit v4-cBot-HS",
                                    "HiSeq SR Rapid Cluster Kit v2",
                                    "HiSeq PE Rapid Cluster Kit v2",
                                    "HiSeq Rapid SBS Kit v2",
                                    "HiSeq 3000/4000 SBS Kit",
                                    "HiSeq 3000/4000 SR Cluster Kit",
                                    "HiSeq 3000/4000 PE Cluster Kit",
                                    "MiSeq Reagent Kit v2",
                                    "NextSeq 500 Mid Output Kit",
                                    "NextSeq 500 High Output Kit",
                                    "NextSeq 500 Mid Output v2 Kit",
                                    "NextSeq 500 High Output v2 Kit",
                                    "NextSeq 500/550 Mid-Output v2.5 Kit",
                                    "NextSeq 500/550 High-Output v2.5 Kit",
                                    "TG NextSeq 500/550 Mid-Output Kit v2.5",
                                    "TG NextSeq 500/550 High-Output Kit v2.5",
                                    "NextSeq 1000/2000 P1 Reagent Kit",
                                    "NextSeq 1000/2000 P2 Reagent Kit",
                                    "NextSeq 1000/2000 P3 Reagent Kit",
                                    "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                                    "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                                    "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                                    "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                                    "NovaSeq 6000 SP Reagent Kit v1.5",
                                    "NovaSeq 6000 S1 Reagent Kit v1.5",
                                    "NovaSeq 6000 S2 Reagent Kit v1.5",
                                    "NovaSeq 6000 S4 Reagent Kit v1.5",
                                    "NovaSeq X Series 1.5B Reagent Kit",
                                    "NovaSeq X Series 10B Reagent Kit",
                                    "NovaSeq X Series 25B Reagent Kit",
                                    "ONT Ligation Sequencing Kit V14",
                                    "Sequel sequencing kit 3.0",
                                    "Sequel II sequencing kit 2.0"
                                ],
                                "title": "Sequencing Kit",
                                "type": "string"
                            },
                            "title": "Sequencing Kits",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "synonyms",
                        "schema": {
                            "description": "Synonyms for the term that have been recorded in an ontology.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_id",
                        "explode": true,
                        "in": "query",
                        "name": "term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing a platform.",
                                "pattern": "^(EFO|NTR):[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_name",
                        "explode": true,
                        "in": "query",
                        "name": "term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/PlatformTerm"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PlatformTermResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the PlatformTerm collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/prediction-sets/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate PredictionSet items. Supports filtering on fields within PredictionSet items.",
                "operationId": "prediction_sets",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assessed_genes",
                        "explode": true,
                        "in": "query",
                        "name": "assessed_genes",
                        "schema": {
                            "description": "A list of gene(s) assessed in this prediction set. This property is used to describe the gene(s) being investigated, especially how the input variables in the prediction set affect some critical functionality of the gene(s). For example, the effect could be predicted from genetic variants on the binding affinity of a transcription factor encoded by a gene (assessed_genes). It differs from small_scale_gene_list and large_scale_gene_list, as these are used when the input variables of the prediction set are genes.",
                            "items": {
                                "title": "Gene",
                                "type": "string"
                            },
                            "title": "Assessed Genes",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.contact_pi.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.contact_pi.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.title",
                        "explode": true,
                        "in": "query",
                        "name": "award.title",
                        "schema": {
                            "items": {
                                "description": "The grant name from the NIH database, if applicable.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.@id",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.accession",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by control_for.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "control_for.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
                                "pattern": "^GEO:GSE\\d+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.@id",
                        "explode": true,
                        "in": "query",
                        "name": "donors.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.accession",
                        "explode": true,
                        "in": "query",
                        "name": "donors.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "donors.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.sex",
                        "explode": true,
                        "in": "query",
                        "name": "donors.sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.status",
                        "explode": true,
                        "in": "query",
                        "name": "donors.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "donors.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_set_type",
                        "schema": {
                            "items": {
                                "description": "The category that best describes this prediction set.",
                                "enum": [
                                    "pathogenicity",
                                    "functional effect",
                                    "protein stability",
                                    "activity level",
                                    "binding effect"
                                ],
                                "title": "File Set Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.@id",
                        "explode": true,
                        "in": "query",
                        "name": "files.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.accession",
                        "explode": true,
                        "in": "query",
                        "name": "files.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "files.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.content_type",
                        "explode": true,
                        "in": "query",
                        "name": "files.content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "files.creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_format",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.file_size",
                        "explode": true,
                        "in": "query",
                        "name": "files.file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.href",
                        "explode": true,
                        "in": "query",
                        "name": "files.href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "files.s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.sequencing_platform",
                        "explode": true,
                        "in": "query",
                        "name": "files.sequencing_platform",
                        "schema": {
                            "items": {
                                "description": "The measurement device used to produce sequencing data.",
                                "title": "Sequencing Platform",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "files.submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by files.upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "files.upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_set_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_set_for",
                        "schema": {
                            "description": "The file sets that use this file set as an input.",
                            "items": {
                                "title": "Input File Set For",
                                "type": "string"
                            },
                            "title": "Input File Set For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_sets",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_sets",
                        "schema": {
                            "description": "The file set(s) required for this prediction set.",
                            "items": {
                                "description": "A file set that serves as input for this file set.",
                                "title": "Input File Set",
                                "type": "string"
                            },
                            "title": "Input File Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_gene_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_gene_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_gene_list.accession",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_gene_list.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_gene_list.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_gene_list.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_loci_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_loci_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_loci_list.accession",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_loci_list.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by large_scale_loci_list.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "large_scale_loci_list.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.cell_fate_change_treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.cell_fate_change_treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
                            "items": {
                                "description": "A treatment applied to the biosample.",
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Cell Fate Change Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.classifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "description": "The type of the in vitro system.",
                                "enum": [
                                    "organoid",
                                    "gastruloid",
                                    "embryoid",
                                    "cell line",
                                    "differentiated cell specimen",
                                    "reprogrammed cell specimen",
                                    "pooled cell specimen"
                                ],
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.construct_library_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.construct_library_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.modifications",
                        "explode": true,
                        "in": "query",
                        "name": "samples.modifications",
                        "schema": {
                            "description": "Links to modifications applied to this biosample.",
                            "items": {
                                "description": "Link to a modification applied to this biosample.",
                                "title": "Modification",
                                "type": "string"
                            },
                            "title": "Modifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.status",
                        "explode": true,
                        "in": "query",
                        "name": "samples.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.summary",
                        "explode": true,
                        "in": "query",
                        "name": "samples.summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.@id",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.targeted_sample_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "samples.targeted_sample_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.taxa",
                        "explode": true,
                        "in": "query",
                        "name": "samples.taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples.treatments",
                        "explode": true,
                        "in": "query",
                        "name": "samples.treatments",
                        "schema": {
                            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
                            "items": {
                                "title": "Treatment",
                                "type": "string"
                            },
                            "title": "Treatments",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by scope",
                        "explode": true,
                        "in": "query",
                        "name": "scope",
                        "schema": {
                            "items": {
                                "description": "The scope or scale that this prediction set is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property.",
                                "enum": [
                                    "genes",
                                    "loci",
                                    "genome-wide"
                                ],
                                "title": "Prediction Scope",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.@id",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.geneid",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.geneid",
                        "schema": {
                            "items": {
                                "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
                                "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$",
                                "title": "ENSEMBL GeneID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.name",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.name",
                        "schema": {
                            "items": {
                                "description": "The full gene name preferably approved by the official nomenclature.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.symbol",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.symbol",
                        "schema": {
                            "items": {
                                "description": "Gene symbol approved by the official nomenclature.",
                                "title": "Gene Symbol",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_gene_list.synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_gene_list.synonyms",
                        "schema": {
                            "description": "Alternative symbols that have been used to refer to the gene.",
                            "items": {
                                "description": "An alternative symbol/name referring to the gene.",
                                "title": "Synonym",
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by small_scale_loci_list",
                        "explode": true,
                        "in": "query",
                        "name": "small_scale_loci_list",
                        "schema": {
                            "description": "A small scale (<=100) list of specific chromosomal region(s) whose functionality is investigated in this prediction set. This property describes the input variables of the prediction set. For example, this list consists of the genetic variants whose functionality is predicted in this prediction set.",
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "assembly": {
                                        "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                                        "enum": [
                                            "GRCh38",
                                            "GRCm39"
                                        ],
                                        "title": "Mapping assembly",
                                        "type": "string"
                                    },
                                    "chromosome": {
                                        "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                                        "pattern": "^(chr[0-9A-Za-z_]+)$",
                                        "title": "Chromosome",
                                        "type": "string"
                                    },
                                    "end": {
                                        "description": "The 1-based, closed (inclusive) ending coordinate.",
                                        "minimum": 1,
                                        "title": "End",
                                        "type": "integer"
                                    },
                                    "start": {
                                        "description": "The 1-based, closed (inclusive) starting coordinate.",
                                        "minimum": 1,
                                        "title": "Start",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "assembly",
                                    "chromosome",
                                    "start",
                                    "end"
                                ],
                                "title": "Locus",
                                "type": "object"
                            },
                            "title": "Small Scale Loci List",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_files_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_files_timestamp",
                        "schema": {
                            "items": {
                                "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
                                "title": "Submitted Files Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the prediction set.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/PredictionSet"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PredictionSetResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the PredictionSet collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/primary-cells/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate PrimaryCell items. Supports filtering on fields within PrimaryCell items.",
                "operationId": "primary_cells",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age",
                        "explode": true,
                        "in": "query",
                        "name": "age",
                        "schema": {
                            "items": {
                                "description": "Age of organism at the time of collection of the sample.",
                                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                                "title": "Age",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age_units",
                        "explode": true,
                        "in": "query",
                        "name": "age_units",
                        "schema": {
                            "items": {
                                "description": "The units of time associated with age of the biosample.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                ],
                                "title": "Age Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biomarkers",
                        "explode": true,
                        "in": "query",
                        "name": "biomarkers",
                        "schema": {
                            "description": "Biological markers that are associated with this sample.",
                            "items": {
                                "description": "Associated biomarker.",
                                "title": "Biomarker",
                                "type": "string"
                            },
                            "title": "Biomarkers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cellular_sub_pool",
                        "explode": true,
                        "in": "query",
                        "name": "cellular_sub_pool",
                        "schema": {
                            "items": {
                                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                                "title": "Cellular Sub Pool",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classifications",
                        "explode": true,
                        "in": "query",
                        "name": "classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_obtained",
                        "explode": true,
                        "in": "query",
                        "name": "date_obtained",
                        "schema": {
                            "items": {
                                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                                "title": "Date Harvested",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors",
                        "explode": true,
                        "in": "query",
                        "name": "donors",
                        "schema": {
                            "description": "Donor(s) the sample was derived from.",
                            "items": {
                                "description": "Donor.",
                                "title": "Donor",
                                "type": "string"
                            },
                            "title": "Donors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by embryonic",
                        "explode": true,
                        "in": "query",
                        "name": "embryonic",
                        "schema": {
                            "items": {
                                "description": "Biosample is embryonic.",
                                "title": "Embryonic",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.status",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.@id",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.certificate_identifier",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.certificate_identifier",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the certificate.",
                                "pattern": "^IP\\d{3}-\\d{2}$",
                                "title": "Certificate Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of the organism at the time of collection of the sample.",
                                "title": "Lower Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                                "title": "Lower Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.status",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.summary",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by moi",
                        "explode": true,
                        "in": "query",
                        "name": "moi",
                        "schema": {
                            "items": {
                                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                                "minimum": 0,
                                "title": "Multiplicity Of Infection",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by nucleic_acid_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "nucleic_acid_delivery",
                        "schema": {
                            "items": {
                                "description": "Method of introduction of nucleic acid into the cell.",
                                "enum": [
                                    "transfection",
                                    "adenoviral transduction",
                                    "lentiviral transduction"
                                ],
                                "title": "Nucleic Acid Delivery",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by origin_of",
                        "explode": true,
                        "in": "query",
                        "name": "origin_of",
                        "schema": {
                            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                            "items": {
                                "title": "Originated Sample",
                                "type": "string"
                            },
                            "title": "Origin Sample Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by originated_from",
                        "explode": true,
                        "in": "query",
                        "name": "originated_from",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                                "title": "Originated From",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by part_of",
                        "explode": true,
                        "in": "query",
                        "name": "part_of",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                                "title": "Part of Biosample",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parts",
                        "explode": true,
                        "in": "query",
                        "name": "parts",
                        "schema": {
                            "description": "The parts into which this sample has been divided.",
                            "items": {
                                "title": "Biosample Part",
                                "type": "string"
                            },
                            "title": "Biosample Parts",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by passage_number",
                        "explode": true,
                        "in": "query",
                        "name": "passage_number",
                        "schema": {
                            "items": {
                                "description": "Number of passages including the passages from the source.",
                                "minimum": 0,
                                "title": "Passage Number",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_from",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_from",
                        "schema": {
                            "description": "The biosamples this biosample is pooled from.",
                            "items": {
                                "title": "Primary Cell Pooled From",
                                "type": "string"
                            },
                            "title": "Biosamples Pooled From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_in",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_in",
                        "schema": {
                            "description": "The pooled samples in which this sample is included.",
                            "items": {
                                "title": "Biosample Pooled In",
                                "type": "string"
                            },
                            "title": "Pooled In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sex",
                        "explode": true,
                        "in": "query",
                        "name": "sex",
                        "schema": {
                            "items": {
                                "enum": [
                                    "female",
                                    "male",
                                    "mixed",
                                    "unspecified"
                                ],
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_fractions",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_fractions",
                        "schema": {
                            "description": "The fractions into which this sample has been sorted.",
                            "items": {
                                "title": "Sorted Fraction Sample",
                                "type": "string"
                            },
                            "title": "Sorted Fraction Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from_detail",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from_detail",
                        "schema": {
                            "items": {
                                "description": "Detail for sample sorted into fractions capturing information about sorting.",
                                "title": "Sorted From Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount",
                        "schema": {
                            "items": {
                                "description": "The initial quantity of samples obtained.",
                                "title": "Starting Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount_units",
                        "schema": {
                            "items": {
                                "description": "The units used to quantify the amount of samples obtained.",
                                "enum": [
                                    "cells",
                                    "cells/ml",
                                    "g",
                                    "items",
                                    "mg",
                                    "whole animals",
                                    "whole embryos",
                                    "\u03bcg",
                                    "ng"
                                ],
                                "title": "Starting Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens",
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                                "title": "Time Post Library Delivery",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Library Delivery Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.status",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of the organism at the time of collection of the sample.",
                                "title": "Upper Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                                "title": "Upper Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/PrimaryCell"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PrimaryCellResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the PrimaryCell collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/profiles": {
            "get": {
                "description": "Returns JSON schemas of all the item types defined in IGVF",
                "operationId": "schemas",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONSchema"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "summary": "Retrieve JSON schemas for all item types",
                "tags": [
                    "IGVF"
                ]
            }
        },
        "/profiles/{item_type}": {
            "get": {
                "description": "Returns JSON schemas of all the item types defined in IGVF",
                "operationId": "schema_for_item_type",
                "parameters": [
                    {
                        "description": "The name of the item type",
                        "in": "path",
                        "name": "item_type",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ItemType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONSchema"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "summary": "Retrieve JSON schema for item type",
                "tags": [
                    "IGVF"
                ]
            }
        },
        "/publications/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Publication items. Supports filtering on fields within Publication items.",
                "operationId": "publications",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by abstract",
                        "explode": true,
                        "in": "query",
                        "name": "abstract",
                        "schema": {
                            "items": {
                                "description": "Abstract of the publication or communication.",
                                "title": "Abstract",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by authors",
                        "explode": true,
                        "in": "query",
                        "name": "authors",
                        "schema": {
                            "items": {
                                "description": "The authors of the publication.",
                                "title": "Authors",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_published",
                        "explode": true,
                        "in": "query",
                        "name": "date_published",
                        "schema": {
                            "items": {
                                "description": "The date the publication or communication was published; must be in YYYY-MM-DD format.",
                                "title": "Publication Date",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_revised",
                        "explode": true,
                        "in": "query",
                        "name": "date_revised",
                        "schema": {
                            "items": {
                                "description": "The date the publication was revised.",
                                "title": "Date Revised",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors",
                        "explode": true,
                        "in": "query",
                        "name": "donors",
                        "schema": {
                            "description": "The donors associated with this publication.",
                            "items": {
                                "title": "Donor",
                                "type": "string"
                            },
                            "title": "Donors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets",
                        "schema": {
                            "description": "The file sets associated with this publication.",
                            "items": {
                                "title": "File Set",
                                "type": "string"
                            },
                            "title": "File Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by issue",
                        "explode": true,
                        "in": "query",
                        "name": "issue",
                        "schema": {
                            "items": {
                                "description": "The issue of the publication.",
                                "title": "Issue",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by journal",
                        "explode": true,
                        "in": "query",
                        "name": "journal",
                        "schema": {
                            "items": {
                                "description": "The journal of the publication.",
                                "title": "Journal",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by page",
                        "explode": true,
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "items": {
                                "description": "Pagination of the reference",
                                "title": "Page",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publication_year",
                        "explode": true,
                        "in": "query",
                        "name": "publication_year",
                        "schema": {
                            "items": {
                                "description": "The year the publication was published.",
                                "title": "Publication Year",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by published_by",
                        "explode": true,
                        "in": "query",
                        "name": "published_by",
                        "schema": {
                            "description": "The affiliation of the lab with a larger organization, such as IGVF.",
                            "items": {
                                "enum": [
                                    "community",
                                    "IGVF",
                                    "ENCODE"
                                ],
                                "title": "Published By",
                                "type": "string"
                            },
                            "title": "Published By",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by samples",
                        "explode": true,
                        "in": "query",
                        "name": "samples",
                        "schema": {
                            "description": "The samples associated with this publication.",
                            "items": {
                                "title": "Sample",
                                "type": "string"
                            },
                            "title": "Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software",
                        "explode": true,
                        "in": "query",
                        "name": "software",
                        "schema": {
                            "description": "The software associated with this publication.",
                            "items": {
                                "title": "Software",
                                "type": "string"
                            },
                            "title": "Software",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software_versions",
                        "explode": true,
                        "in": "query",
                        "name": "software_versions",
                        "schema": {
                            "description": "The software versions associated with this publication.",
                            "items": {
                                "title": "Software Version",
                                "type": "string"
                            },
                            "title": "Software Versions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the publication.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "Title of the publication or communication.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by volume",
                        "explode": true,
                        "in": "query",
                        "name": "volume",
                        "schema": {
                            "items": {
                                "description": "The volume of the publication.",
                                "title": "Volume",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by workflows",
                        "explode": true,
                        "in": "query",
                        "name": "workflows",
                        "schema": {
                            "description": "The workflows associated with this publication.",
                            "items": {
                                "title": "Workflow",
                                "type": "string"
                            },
                            "title": "Workflows",
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Publication"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "PublicationResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Publication collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/reference-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate ReferenceFile items. Supports filtering on fields within ReferenceFile items.",
                "operationId": "reference_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by anvil_url",
                        "explode": true,
                        "in": "query",
                        "name": "anvil_url",
                        "schema": {
                            "items": {
                                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                                "title": "AnVIL URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assembly",
                        "explode": true,
                        "in": "query",
                        "name": "assembly",
                        "schema": {
                            "items": {
                                "description": "Genome assembly applicable for the reference data.",
                                "enum": [
                                    "GRCh38",
                                    "hg19",
                                    "GRCm39",
                                    "mm10"
                                ],
                                "title": "Genome Assembly",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by controlled_access",
                        "explode": true,
                        "in": "query",
                        "name": "controlled_access",
                        "schema": {
                            "items": {
                                "description": "Boolean value, indicating the file being controlled access, if true.",
                                "title": "Controlled Access",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "^(GENCODE|GRC|ENSEMBL):.+$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by external",
                        "explode": true,
                        "in": "query",
                        "name": "external",
                        "schema": {
                            "items": {
                                "description": "Indicates whether the file was obtained from an external, non-IGVF source.",
                                "title": "External",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by external_id",
                        "explode": true,
                        "in": "query",
                        "name": "external_id",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the file at its original source.",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "bed",
                                    "csv",
                                    "dat",
                                    "fasta",
                                    "gaf",
                                    "gds",
                                    "gtf",
                                    "obo",
                                    "owl",
                                    "PWM",
                                    "tar",
                                    "tsv",
                                    "txt",
                                    "vcf",
                                    "xml"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_type",
                        "schema": {
                            "items": {
                                "description": "The subtype of bed files.",
                                "enum": [
                                    "bed12",
                                    "bed3",
                                    "bed3+",
                                    "bed5",
                                    "bed6",
                                    "bed6+",
                                    "bed9",
                                    "bed9+",
                                    "mpra_starr"
                                ],
                                "title": "File Format Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by source_url",
                        "explode": true,
                        "in": "query",
                        "name": "source_url",
                        "schema": {
                            "items": {
                                "description": "Link to external resource, such as NCBI or GENCODE, where the reference data was obtained.",
                                "title": "Source Url",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources",
                        "explode": true,
                        "in": "query",
                        "name": "sources",
                        "schema": {
                            "description": "The originating lab(s) or vendor(s).",
                            "items": {
                                "description": "The originating lab or vendor.",
                                "title": "Source",
                                "type": "string"
                            },
                            "title": "Sources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the reference file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotation",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotation",
                        "schema": {
                            "items": {
                                "description": "The annotation and version of the reference resource.",
                                "enum": [
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34"
                                ],
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/ReferenceFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "ReferenceFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the ReferenceFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/rodent-donors/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate RodentDonor items. Supports filtering on fields within RodentDonor items.",
                "operationId": "rodent_donors",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
                                "pattern": "^(GEO:SAMN\\d+)|(IMSR_JAX:\\d{6})|(ENCODE:ENCDO\\d{3}[A-Z]{3})$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by genotype",
                        "explode": true,
                        "in": "query",
                        "name": "genotype",
                        "schema": {
                            "items": {
                                "description": "The genotype of the strain according to accepted nomenclature conventions.",
                                "title": "Strain Genotype",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by individual_rodent",
                        "explode": true,
                        "in": "query",
                        "name": "individual_rodent",
                        "schema": {
                            "items": {
                                "description": "This rodent donor represents an individual rodent.",
                                "title": "Individual Rodent",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.@id",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.feature.@id",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.feature.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.feature.term_id",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.feature.term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology term identifier describing a phenotype.",
                                "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$",
                                "title": "Phenotype Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.feature.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.feature.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.observation_date",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.observation_date",
                        "schema": {
                            "items": {
                                "description": "The date the feature was observed or measured.",
                                "title": "Observation Date",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by phenotypic_features.quantity_units",
                        "explode": true,
                        "in": "query",
                        "name": "phenotypic_features.quantity_units",
                        "schema": {
                            "items": {
                                "description": "The unit of measurement for a quantity associated with the phenotypic feature.",
                                "title": "Quantity Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by rodent_identifier",
                        "explode": true,
                        "in": "query",
                        "name": "rodent_identifier",
                        "schema": {
                            "items": {
                                "description": "The identifier for this individual rodent donor.",
                                "title": "Rodent Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sex",
                        "explode": true,
                        "in": "query",
                        "name": "sex",
                        "schema": {
                            "items": {
                                "description": "Sex of the donor.",
                                "enum": [
                                    "male",
                                    "female",
                                    "unspecified"
                                ],
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by strain",
                        "explode": true,
                        "in": "query",
                        "name": "strain",
                        "schema": {
                            "items": {
                                "description": "The specific strain designation of a non-human donor.",
                                "title": "Strain Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by strain_background",
                        "explode": true,
                        "in": "query",
                        "name": "strain_background",
                        "schema": {
                            "items": {
                                "description": "The specific parent strain designation of a non-human donor.",
                                "enum": [
                                    "A/J (AJ)",
                                    "C57BL/6J (B6)",
                                    "129S1/SvImJ (129)",
                                    "NOD/ShiLtJ (NOD)",
                                    "NZO/H1LtJ (NZO)",
                                    "CAST/EiJ (CAST)",
                                    "PWK/PhJ (PWK)",
                                    "WSB/EiJ (WSB)",
                                    "CAST (M. m. castaneus)",
                                    "WSB (M. m. domesticus)",
                                    "PWK (M. m. musculus)"
                                ],
                                "title": "Strain Background",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the rodent donor.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/RodentDonor"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "RodentDonorResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the RodentDonor collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/sample-terms/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate SampleTerm items. Supports filtering on fields within SampleTerm items.",
                "operationId": "sample_terms",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ancestors",
                        "explode": true,
                        "in": "query",
                        "name": "ancestors",
                        "schema": {
                            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Ancestors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cell_slims",
                        "explode": true,
                        "in": "query",
                        "name": "cell_slims",
                        "schema": {
                            "description": "Cells associated with the sample term.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Cell",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Sample identifiers from external resources, such as Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((Cellosaurus:CVCL_\\w{4})|(DepMap:ACH-[0-9]{6}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by deprecated_ntr_terms",
                        "explode": true,
                        "in": "query",
                        "name": "deprecated_ntr_terms",
                        "schema": {
                            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
                            "items": {
                                "description": "NTR term ID",
                                "pattern": "^NTR:[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "title": "Deprecated NTR terms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by developmental_slims",
                        "explode": true,
                        "in": "query",
                        "name": "developmental_slims",
                        "schema": {
                            "description": "Developmental stages associated with the sample term.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Developmental Slims",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by is_a",
                        "explode": true,
                        "in": "query",
                        "name": "is_a",
                        "schema": {
                            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
                            "items": {
                                "title": "Ontology Term",
                                "type": "string"
                            },
                            "title": "Is A",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the ontology term, reformatted from the original term ID.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ontology",
                        "explode": true,
                        "in": "query",
                        "name": "ontology",
                        "schema": {
                            "items": {
                                "description": "The ontology in which the term is recorded.",
                                "title": "Ontology",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by organ_slims",
                        "explode": true,
                        "in": "query",
                        "name": "organ_slims",
                        "schema": {
                            "description": "Organs associated with the sample term.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Organ",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the ontology term.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by synonyms",
                        "explode": true,
                        "in": "query",
                        "name": "synonyms",
                        "schema": {
                            "description": "Synonyms for the term that have been recorded in an ontology.",
                            "items": {
                                "type": "string"
                            },
                            "title": "Synonyms",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by system_slims",
                        "explode": true,
                        "in": "query",
                        "name": "system_slims",
                        "schema": {
                            "description": "Organ systems associated with the sample term.",
                            "items": {
                                "type": "string"
                            },
                            "title": "System Slims",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_id",
                        "explode": true,
                        "in": "query",
                        "name": "term_id",
                        "schema": {
                            "items": {
                                "description": "An ontology identifier describing a biological sample",
                                "pattern": "^(UBERON|EFO|CL|CLO|NTR):[0-9]{2,8}$",
                                "title": "Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by term_name",
                        "explode": true,
                        "in": "query",
                        "name": "term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/SampleTerm"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SampleTermResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the SampleTerm collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/search": {
            "get": {
                "description": "Search endpoint that accepts various query parameters to filter, sort, and paginate results. Supports complex filtering on types and fields within JSON objects.",
                "operationId": "search",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by item type.",
                        "explode": true,
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "example": 100,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Does not work with limit=all.",
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Any field from any item type can be used as a filter. Use '!' at end of field name for negation and 'lt:', 'lte:', 'gt:', 'gte:' with value for range queries on numeric fields. Examples: {'status!': 'in progress', 'file_size': 'gte:30000'}",
                        "explode": true,
                        "in": "query",
                        "name": "field_filters",
                        "schema": {
                            "type": "object"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "discriminator": {
                                                    "mapping": {},
                                                    "propertyName": "@type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/AccessKey"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/AnalysisStep"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/AnalysisStepVersion"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Award"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Biomarker"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Document"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/HumanDonor"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/RodentDonor"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/AlignmentFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ConfigurationFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ImageFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/MatrixFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ModelFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ReferenceFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/SequenceFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/SignalFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/TabularFile"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/AnalysisSet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/AuxiliarySet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ConstructLibrarySet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/CuratedSet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/MeasurementSet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/ModelSet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/PredictionSet"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Gene"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Image"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/InstitutionalCertificate"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Lab"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/CrisprModification"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/DegronModification"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/AssayTerm"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/PhenotypeTerm"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/PlatformTerm"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/SampleTerm"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/OpenReadingFrame"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Page"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/PhenotypicFeature"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Publication"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/InVitroSystem"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/MultiplexedSample"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/PrimaryCell"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/TechnicalSample"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Tissue"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/WholeOrganism"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Software"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/SoftwareVersion"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Source"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Treatment"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/User"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Workflow"
                                                    }
                                                ],
                                                "title": "SearchResultItem"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SearchResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    }
                },
                "summary": "Search for items in the IGVF Project.",
                "tags": [
                    "IGVF"
                ]
            }
        },
        "/sequence-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate SequenceFile items. Supports filtering on fields within SequenceFile items.",
                "operationId": "sequence_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by anvil_url",
                        "explode": true,
                        "in": "query",
                        "name": "anvil_url",
                        "schema": {
                            "items": {
                                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                                "title": "AnVIL URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by base_modifications",
                        "explode": true,
                        "in": "query",
                        "name": "base_modifications",
                        "schema": {
                            "description": "The chemical modifications to bases in a DNA sequence that are detected in this file.",
                            "items": {
                                "description": "The chemical modification to bases in a DNA sequence that is detected in this file.",
                                "enum": [
                                    "4mC",
                                    "5hmC",
                                    "5mC",
                                    "6mA"
                                ],
                                "title": "Base Modification",
                                "type": "string"
                            },
                            "title": "Base Modifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by controlled_access",
                        "explode": true,
                        "in": "query",
                        "name": "controlled_access",
                        "schema": {
                            "items": {
                                "description": "Boolean value, indicating the file being controlled access, if true.",
                                "title": "Controlled Access",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "^(SRA:(SRR|SRX)\\d+)$",
                                "title": "External identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "bam",
                                    "fastq",
                                    "pod5"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by flowcell_id",
                        "explode": true,
                        "in": "query",
                        "name": "flowcell_id",
                        "schema": {
                            "items": {
                                "description": "The alphanumeric identifier for the flowcell of a sequencing machine.",
                                "pattern": "^[a-zA-Z0-9-]+$",
                                "title": "Flowcell ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by illumina_read_type",
                        "explode": true,
                        "in": "query",
                        "name": "illumina_read_type",
                        "schema": {
                            "items": {
                                "description": "The read type of the file. Relevant only for files produced using an Illumina sequencing platform.",
                                "enum": [
                                    "R1",
                                    "R2",
                                    "R3",
                                    "I1",
                                    "I2"
                                ],
                                "title": "Illumina Read Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by index",
                        "explode": true,
                        "in": "query",
                        "name": "index",
                        "schema": {
                            "items": {
                                "description": "An Illumina index associated with the file.",
                                "title": "Index",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lane",
                        "explode": true,
                        "in": "query",
                        "name": "lane",
                        "schema": {
                            "items": {
                                "description": "An integer identifying the lane of a sequencing machine.",
                                "minimum": 1,
                                "title": "Lane",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by maximum_read_length",
                        "explode": true,
                        "in": "query",
                        "name": "maximum_read_length",
                        "schema": {
                            "items": {
                                "description": "For high-throughput sequencing, the maximum number of contiguous nucleotides determined by sequencing.",
                                "maximum": 300000000,
                                "minimum": 0,
                                "title": "Maximum Read Length",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by mean_read_length",
                        "explode": true,
                        "in": "query",
                        "name": "mean_read_length",
                        "schema": {
                            "items": {
                                "description": "For high-throughput sequencing, the mean number of contiguous nucleotides determined by sequencing.",
                                "maximum": 300000000,
                                "minimum": 0,
                                "title": "Mean Read Length",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by minimum_read_length",
                        "explode": true,
                        "in": "query",
                        "name": "minimum_read_length",
                        "schema": {
                            "items": {
                                "description": "For high-throughput sequencing, the minimum number of contiguous nucleotides determined by sequencing.",
                                "maximum": 300000000,
                                "minimum": 0,
                                "title": "Minimum Read Length",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by read_count",
                        "explode": true,
                        "in": "query",
                        "name": "read_count",
                        "schema": {
                            "items": {
                                "description": "Number of reads in a fastq file.",
                                "minimum": 0,
                                "title": "Read Count",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by seqspecs",
                        "explode": true,
                        "in": "query",
                        "name": "seqspecs",
                        "schema": {
                            "description": "Link(s) to the associated seqspec YAML configuration file(s).",
                            "items": {
                                "title": "Seqspecs",
                                "type": "string"
                            },
                            "title": "Seqspecs",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sequencing_kit",
                        "explode": true,
                        "in": "query",
                        "name": "sequencing_kit",
                        "schema": {
                            "items": {
                                "description": "A reagent kit used with a library to prepare it for sequencing.",
                                "enum": [
                                    "HiSeq SBS Kit v4",
                                    "HiSeq SR Cluster Kit v4-cBot-HS",
                                    "HiSeq PE Cluster Kit v4-cBot-HS",
                                    "HiSeq SR Rapid Cluster Kit v2",
                                    "HiSeq PE Rapid Cluster Kit v2",
                                    "HiSeq Rapid SBS Kit v2",
                                    "HiSeq 3000/4000 SBS Kit",
                                    "HiSeq 3000/4000 SR Cluster Kit",
                                    "HiSeq 3000/4000 PE Cluster Kit",
                                    "MiSeq Reagent Kit v2",
                                    "NextSeq 500 Mid Output Kit",
                                    "NextSeq 500 High Output Kit",
                                    "NextSeq 500 Mid Output v2 Kit",
                                    "NextSeq 500 High Output v2 Kit",
                                    "NextSeq 500/550 Mid-Output v2.5 Kit",
                                    "NextSeq 500/550 High-Output v2.5 Kit",
                                    "TG NextSeq 500/550 Mid-Output Kit v2.5",
                                    "TG NextSeq 500/550 High-Output Kit v2.5",
                                    "NextSeq 1000/2000 P1 Reagent Kit",
                                    "NextSeq 1000/2000 P2 Reagent Kit",
                                    "NextSeq 1000/2000 P3 Reagent Kit",
                                    "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                                    "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                                    "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                                    "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                                    "NovaSeq 6000 SP Reagent Kit v1.5",
                                    "NovaSeq 6000 S1 Reagent Kit v1.5",
                                    "NovaSeq 6000 S2 Reagent Kit v1.5",
                                    "NovaSeq 6000 S4 Reagent Kit v1.5",
                                    "NovaSeq X Series 1.5B Reagent Kit",
                                    "NovaSeq X Series 10B Reagent Kit",
                                    "NovaSeq X Series 25B Reagent Kit",
                                    "ONT Ligation Sequencing Kit V14",
                                    "Sequel sequencing kit 3.0",
                                    "Sequel II sequencing kit 2.0"
                                ],
                                "title": "Sequencing Kit",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sequencing_platform",
                        "explode": true,
                        "in": "query",
                        "name": "sequencing_platform",
                        "schema": {
                            "items": {
                                "description": "The measurement device used to produce sequencing data.",
                                "title": "Sequencing Platform",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sequencing_run",
                        "explode": true,
                        "in": "query",
                        "name": "sequencing_run",
                        "schema": {
                            "items": {
                                "description": "An ordinal number indicating which sequencing run of the associated library that the file belongs to.",
                                "minimum": 1,
                                "title": "Sequencing Run",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sequence file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/SequenceFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SequenceFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the SequenceFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/signal-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate SignalFile items. Supports filtering on fields within SignalFile items.",
                "operationId": "signal_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assembly",
                        "explode": true,
                        "in": "query",
                        "name": "assembly",
                        "schema": {
                            "items": {
                                "description": "Genome assembly applicable for the annotation data.",
                                "enum": [
                                    "GRCh38",
                                    "GRCm39"
                                ],
                                "title": "Genome Assembly",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_summary",
                        "explode": true,
                        "in": "query",
                        "name": "content_summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the data in the signal file.",
                                "title": "Content Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "bigWig"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by filtered",
                        "explode": true,
                        "in": "query",
                        "name": "filtered",
                        "schema": {
                            "items": {
                                "description": "Indicates if the signal file is filtered.",
                                "title": "Filtered",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by normalized",
                        "explode": true,
                        "in": "query",
                        "name": "normalized",
                        "schema": {
                            "items": {
                                "description": "Indicates if the signal file is normalized.",
                                "title": "Normalized",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by reference_files",
                        "explode": true,
                        "in": "query",
                        "name": "reference_files",
                        "schema": {
                            "description": "Link to the reference files used to generate this file.",
                            "items": {
                                "description": "Link to a reference file used to generate this file.",
                                "title": "Reference File",
                                "type": "string"
                            },
                            "title": "Reference Files",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by start_view_position",
                        "explode": true,
                        "in": "query",
                        "name": "start_view_position",
                        "schema": {
                            "items": {
                                "description": "The 0-based coordinate for the default starting position when viewing the signal in a genome browser.",
                                "pattern": "^(chr(X|Y|M|[1-9]|1[0-9]|2[0-2]):[0-9]+)$",
                                "title": "Start View Position",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by strand_specificity",
                        "explode": true,
                        "in": "query",
                        "name": "strand_specificity",
                        "schema": {
                            "items": {
                                "description": "The strandedness of the signal file: plus, minus, or unstranded.",
                                "enum": [
                                    "plus",
                                    "minus",
                                    "unstranded"
                                ],
                                "title": "Strand Specificity",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the signal file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotation",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotation",
                        "schema": {
                            "items": {
                                "description": "The annotation and version of the reference resource.",
                                "enum": [
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34"
                                ],
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/SignalFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SignalFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the SignalFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/software-versions/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate SoftwareVersion items. Supports filtering on fields within SoftwareVersion items.",
                "operationId": "software_versions",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by download_id",
                        "explode": true,
                        "in": "query",
                        "name": "download_id",
                        "schema": {
                            "items": {
                                "description": "The MD5 checksum, SHA-1 commit ID, image hash, or similar permanent identifier of the particular version of software used.",
                                "title": "Download ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by downloaded_url",
                        "explode": true,
                        "in": "query",
                        "name": "downloaded_url",
                        "schema": {
                            "items": {
                                "description": "An external resource to track the version of the software downloaded.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for a software version.",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software.@id",
                        "explode": true,
                        "in": "query",
                        "name": "software.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by software.title",
                        "explode": true,
                        "in": "query",
                        "name": "software.title",
                        "schema": {
                            "items": {
                                "description": "The preferred viewable name of the software.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by version",
                        "explode": true,
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "items": {
                                "description": "The version of a particular software.",
                                "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$",
                                "title": "Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/SoftwareVersion"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SoftwareVersionResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the SoftwareVersion collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/software/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Software items. Supports filtering on fields within Software items.",
                "operationId": "software",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "Unique name of the software package; a lowercase version of the title.",
                                "pattern": "^[a-z0-9\\-\\_]+",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by source_url",
                        "explode": true,
                        "in": "query",
                        "name": "source_url",
                        "schema": {
                            "items": {
                                "description": "An external resource to the codebase.",
                                "title": "Source URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "The preferred viewable name of the software.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by used_by",
                        "explode": true,
                        "in": "query",
                        "name": "used_by",
                        "schema": {
                            "description": "The component(s) of the IGVF consortium that utilize this software.",
                            "items": {
                                "enum": [
                                    "consortium analysis",
                                    "DACC",
                                    "processing pipelines"
                                ],
                                "title": "Used by",
                                "type": "string"
                            },
                            "title": "Used by",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by versions",
                        "explode": true,
                        "in": "query",
                        "name": "versions",
                        "schema": {
                            "description": "A list of versions that have been released for this software.",
                            "items": {
                                "title": "Version",
                                "type": "string"
                            },
                            "title": "Versions",
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Software"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SoftwareResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Software collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/sources/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Source items. Supports filtering on fields within Source items.",
                "operationId": "sources",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "A short unique name for the source.",
                                "pattern": "^[a-z0-9\\-]+$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the source.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "The complete name of the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Source"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "SourceResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Source collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/tabular-files/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate TabularFile items. Supports filtering on fields within TabularFile items.",
                "operationId": "tabular_files",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_step_version",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_step_version",
                        "schema": {
                            "items": {
                                "description": "The analysis step version of the file.",
                                "title": "Analysis Step Version",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by anvil_url",
                        "explode": true,
                        "in": "query",
                        "name": "anvil_url",
                        "schema": {
                            "items": {
                                "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
                                "title": "AnVIL URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by assembly",
                        "explode": true,
                        "in": "query",
                        "name": "assembly",
                        "schema": {
                            "items": {
                                "description": "Genome assembly applicable for the tabular data.",
                                "enum": [
                                    "GRCh38",
                                    "GRCm39"
                                ],
                                "title": "Genome Assembly",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "content_md5sum",
                        "schema": {
                            "items": {
                                "description": "The MD5sum of the uncompressed file.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "Content MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by content_type",
                        "explode": true,
                        "in": "query",
                        "name": "content_type",
                        "schema": {
                            "items": {
                                "description": "The type of content in the file.",
                                "title": "Content Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by controlled_access",
                        "explode": true,
                        "in": "query",
                        "name": "controlled_access",
                        "schema": {
                            "items": {
                                "description": "Boolean value, indicating the file being controlled access, if true.",
                                "title": "Controlled Access",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                            "items": {
                                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                                "pattern": "(?!)",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by derived_from",
                        "explode": true,
                        "in": "query",
                        "name": "derived_from",
                        "schema": {
                            "description": "The files participating as inputs into software to produce this output file.",
                            "items": {
                                "title": "File Derived From",
                                "type": "string"
                            },
                            "title": "Derived From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format",
                        "explode": true,
                        "in": "query",
                        "name": "file_format",
                        "schema": {
                            "items": {
                                "description": "The file format or extension of the file.",
                                "enum": [
                                    "bed",
                                    "csv",
                                    "gtf",
                                    "tsv",
                                    "txt",
                                    "vcf"
                                ],
                                "title": "File Format",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_specifications",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_specifications",
                        "schema": {
                            "description": "Document that further explains the file format.",
                            "items": {
                                "title": "File Format Specifications Document",
                                "type": "string"
                            },
                            "title": "File Format Specifications Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_format_type",
                        "explode": true,
                        "in": "query",
                        "name": "file_format_type",
                        "schema": {
                            "items": {
                                "description": "The subtype of bed files.",
                                "enum": [
                                    "bed12",
                                    "bed3",
                                    "bed3+",
                                    "bed5",
                                    "bed6",
                                    "bed6+",
                                    "bed9",
                                    "bed9+",
                                    "mpra_starr"
                                ],
                                "title": "File Format Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_set",
                        "explode": true,
                        "in": "query",
                        "name": "file_set",
                        "schema": {
                            "items": {
                                "description": "The file set that this file belongs to.",
                                "title": "File Set",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_size",
                        "explode": true,
                        "in": "query",
                        "name": "file_size",
                        "schema": {
                            "items": {
                                "description": "File size specified in bytes.",
                                "minimum": 0,
                                "title": "File Size",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by gene_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "gene_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a gene list for.",
                            "items": {
                                "title": "Gene List For",
                                "type": "string"
                            },
                            "title": "Gene List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by href",
                        "explode": true,
                        "in": "query",
                        "name": "href",
                        "schema": {
                            "items": {
                                "description": "The download path to obtain file.",
                                "title": "Download URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by input_file_for",
                        "explode": true,
                        "in": "query",
                        "name": "input_file_for",
                        "schema": {
                            "description": "The files which are derived from this file.",
                            "items": {
                                "title": "Input File For",
                                "type": "string"
                            },
                            "title": "Input File For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by integrated_in",
                        "explode": true,
                        "in": "query",
                        "name": "integrated_in",
                        "schema": {
                            "description": "Construct library set(s) that this file was used for in insert design.",
                            "items": {
                                "title": "Integrated In",
                                "type": "string"
                            },
                            "title": "Integrated In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by loci_list_for",
                        "explode": true,
                        "in": "query",
                        "name": "loci_list_for",
                        "schema": {
                            "description": "File Set(s) that this file is a loci list for.",
                            "items": {
                                "title": "Loci List For",
                                "type": "string"
                            },
                            "title": "Loci List For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by md5sum",
                        "explode": true,
                        "in": "query",
                        "name": "md5sum",
                        "schema": {
                            "items": {
                                "description": "The md5sum of the file being transferred.",
                                "maxLength": 32,
                                "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
                                "title": "MD5sum",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by s3_uri",
                        "explode": true,
                        "in": "query",
                        "name": "s3_uri",
                        "schema": {
                            "items": {
                                "description": "The S3 URI of public file object.",
                                "title": "S3 URI",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_file_name",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_file_name",
                        "schema": {
                            "items": {
                                "description": "Original name of the file.",
                                "title": "Submitted File Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the tabular file.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by transcriptome_annotation",
                        "explode": true,
                        "in": "query",
                        "name": "transcriptome_annotation",
                        "schema": {
                            "items": {
                                "description": "The annotation and version of the reference resource.",
                                "enum": [
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34"
                                ],
                                "title": "Transcriptome Annotation",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upload_status",
                        "explode": true,
                        "in": "query",
                        "name": "upload_status",
                        "schema": {
                            "items": {
                                "description": "The upload/validation status of the file.",
                                "enum": [
                                    "pending",
                                    "file not found",
                                    "invalidated",
                                    "validated"
                                ],
                                "title": "Upload Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by validation_error_detail",
                        "explode": true,
                        "in": "query",
                        "name": "validation_error_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why the file failed the automated content checks.",
                                "title": "Validation Error Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/TabularFile"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "TabularFileResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the TabularFile collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/technical-samples/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate TechnicalSample items. Supports filtering on fields within TechnicalSample items.",
                "operationId": "technical_samples",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classifications",
                        "explode": true,
                        "in": "query",
                        "name": "classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_obtained",
                        "explode": true,
                        "in": "query",
                        "name": "date_obtained",
                        "schema": {
                            "items": {
                                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                                "title": "Date Obtained",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.status",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates",
                        "schema": {
                            "description": "The institutional certificates under which use of this sample is approved.",
                            "items": {
                                "title": "Institutional Certificate",
                                "type": "string"
                            },
                            "title": "Institutional Certificates",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by moi",
                        "explode": true,
                        "in": "query",
                        "name": "moi",
                        "schema": {
                            "items": {
                                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                                "minimum": 0,
                                "title": "Multiplicity Of Infection",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by nucleic_acid_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "nucleic_acid_delivery",
                        "schema": {
                            "items": {
                                "description": "Method of introduction of nucleic acid into the cell.",
                                "enum": [
                                    "transfection",
                                    "adenoviral transduction",
                                    "lentiviral transduction"
                                ],
                                "title": "Nucleic Acid Delivery",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by origin_of",
                        "explode": true,
                        "in": "query",
                        "name": "origin_of",
                        "schema": {
                            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                            "items": {
                                "title": "Originated Sample",
                                "type": "string"
                            },
                            "title": "Origin Sample Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_material",
                        "explode": true,
                        "in": "query",
                        "name": "sample_material",
                        "schema": {
                            "items": {
                                "enum": [
                                    "undefined",
                                    "inorganic",
                                    "synthetic",
                                    "organic"
                                ],
                                "title": "Sample Material",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_fractions",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_fractions",
                        "schema": {
                            "description": "The fractions into which this sample has been sorted.",
                            "items": {
                                "title": "Sorted Fraction Sample",
                                "type": "string"
                            },
                            "title": "Sorted Fraction Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from_detail",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from_detail",
                        "schema": {
                            "items": {
                                "description": "Detail for sample sorted into fractions capturing information about sorting.",
                                "title": "Sorted From Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount",
                        "schema": {
                            "items": {
                                "description": "The initial quantity of samples obtained.",
                                "title": "Starting Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount_units",
                        "schema": {
                            "items": {
                                "description": "The units used to quantify the amount of samples obtained.",
                                "enum": [
                                    "cells",
                                    "cells/ml",
                                    "g",
                                    "items",
                                    "mg",
                                    "whole animals",
                                    "whole embryos",
                                    "\u03bcg",
                                    "ng"
                                ],
                                "title": "Starting Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of this sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "enum": [
                                    "Saccharomyces cerevisiae",
                                    "Homo sapiens"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                                "title": "Time Post Library Delivery",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Library Delivery Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/TechnicalSample"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "TechnicalSampleResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the TechnicalSample collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/tissues/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Tissue items. Supports filtering on fields within Tissue items.",
                "operationId": "tissues",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age",
                        "explode": true,
                        "in": "query",
                        "name": "age",
                        "schema": {
                            "items": {
                                "description": "Age of organism at the time of collection of the sample.",
                                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                                "title": "Age",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age_units",
                        "explode": true,
                        "in": "query",
                        "name": "age_units",
                        "schema": {
                            "items": {
                                "description": "The units of time associated with age of the biosample.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                ],
                                "title": "Age Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biomarkers",
                        "explode": true,
                        "in": "query",
                        "name": "biomarkers",
                        "schema": {
                            "description": "Biological markers that are associated with this sample.",
                            "items": {
                                "description": "Associated biomarker.",
                                "title": "Biomarker",
                                "type": "string"
                            },
                            "title": "Biomarkers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by ccf_id",
                        "explode": true,
                        "in": "query",
                        "name": "ccf_id",
                        "schema": {
                            "items": {
                                "description": "HubMap Common Coordinate Framework unique identifier corresponding to the organ, biological structure, and spatial location of the tissue specimen.",
                                "title": "Common Coordinate Framework Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cellular_sub_pool",
                        "explode": true,
                        "in": "query",
                        "name": "cellular_sub_pool",
                        "schema": {
                            "items": {
                                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                                "title": "Cellular Sub Pool",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classifications",
                        "explode": true,
                        "in": "query",
                        "name": "classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_obtained",
                        "explode": true,
                        "in": "query",
                        "name": "date_obtained",
                        "schema": {
                            "items": {
                                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                                "title": "Date Harvested",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors",
                        "explode": true,
                        "in": "query",
                        "name": "donors",
                        "schema": {
                            "description": "Donor(s) the sample was derived from.",
                            "items": {
                                "description": "Donor.",
                                "title": "Donor",
                                "type": "string"
                            },
                            "title": "Donors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by embryonic",
                        "explode": true,
                        "in": "query",
                        "name": "embryonic",
                        "schema": {
                            "items": {
                                "description": "Biosample is embryonic.",
                                "title": "Embryonic",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.status",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.@id",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.certificate_identifier",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.certificate_identifier",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the certificate.",
                                "pattern": "^IP\\d{3}-\\d{2}$",
                                "title": "Certificate Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of the organism at the time of collection of the sample.",
                                "title": "Lower Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                                "title": "Lower Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.status",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.summary",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by moi",
                        "explode": true,
                        "in": "query",
                        "name": "moi",
                        "schema": {
                            "items": {
                                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                                "minimum": 0,
                                "title": "Multiplicity Of Infection",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by nucleic_acid_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "nucleic_acid_delivery",
                        "schema": {
                            "items": {
                                "description": "Method of introduction of nucleic acid into the cell.",
                                "enum": [
                                    "transfection",
                                    "adenoviral transduction",
                                    "lentiviral transduction"
                                ],
                                "title": "Nucleic Acid Delivery",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by origin_of",
                        "explode": true,
                        "in": "query",
                        "name": "origin_of",
                        "schema": {
                            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                            "items": {
                                "title": "Originated Sample",
                                "type": "string"
                            },
                            "title": "Origin Sample Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by originated_from",
                        "explode": true,
                        "in": "query",
                        "name": "originated_from",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                                "title": "Originated From",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by part_of",
                        "explode": true,
                        "in": "query",
                        "name": "part_of",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                                "title": "Part of Biosample",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parts",
                        "explode": true,
                        "in": "query",
                        "name": "parts",
                        "schema": {
                            "description": "The parts into which this sample has been divided.",
                            "items": {
                                "title": "Biosample Part",
                                "type": "string"
                            },
                            "title": "Biosample Parts",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pmi",
                        "explode": true,
                        "in": "query",
                        "name": "pmi",
                        "schema": {
                            "items": {
                                "description": "The amount of time elapsed since death.",
                                "minimum": 1,
                                "title": "Post-mortem Interval",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pmi_units",
                        "explode": true,
                        "in": "query",
                        "name": "pmi_units",
                        "schema": {
                            "items": {
                                "description": "The unit in which the PMI time was reported.",
                                "enum": [
                                    "second",
                                    "minute",
                                    "hour",
                                    "day",
                                    "week"
                                ],
                                "title": "Post-mortem Interval Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_from",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_from",
                        "schema": {
                            "description": "The biosamples this biosample is pooled from.",
                            "items": {
                                "title": "Tissue Pooled From",
                                "type": "string"
                            },
                            "title": "Biosamples Pooled From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_in",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_in",
                        "schema": {
                            "description": "The pooled samples in which this sample is included.",
                            "items": {
                                "title": "Biosample Pooled In",
                                "type": "string"
                            },
                            "title": "Pooled In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by preservation_method",
                        "explode": true,
                        "in": "query",
                        "name": "preservation_method",
                        "schema": {
                            "items": {
                                "description": "The method by which the tissue was preserved: cryopreservation (slow-freeze) or flash-freezing.",
                                "enum": [
                                    "cryopreservation",
                                    "flash-freezing"
                                ],
                                "title": "Preservation Method",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sex",
                        "explode": true,
                        "in": "query",
                        "name": "sex",
                        "schema": {
                            "items": {
                                "enum": [
                                    "female",
                                    "male",
                                    "mixed",
                                    "unspecified"
                                ],
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_fractions",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_fractions",
                        "schema": {
                            "description": "The fractions into which this sample has been sorted.",
                            "items": {
                                "title": "Sorted Fraction Sample",
                                "type": "string"
                            },
                            "title": "Sorted Fraction Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from_detail",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from_detail",
                        "schema": {
                            "items": {
                                "description": "Detail for sample sorted into fractions capturing information about sorting.",
                                "title": "Sorted From Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount",
                        "schema": {
                            "items": {
                                "description": "The initial quantity of samples obtained.",
                                "title": "Starting Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount_units",
                        "schema": {
                            "items": {
                                "description": "The units used to quantify the amount of samples obtained.",
                                "enum": [
                                    "cells",
                                    "cells/ml",
                                    "g",
                                    "items",
                                    "mg",
                                    "whole animals",
                                    "whole embryos",
                                    "\u03bcg",
                                    "ng"
                                ],
                                "title": "Starting Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens",
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                                "title": "Time Post Library Delivery",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Library Delivery Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.status",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of the organism at the time of collection of the sample.",
                                "title": "Upper Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                                "title": "Upper Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Tissue"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "TissueResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Tissue collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/treatments/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Treatment items. Supports filtering on fields within Treatment items.",
                "operationId": "treatments",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by amount",
                        "explode": true,
                        "in": "query",
                        "name": "amount",
                        "schema": {
                            "items": {
                                "description": "Specific quantity of the applied treatment (used in conjunction with amount_units).",
                                "title": "Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "amount_units",
                        "schema": {
                            "items": {
                                "description": "A unit for an amount other than those for time or temperature.",
                                "enum": [
                                    "mg/kg",
                                    "mg/mL",
                                    "mM",
                                    "ng/mL",
                                    "nM",
                                    "percent",
                                    "\u03bcg/kg",
                                    "\u03bcg/kg",
                                    "\u03bcg/mL",
                                    "\u03bcM",
                                    "kpa"
                                ],
                                "title": "Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biosamples_treated",
                        "explode": true,
                        "in": "query",
                        "name": "biosamples_treated",
                        "schema": {
                            "description": "The samples which have been treated using this treatment.",
                            "items": {
                                "title": "Biosamples Treated",
                                "type": "string"
                            },
                            "title": "Biosamples Treated",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by depletion",
                        "explode": true,
                        "in": "query",
                        "name": "depletion",
                        "schema": {
                            "items": {
                                "description": "Treatment is depleted.",
                                "title": "Depletion",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that describe the treatment protocol details.",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by duration",
                        "explode": true,
                        "in": "query",
                        "name": "duration",
                        "schema": {
                            "items": {
                                "description": "Duration indicates the time elapsed between the start and end of the treatment.",
                                "title": "Duration",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by duration_units",
                        "explode": true,
                        "in": "query",
                        "name": "duration_units",
                        "schema": {
                            "items": {
                                "description": "A unit of time.",
                                "enum": [
                                    "second",
                                    "minute",
                                    "hour",
                                    "day"
                                ],
                                "title": "Duration Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pH",
                        "explode": true,
                        "in": "query",
                        "name": "pH",
                        "schema": {
                            "items": {
                                "description": "Final pH of the solution containing a chemical compound (if applicable)",
                                "title": "pH",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by post_treatment_time",
                        "explode": true,
                        "in": "query",
                        "name": "post_treatment_time",
                        "schema": {
                            "items": {
                                "description": "Post treatment time in conjunction with post treatment time units is used to specify the time that has passed between the point when biosamples were removed from the treatment solution before being sampled or treated with the next treatment.",
                                "title": "Post-treatment Time",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by post_treatment_time_units",
                        "explode": true,
                        "in": "query",
                        "name": "post_treatment_time_units",
                        "schema": {
                            "items": {
                                "description": "A unit of time.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Post-treatment Time Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by purpose",
                        "explode": true,
                        "in": "query",
                        "name": "purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "enum": [
                                    "activation",
                                    "agonist",
                                    "antagonist",
                                    "control",
                                    "differentiation",
                                    "de-differentiation",
                                    "perturbation",
                                    "selection",
                                    "stimulation"
                                ],
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "archived",
                                    "deleted",
                                    "in progress",
                                    "released"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by temperature",
                        "explode": true,
                        "in": "query",
                        "name": "temperature",
                        "schema": {
                            "items": {
                                "description": "The temperature in Celsius to which the sample was exposed",
                                "title": "Temperature",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by temperature_units",
                        "explode": true,
                        "in": "query",
                        "name": "temperature_units",
                        "schema": {
                            "items": {
                                "description": "A unit of temperature.",
                                "enum": [
                                    "Celsius"
                                ],
                                "title": "Temperature Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatment_term_id",
                        "explode": true,
                        "in": "query",
                        "name": "treatment_term_id",
                        "schema": {
                            "items": {
                                "description": "Ontology identifier describing a component in the treatment.",
                                "pattern": "^((CHEBI:[0-9]{1,7})|(UniProtKB:[A-Z0-9]{6})|(NTR:[0-9]{2,8}))$",
                                "title": "Treatment Term ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatment_term_name",
                        "explode": true,
                        "in": "query",
                        "name": "treatment_term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc.",
                                "title": "Treatment Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "enum": [
                                    "chemical",
                                    "protein",
                                    "environmental"
                                ],
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Treatment"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "TreatmentResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Treatment collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/users/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate User items. Supports filtering on fields within User items.",
                "operationId": "users",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by email",
                        "explode": true,
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "items": {
                                "description": "The email associated with the user's account.",
                                "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
                                "title": "Email",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by first_name",
                        "explode": true,
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "items": {
                                "description": "The user's first (given) name.",
                                "title": "First Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by groups",
                        "explode": true,
                        "in": "query",
                        "name": "groups",
                        "schema": {
                            "description": "Additional access control groups",
                            "items": {
                                "enum": [
                                    "admin",
                                    "read-only-admin",
                                    "verified"
                                ],
                                "title": "Group",
                                "type": "string"
                            },
                            "title": "Groups",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by job_title",
                        "explode": true,
                        "in": "query",
                        "name": "job_title",
                        "schema": {
                            "items": {
                                "description": "The role of the user in their lab or organization.",
                                "enum": [
                                    "Principal Investigator",
                                    "Co-Investigator",
                                    "Project Manager",
                                    "Submitter",
                                    "Post Doc",
                                    "Data Wrangler",
                                    "Scientist",
                                    "Computational Scientist",
                                    "Software Developer",
                                    "NHGRI staff member",
                                    "Other"
                                ],
                                "title": "Job Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab",
                        "explode": true,
                        "in": "query",
                        "name": "lab",
                        "schema": {
                            "items": {
                                "description": "Lab user is primarily associated with.",
                                "title": "Lab",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by last_name",
                        "explode": true,
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "items": {
                                "description": "The user's last (family) name.",
                                "title": "Last Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "current",
                                    "deleted",
                                    "disabled"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submits_for",
                        "explode": true,
                        "in": "query",
                        "name": "submits_for",
                        "schema": {
                            "description": "Labs user is authorized to submit data for.",
                            "items": {
                                "description": "A lab user is authorized to submit for.",
                                "title": "Lab Submittable For",
                                "type": "string"
                            },
                            "title": "Submits For",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by title",
                        "explode": true,
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by viewing_groups",
                        "explode": true,
                        "in": "query",
                        "name": "viewing_groups",
                        "schema": {
                            "description": "The group that determines which set of data the user has permission to view.",
                            "items": {
                                "enum": [
                                    "community",
                                    "IGVF"
                                ],
                                "title": "View Access Group",
                                "type": "string"
                            },
                            "title": "View Access Groups",
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "UserResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the User collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/whole-organisms/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate WholeOrganism items. Supports filtering on fields within WholeOrganism items.",
                "operationId": "whole_organisms",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age",
                        "explode": true,
                        "in": "query",
                        "name": "age",
                        "schema": {
                            "items": {
                                "description": "Age of organism at the time of collection of the sample.",
                                "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
                                "title": "Age",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by age_units",
                        "explode": true,
                        "in": "query",
                        "name": "age_units",
                        "schema": {
                            "items": {
                                "description": "The units of time associated with age of the biosample.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                ],
                                "title": "Age Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by biomarkers",
                        "explode": true,
                        "in": "query",
                        "name": "biomarkers",
                        "schema": {
                            "description": "Biological markers that are associated with this sample.",
                            "items": {
                                "description": "Associated biomarker.",
                                "title": "Biomarker",
                                "type": "string"
                            },
                            "title": "Biomarkers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by cellular_sub_pool",
                        "explode": true,
                        "in": "query",
                        "name": "cellular_sub_pool",
                        "schema": {
                            "items": {
                                "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
                                "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
                                "title": "Cellular Sub Pool",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by classifications",
                        "explode": true,
                        "in": "query",
                        "name": "classifications",
                        "schema": {
                            "description": "The general category of this type of sample.",
                            "items": {
                                "title": "Classification",
                                "type": "string"
                            },
                            "title": "Classifications",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by construct_library_sets",
                        "explode": true,
                        "in": "query",
                        "name": "construct_library_sets",
                        "schema": {
                            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
                            "items": {
                                "title": "Construct Library Set",
                                "type": "string"
                            },
                            "title": "Construct Library Sets",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by date_obtained",
                        "explode": true,
                        "in": "query",
                        "name": "date_obtained",
                        "schema": {
                            "items": {
                                "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
                                "title": "Date Obtained",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by dbxrefs",
                        "explode": true,
                        "in": "query",
                        "name": "dbxrefs",
                        "schema": {
                            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
                            "items": {
                                "description": "An identifier from external resource.",
                                "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$",
                                "title": "External Identifier",
                                "type": "string"
                            },
                            "title": "External Resources",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by disease_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "disease_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by donors",
                        "explode": true,
                        "in": "query",
                        "name": "donors",
                        "schema": {
                            "description": "Donor(s) the sample was derived from.",
                            "items": {
                                "description": "Donor.",
                                "title": "Donor",
                                "type": "string"
                            },
                            "title": "Donors",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by embryonic",
                        "explode": true,
                        "in": "query",
                        "name": "embryonic",
                        "schema": {
                            "items": {
                                "description": "Biosample is embryonic.",
                                "title": "Embryonic",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.@id",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.accession",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.aliases",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.assay_term.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.assay_term.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.status",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by file_sets.summary",
                        "explode": true,
                        "in": "query",
                        "name": "file_sets.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.@id",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by institutional_certificates.certificate_identifier",
                        "explode": true,
                        "in": "query",
                        "name": "institutional_certificates.certificate_identifier",
                        "schema": {
                            "items": {
                                "description": "A unique identifier for the certificate.",
                                "pattern": "^IP\\d{3}-\\d{2}$",
                                "title": "Certificate Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lot_id",
                        "explode": true,
                        "in": "query",
                        "name": "lot_id",
                        "schema": {
                            "items": {
                                "description": "The lot identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Lot ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of the organism at the time of collection of the sample.",
                                "title": "Lower Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lower_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "lower_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
                                "title": "Lower Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.status",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by modifications.summary",
                        "explode": true,
                        "in": "query",
                        "name": "modifications.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by moi",
                        "explode": true,
                        "in": "query",
                        "name": "moi",
                        "schema": {
                            "items": {
                                "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
                                "minimum": 0,
                                "title": "Multiplicity Of Infection",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.@id",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by multiplexed_in.accession",
                        "explode": true,
                        "in": "query",
                        "name": "multiplexed_in.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by nucleic_acid_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "nucleic_acid_delivery",
                        "schema": {
                            "items": {
                                "description": "Method of introduction of nucleic acid into the cell.",
                                "enum": [
                                    "transfection",
                                    "adenoviral transduction",
                                    "lentiviral transduction"
                                ],
                                "title": "Nucleic Acid Delivery",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by origin_of",
                        "explode": true,
                        "in": "query",
                        "name": "origin_of",
                        "schema": {
                            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
                            "items": {
                                "title": "Originated Sample",
                                "type": "string"
                            },
                            "title": "Origin Sample Of",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by originated_from",
                        "explode": true,
                        "in": "query",
                        "name": "originated_from",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
                                "title": "Originated From",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by part_of",
                        "explode": true,
                        "in": "query",
                        "name": "part_of",
                        "schema": {
                            "items": {
                                "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
                                "title": "Part of Biosample",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by parts",
                        "explode": true,
                        "in": "query",
                        "name": "parts",
                        "schema": {
                            "description": "The parts into which this sample has been divided.",
                            "items": {
                                "title": "Biosample Part",
                                "type": "string"
                            },
                            "title": "Biosample Parts",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_from",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_from",
                        "schema": {
                            "description": "The biosamples this biosample is pooled from.",
                            "items": {
                                "description": "Pooled biosample.",
                                "title": "Biosample Pooled From",
                                "type": "string"
                            },
                            "title": "Biosamples Pooled From",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by pooled_in",
                        "explode": true,
                        "in": "query",
                        "name": "pooled_in",
                        "schema": {
                            "description": "The pooled samples in which this sample is included.",
                            "items": {
                                "title": "Biosample Pooled In",
                                "type": "string"
                            },
                            "title": "Pooled In",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by product_id",
                        "explode": true,
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "items": {
                                "description": "The product identifier provided by the originating lab or vendor.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Product ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by protocols",
                        "explode": true,
                        "in": "query",
                        "name": "protocols",
                        "schema": {
                            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
                            "items": {
                                "pattern": "^https://www\\.protocols\\.io/(\\S+)$",
                                "title": "Protocol",
                                "type": "string"
                            },
                            "title": "Protocols",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sample_terms.term_name",
                        "explode": true,
                        "in": "query",
                        "name": "sample_terms.term_name",
                        "schema": {
                            "items": {
                                "description": "Ontology term describing a biological sample, assay, trait, or disease.",
                                "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
                                "title": "Term Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sex",
                        "explode": true,
                        "in": "query",
                        "name": "sex",
                        "schema": {
                            "items": {
                                "enum": [
                                    "female",
                                    "male",
                                    "mixed",
                                    "unspecified"
                                ],
                                "title": "Sex",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_fractions",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_fractions",
                        "schema": {
                            "description": "The fractions into which this sample has been sorted.",
                            "items": {
                                "title": "Sorted Fraction Sample",
                                "type": "string"
                            },
                            "title": "Sorted Fraction Samples",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from.accession",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from.accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sorted_from_detail",
                        "explode": true,
                        "in": "query",
                        "name": "sorted_from_detail",
                        "schema": {
                            "items": {
                                "description": "Detail for sample sorted into fractions capturing information about sorting.",
                                "title": "Sorted From Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by sources.@id",
                        "explode": true,
                        "in": "query",
                        "name": "sources.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount",
                        "schema": {
                            "items": {
                                "description": "The initial quantity of samples obtained.",
                                "title": "Starting Amount",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by starting_amount_units",
                        "explode": true,
                        "in": "query",
                        "name": "starting_amount_units",
                        "schema": {
                            "items": {
                                "description": "The units used to quantify the amount of samples obtained.",
                                "enum": [
                                    "cells",
                                    "cells/ml",
                                    "g",
                                    "items",
                                    "mg",
                                    "whole animals",
                                    "whole embryos",
                                    "\u03bcg",
                                    "ng"
                                ],
                                "title": "Starting Amount Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the sample.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by taxa",
                        "explode": true,
                        "in": "query",
                        "name": "taxa",
                        "schema": {
                            "items": {
                                "description": "The species of the organism.",
                                "enum": [
                                    "Homo sapiens",
                                    "Mus musculus"
                                ],
                                "title": "Taxa",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery",
                        "schema": {
                            "items": {
                                "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
                                "title": "Time Post Library Delivery",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by time_post_library_delivery_units",
                        "explode": true,
                        "in": "query",
                        "name": "time_post_library_delivery_units",
                        "schema": {
                            "items": {
                                "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
                                "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                ],
                                "title": "Time Post Library Delivery Units",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.@id",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.purpose",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.purpose",
                        "schema": {
                            "items": {
                                "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway.",
                                "title": "Purpose",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.status",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.summary",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.summary",
                        "schema": {
                            "items": {
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by treatments.treatment_type",
                        "explode": true,
                        "in": "query",
                        "name": "treatments.treatment_type",
                        "schema": {
                            "items": {
                                "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness.",
                                "title": "Treatment Type",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of the organism at the time of collection of the sample.",
                                "title": "Upper Bound Age",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by upper_bound_age_in_hours",
                        "explode": true,
                        "in": "query",
                        "name": "upper_bound_age_in_hours",
                        "schema": {
                            "items": {
                                "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
                                "title": "Upper Bound Age In Hours",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by url",
                        "explode": true,
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "items": {
                                "description": "An external resource with additional information.",
                                "title": "URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by virtual",
                        "explode": true,
                        "in": "query",
                        "name": "virtual",
                        "schema": {
                            "items": {
                                "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
                                "title": "Virtual",
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/WholeOrganism"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "WholeOrganismResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the WholeOrganism collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/workflows/@@listing": {
            "get": {
                "description": "Collection endpoint that accepts various query parameters to filter, sort, and paginate Workflow items. Supports filtering on fields within Workflow items.",
                "operationId": "workflows",
                "parameters": [
                    {
                        "description": "Query string for searching.",
                        "example": "variant flowfish jurkat",
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of results to return. Default is 25. Use 'all' for all results.",
                        "examples": {
                            "all": {
                                "value": "all"
                            },
                            "number": {
                                "value": 100
                            }
                        },
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/schemas/Limit"
                        }
                    },
                    {
                        "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields. Does not work with limit=all.",
                        "examples": {
                            "file_size": {
                                "value": "-file_size"
                            },
                            "lab": {
                                "value": "lab.title"
                            }
                        },
                        "explode": true,
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by @id",
                        "explode": true,
                        "in": "query",
                        "name": "@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by accession",
                        "explode": true,
                        "in": "query",
                        "name": "accession",
                        "schema": {
                            "items": {
                                "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
                                "title": "Accession",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by aliases",
                        "explode": true,
                        "in": "query",
                        "name": "aliases",
                        "schema": {
                            "description": "Lab specific identifiers to reference an object.",
                            "items": {
                                "description": "A lab specific identifier to reference an object.",
                                "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$",
                                "title": "Lab Alias",
                                "type": "string"
                            },
                            "title": "Aliases",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by alternate_accessions",
                        "explode": true,
                        "in": "query",
                        "name": "alternate_accessions",
                        "schema": {
                            "description": "Accessions previously assigned to objects that have been merged with this object.",
                            "items": {
                                "description": "An accession previously assigned to an object that has been merged with this object.",
                                "title": "Alternate Accession",
                                "type": "string"
                            },
                            "title": "Alternate Accessions",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by analysis_steps",
                        "explode": true,
                        "in": "query",
                        "name": "analysis_steps",
                        "schema": {
                            "description": "The analysis steps which are part of this workflow.",
                            "items": {
                                "title": "Analysis Step",
                                "type": "string"
                            },
                            "title": "Analysis Steps",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.@id",
                        "explode": true,
                        "in": "query",
                        "name": "award.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by award.component",
                        "explode": true,
                        "in": "query",
                        "name": "award.component",
                        "schema": {
                            "items": {
                                "description": "The project component the award is associated with.",
                                "title": "Project Component",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by collections",
                        "explode": true,
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "description": "Some samples are part of particular data collections.",
                            "items": {
                                "enum": [
                                    "ClinGen",
                                    "ENCODE",
                                    "GREGoR",
                                    "IGVF_catalog_beta_v0.1",
                                    "IGVF_catalog_beta_v0.2",
                                    "IGVF_catalog_beta_v0.3",
                                    "IGVF_catalog_beta_v0.4",
                                    "MaveDB",
                                    "MPRAbase",
                                    "Vista"
                                ],
                                "type": "string"
                            },
                            "title": "Collections",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by creation_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "creation_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was created.",
                                "title": "Creation Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by description",
                        "explode": true,
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "items": {
                                "description": "A plain text description of the object.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Description",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by documents",
                        "explode": true,
                        "in": "query",
                        "name": "documents",
                        "schema": {
                            "description": "Documents that provide additional information (not data file).",
                            "items": {
                                "description": "A document that provides additional information (not data file).",
                                "title": "Document",
                                "type": "string"
                            },
                            "title": "Documents",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.@id",
                        "explode": true,
                        "in": "query",
                        "name": "lab.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by lab.title",
                        "explode": true,
                        "in": "query",
                        "name": "lab.title",
                        "schema": {
                            "items": {
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by name",
                        "explode": true,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "description": "The preferred viewable name of the workflow.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Name",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by notes",
                        "explode": true,
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "items": {
                                "description": "DACC internal notes.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Notes",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.@id",
                        "explode": true,
                        "in": "query",
                        "name": "publications.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by publications.publication_identifiers",
                        "explode": true,
                        "in": "query",
                        "name": "publications.publication_identifiers",
                        "schema": {
                            "description": "The publication identifiers associated with this publication object.",
                            "items": {
                                "description": "An identifier that references data found in the object.",
                                "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$",
                                "title": "Publication Identifier",
                                "type": "string"
                            },
                            "title": "Publication Identifiers",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by release_timestamp",
                        "explode": true,
                        "in": "query",
                        "name": "release_timestamp",
                        "schema": {
                            "items": {
                                "description": "The date the object was released.",
                                "title": "Release Timestamp",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by revoke_detail",
                        "explode": true,
                        "in": "query",
                        "name": "revoke_detail",
                        "schema": {
                            "items": {
                                "description": "Explanation of why an object was transitioned to the revoked status.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Revoke Detail",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by source_url",
                        "explode": true,
                        "in": "query",
                        "name": "source_url",
                        "schema": {
                            "items": {
                                "description": "An external resource to the code base of the workflow in github.",
                                "pattern": "^https?://github\\.com/(\\S+)$",
                                "title": "Source URL",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by standards_page.@id",
                        "explode": true,
                        "in": "query",
                        "name": "standards_page.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by standards_page.title",
                        "explode": true,
                        "in": "query",
                        "name": "standards_page.title",
                        "schema": {
                            "items": {
                                "description": "The name shown in the browser's title bar and tabs.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by status",
                        "explode": true,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "items": {
                                "description": "The status of the metadata object.",
                                "enum": [
                                    "in progress",
                                    "released",
                                    "deleted",
                                    "replaced",
                                    "revoked",
                                    "archived"
                                ],
                                "title": "Status",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.@id",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.@id",
                        "schema": {
                            "items": {
                                "title": "ID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitted_by.title",
                        "explode": true,
                        "in": "query",
                        "name": "submitted_by.title",
                        "schema": {
                            "items": {
                                "description": "The full name of the user.",
                                "title": "Title",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by submitter_comment",
                        "explode": true,
                        "in": "query",
                        "name": "submitter_comment",
                        "schema": {
                            "items": {
                                "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
                                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
                                "title": "Submitter Comment",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by summary",
                        "explode": true,
                        "in": "query",
                        "name": "summary",
                        "schema": {
                            "items": {
                                "description": "A summary of the object.",
                                "title": "Summary",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by uuid",
                        "explode": true,
                        "in": "query",
                        "name": "uuid",
                        "schema": {
                            "items": {
                                "description": "The unique identifier associated with every object.",
                                "title": "UUID",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by workflow_repositories",
                        "explode": true,
                        "in": "query",
                        "name": "workflow_repositories",
                        "schema": {
                            "description": "Resources hosting the workflow.",
                            "items": {
                                "description": "Resource hosting the workflow.",
                                "title": "Workflow Repository",
                                "type": "string"
                            },
                            "title": "Workflow Repositories",
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Filter by workflow_version",
                        "explode": true,
                        "in": "query",
                        "name": "workflow_version",
                        "schema": {
                            "items": {
                                "description": "The version of this workflow.",
                                "minimum": 1,
                                "title": "Workflow Version",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "@graph": {
                                            "items": {
                                                "$ref": "#/components/schemas/Workflow"
                                            },
                                            "type": "array"
                                        },
                                        "@id": {
                                            "type": "string"
                                        },
                                        "@type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string"
                                                    },
                                                    "terms": {
                                                        "items": {
                                                            "title": "SearchFacetTermValue",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "SearchFacet",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": "WorkflowResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoResultsResponse"
                                }
                            }
                        },
                        "description": "No results found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "List items in the Workflow collection.",
                "tags": [
                    "Collections"
                ]
            }
        },
        "/{file_id}/@@download": {
            "get": {
                "description": "Returns underlying file associated with file metadata",
                "operationId": "download",
                "parameters": [
                    {
                        "description": "The unique identifier for the file to download, e.g. @id (/tabular-files/IGVFFI8092FZKL/), accession (IGVFFI8092FZKL), or UUID (fdbdc159-e5b9-40a8-b788-3f72c9886b03).",
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "description": "Item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Download file.",
                "tags": [
                    "IGVF"
                ]
            }
        },
        "/{resource_id}": {
            "get": {
                "description": "Retrieve detailed information about a specific item using its @id or uuid.",
                "operationId": "get_by_id",
                "parameters": [
                    {
                        "description": "The unique identifier for the resource i.e. @id (`/sequence-files/IGVFFI1165AJSO/`), accession (`IGVFFI1165AJSO`) or UUID (`fffcd64e-af02-4675-8953-7352459ee06a`).",
                        "examples": {
                            "@id": {
                                "value": "/sequence-files/IGVFFI1165AJSO/"
                            },
                            "accession": {
                                "value": "IGVFFI1165AJSO"
                            },
                            "uuid": {
                                "value": "fffcd64e-af02-4675-8953-7352459ee06a"
                            }
                        },
                        "in": "path",
                        "name": "resource_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Constant value. Do not set.",
                        "in": "query",
                        "name": "frame",
                        "required": true,
                        "schema": {
                            "enum": [
                                "object"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "discriminator": {
                                        "mapping": {},
                                        "propertyName": "@type"
                                    },
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/AccessKey"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AnalysisStep"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AnalysisStepVersion"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Award"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Biomarker"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Document"
                                        },
                                        {
                                            "$ref": "#/components/schemas/HumanDonor"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RodentDonor"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AlignmentFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ConfigurationFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ImageFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MatrixFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ModelFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ReferenceFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SequenceFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SignalFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TabularFile"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AnalysisSet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AuxiliarySet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ConstructLibrarySet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CuratedSet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MeasurementSet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ModelSet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PredictionSet"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Gene"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Image"
                                        },
                                        {
                                            "$ref": "#/components/schemas/InstitutionalCertificate"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Lab"
                                        },
                                        {
                                            "$ref": "#/components/schemas/CrisprModification"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DegronModification"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AssayTerm"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PhenotypeTerm"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PlatformTerm"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SampleTerm"
                                        },
                                        {
                                            "$ref": "#/components/schemas/OpenReadingFrame"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Page"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PhenotypicFeature"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Publication"
                                        },
                                        {
                                            "$ref": "#/components/schemas/InVitroSystem"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MultiplexedSample"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PrimaryCell"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TechnicalSample"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Tissue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/WholeOrganism"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Software"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SoftwareVersion"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Source"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Treatment"
                                        },
                                        {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Workflow"
                                        }
                                    ],
                                    "title": "Item"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Object not found"
                    }
                },
                "summary": "Get item information",
                "tags": [
                    "IGVF"
                ]
            }
        }
    },
    "security": [
        {},
        {
            "basicAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://api.data.igvf.org"
        }
    ]
}